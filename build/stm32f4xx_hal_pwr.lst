ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f4xx_hal_pwr.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_PWR_DeInit
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_PWR_DeInit:
  25              	.LFB130:
  26              		.file 1 "Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c"
   1:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
   2:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
   3:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @file    stm32f4xx_hal_pwr.c
   4:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @author  MCD Application Team
   5:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following 
   7:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Initialization and de-initialization functions
   9:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Peripheral Control functions 
  10:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         
  11:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  12:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @attention
  13:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  14:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  15:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * All rights reserved.</center></h2>
  16:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  17:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  18:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * the "License"; You may not use this file except in compliance with the
  19:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * License. You may obtain a copy of the License at:
  20:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                        opensource.org/licenses/BSD-3-Clause
  21:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  22:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  23:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */ 
  24:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  25:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  26:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #include "stm32f4xx_hal.h"
  27:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  28:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup STM32F4xx_HAL_Driver
  29:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  30:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  31:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  32:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR PWR
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 2


  33:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief PWR HAL module driver
  34:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  35:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  36:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  37:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  38:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  39:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  40:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  41:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup PWR_Private_Constants
  42:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  43:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  44:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
  45:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_PVD_Mode_Mask PWR PVD Mode Mask
  46:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  47:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */     
  48:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_IT               0x00010000U
  49:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_EVT              0x00020000U
  50:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_RISING_EDGE           0x00000001U
  51:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_FALLING_EDGE          0x00000002U
  52:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  53:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  54:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  55:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  56:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  57:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  58:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */    
  59:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private macro -------------------------------------------------------------*/
  60:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
  61:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  62:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private functions ---------------------------------------------------------*/
  63:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  64:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
  65:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  66:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  67:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  68:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions 
  69:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief    Initialization and de-initialization functions
  70:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  71:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
  72:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  73:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
  74:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  75:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
  76:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       After reset, the backup domain (RTC registers, RTC backup data 
  77:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       registers and backup SRAM) is protected against possible unwanted 
  78:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       write accesses. 
  79:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To enable access to the RTC Domain and RTC registers, proceed as follows:
  80:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable the Power Controller (PWR) APB1 interface clock using the
  81:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             __HAL_RCC_PWR_CLK_ENABLE() macro.
  82:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  83:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  
  84:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
  85:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  86:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  87:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  88:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  89:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Deinitializes the HAL PWR peripheral registers to their default reset values.
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 3


  90:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
  91:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  92:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
  93:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  27              		.loc 1 93 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  94:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  32              		.loc 1 94 3 view .LVU1
  33 0000 044B     		ldr	r3, .L2
  34 0002 1A6A     		ldr	r2, [r3, #32]
  35 0004 42F08052 		orr	r2, r2, #268435456
  36 0008 1A62     		str	r2, [r3, #32]
  95:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  37              		.loc 1 95 3 view .LVU2
  38 000a 1A6A     		ldr	r2, [r3, #32]
  39 000c 22F08052 		bic	r2, r2, #268435456
  40 0010 1A62     		str	r2, [r3, #32]
  96:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  41              		.loc 1 96 1 is_stmt 0 view .LVU3
  42 0012 7047     		bx	lr
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 0014 00380240 		.word	1073887232
  47              		.cfi_endproc
  48              	.LFE130:
  50              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  51              		.align	1
  52              		.global	HAL_PWR_EnableBkUpAccess
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  56              		.fpu softvfp
  58              	HAL_PWR_EnableBkUpAccess:
  59              	.LFB131:
  97:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  98:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  99:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables access to the backup domain (RTC registers, RTC 
 100:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 101:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 102:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 103:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 104:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 105:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
 106:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  60              		.loc 1 106 1 is_stmt 1 view -0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 107:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)ENABLE;
  65              		.loc 1 107 3 view .LVU5
  66              		.loc 1 107 32 is_stmt 0 view .LVU6
  67 0000 014B     		ldr	r3, .L5
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 4


  68 0002 0122     		movs	r2, #1
  69 0004 1A60     		str	r2, [r3]
 108:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  70              		.loc 1 108 1 view .LVU7
  71 0006 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 0008 20000E42 		.word	1108213792
  76              		.cfi_endproc
  77              	.LFE131:
  79              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
  80              		.align	1
  81              		.global	HAL_PWR_DisableBkUpAccess
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	HAL_PWR_DisableBkUpAccess:
  88              	.LFB132:
 109:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 110:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 111:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables access to the backup domain (RTC registers, RTC 
 112:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 113:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 114:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 115:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 116:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 117:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 118:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  89              		.loc 1 118 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 119:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)DISABLE;
  94              		.loc 1 119 3 view .LVU9
  95              		.loc 1 119 32 is_stmt 0 view .LVU10
  96 0000 014B     		ldr	r3, .L8
  97 0002 0022     		movs	r2, #0
  98 0004 1A60     		str	r2, [r3]
 120:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  99              		.loc 1 120 1 view .LVU11
 100 0006 7047     		bx	lr
 101              	.L9:
 102              		.align	2
 103              	.L8:
 104 0008 20000E42 		.word	1108213792
 105              		.cfi_endproc
 106              	.LFE132:
 108              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
 109              		.align	1
 110              		.global	HAL_PWR_ConfigPVD
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu softvfp
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 5


 116              	HAL_PWR_ConfigPVD:
 117              	.LVL0:
 118              	.LFB133:
 121:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 122:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 123:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
 124:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 125:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 126:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions 
 127:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief Low Power modes configuration functions 
 128:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
 129:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
 130:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 131:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 132:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
 133:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 134:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      
 135:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** PVD configuration ***
 136:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =========================
 137:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 138:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a 
 139:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in the PWR_CR).
 140:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) A PVDO flag is available to indicate if VDD/VDDA is higher or lower 
 141:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI 
 142:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           line16 and can generate an interrupt if enabled. This is done through
 143:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           __HAL_PWR_PVD_EXTI_ENABLE_IT() macro.
 144:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is stopped in Standby mode.
 145:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 146:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Wake-up pin configuration ***
 147:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     ================================
 148:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 149:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Wake-up pin is used to wake up the system from Standby mode. This pin is 
 150:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           forced in input pull-down configuration and is active on rising edges.
 151:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) There is one Wake-up pin: Wake-up Pin 1 on PA.00.
 152:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 	   (++) For STM32F446xx there are two Wake-Up pins: Pin1 on PA.00 and Pin2 on PC.13
 153:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****            (++) For STM32F410xx/STM32F412xx/STM32F413xx/STM32F423xx  there are three Wake-Up pins: 
 154:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 155:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Low Power modes configuration ***
 156:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =====================================
 157:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 158:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The devices feature 3 low-power modes:
 159:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running.
 160:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Stop mode: all clocks are stopped, regulator running, regulator 
 161:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           in low power mode
 162:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Standby mode: 1.2V domain powered off.
 163:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 164:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Sleep mode ***
 165:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ==================
 166:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 167:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 168:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         The Sleep mode is entered by using the HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLE
 169:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               functions with
 170:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 171:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 172:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 173:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       -@@- The Regulator parameter is not used for the STM32F4 family 
 174:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               and is kept as parameter just to maintain compatibility with the 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 6


 175:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               lower power families (STM32L).
 176:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 177:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any peripheral interrupt acknowledged by the nested vectored interrupt 
 178:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               controller (NVIC) can wake up the device from Sleep mode.
 179:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 180:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Stop mode ***
 181:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =================
 182:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 183:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       In Stop mode, all clocks in the 1.2V domain are stopped, the PLL, the HSI,
 184:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       and the HSE RC oscillators are disabled. Internal SRAM and register contents 
 185:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       are preserved.
 186:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator can be configured either in normal or low-power mode.
 187:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To minimize the consumption In Stop mode, FLASH can be powered off before 
 188:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       entering the Stop mode using the HAL_PWREx_EnableFlashPowerDown() function.
 189:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       It can be switched on again by software after exiting the Stop mode using
 190:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HAL_PWREx_DisableFlashPowerDown() function. 
 191:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 192:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 193:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****          The Stop mode is entered using the HAL_PWR_EnterSTOPMode(PWR_MAINREGULATOR_ON) 
 194:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              function with:
 195:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) Main regulator ON.
 196:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) Low Power regulator ON.
 197:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 198:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any EXTI Line (Internal or External) configured in Interrupt/Event mode.
 199:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 200:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Standby mode ***
 201:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ====================
 202:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 203:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     (+)
 204:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The Standby mode allows to achieve the lowest power consumption. It is based 
 205:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       on the Cortex-M4 deep sleep mode, with the voltage regulator disabled. 
 206:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The 1.2V domain is consequently powered off. The PLL, the HSI oscillator and 
 207:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HSE oscillator are also switched off. SRAM and register contents are lost 
 208:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       except for the RTC registers, RTC backup registers, backup SRAM and Standby 
 209:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       circuitry.
 210:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 211:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator is OFF.
 212:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 213:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Entry:
 214:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) The Standby mode is entered using the HAL_PWR_EnterSTANDBYMode() function.
 215:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Exit:
 216:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) WKUP pin rising edge, RTC alarm (Alarm A and Alarm B), RTC wake-up,
 217:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              tamper event, time-stamp event, external reset in NRST pin, IWDG reset.
 218:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 219:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Auto-wake-up (AWU) from low-power mode ***
 220:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =============================================
 221:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 222:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 223:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      (+) The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC 
 224:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       Wake-up event, a tamper event or a time-stamp event, without depending on 
 225:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       an external interrupt (Auto-wake-up mode).
 226:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 227:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) RTC auto-wake-up (AWU) from the Stop and Standby modes
 228:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****        
 229:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to 
 230:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() function.
 231:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 7


 232:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it 
 233:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              is necessary to configure the RTC to detect the tamper or time stamp event using the
 234:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                 HAL_RTCEx_SetTimeStamp_IT() or HAL_RTCEx_SetTamper_IT() functions.
 235:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                   
 236:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Wake-up event, it is necessary to
 237:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC Wake-up event using the HAL_RTCEx_SetWakeUpTime
 238:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 239:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
 240:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
 241:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 242:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 243:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 244:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 245:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param sConfigPVD pointer to an PWR_PVDTypeDef structure that contains the configuration
 246:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *        information for the PVD.
 247:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 248:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         more details about the voltage threshold corresponding to each 
 249:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         detection level.
 250:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 251:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 252:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 253:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 119              		.loc 1 253 1 is_stmt 1 view -0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 254:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 255:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 124              		.loc 1 255 3 view .LVU13
 256:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 125              		.loc 1 256 3 view .LVU14
 257:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 258:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set PLS[7:5] bits according to PVDLevel value */
 259:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, PWR_CR_PLS, sConfigPVD->PVDLevel);
 126              		.loc 1 259 3 view .LVU15
 127 0000 1E4A     		ldr	r2, .L15
 128 0002 1368     		ldr	r3, [r2]
 129 0004 23F0E003 		bic	r3, r3, #224
 130 0008 0168     		ldr	r1, [r0]
 131 000a 0B43     		orrs	r3, r3, r1
 132 000c 1360     		str	r3, [r2]
 260:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 261:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 262:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
 133              		.loc 1 262 3 view .LVU16
 134 000e 1C4B     		ldr	r3, .L15+4
 135 0010 5A68     		ldr	r2, [r3, #4]
 136 0012 22F48032 		bic	r2, r2, #65536
 137 0016 5A60     		str	r2, [r3, #4]
 263:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
 138              		.loc 1 263 3 view .LVU17
 139 0018 1A68     		ldr	r2, [r3]
 140 001a 22F48032 		bic	r2, r2, #65536
 141 001e 1A60     		str	r2, [r3]
 264:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();
 142              		.loc 1 264 3 view .LVU18
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 8


 143 0020 9A68     		ldr	r2, [r3, #8]
 144 0022 22F48032 		bic	r2, r2, #65536
 145 0026 9A60     		str	r2, [r3, #8]
 265:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE(); 
 146              		.loc 1 265 3 view .LVU19
 147 0028 DA68     		ldr	r2, [r3, #12]
 148 002a 22F48032 		bic	r2, r2, #65536
 149 002e DA60     		str	r2, [r3, #12]
 266:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 267:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure interrupt mode */
 268:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
 150              		.loc 1 268 3 view .LVU20
 151              		.loc 1 268 17 is_stmt 0 view .LVU21
 152 0030 4368     		ldr	r3, [r0, #4]
 153              		.loc 1 268 5 view .LVU22
 154 0032 13F4803F 		tst	r3, #65536
 155 0036 04D0     		beq	.L11
 269:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 270:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
 156              		.loc 1 270 5 is_stmt 1 view .LVU23
 157 0038 114A     		ldr	r2, .L15+4
 158 003a 1368     		ldr	r3, [r2]
 159 003c 43F48033 		orr	r3, r3, #65536
 160 0040 1360     		str	r3, [r2]
 161              	.L11:
 271:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 272:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 273:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure event mode */
 274:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 162              		.loc 1 274 3 view .LVU24
 163              		.loc 1 274 17 is_stmt 0 view .LVU25
 164 0042 4368     		ldr	r3, [r0, #4]
 165              		.loc 1 274 5 view .LVU26
 166 0044 13F4003F 		tst	r3, #131072
 167 0048 04D0     		beq	.L12
 275:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 276:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 168              		.loc 1 276 5 is_stmt 1 view .LVU27
 169 004a 0D4A     		ldr	r2, .L15+4
 170 004c 5368     		ldr	r3, [r2, #4]
 171 004e 43F48033 		orr	r3, r3, #65536
 172 0052 5360     		str	r3, [r2, #4]
 173              	.L12:
 277:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 278:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 279:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure the edge */
 280:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
 174              		.loc 1 280 3 view .LVU28
 175              		.loc 1 280 17 is_stmt 0 view .LVU29
 176 0054 4368     		ldr	r3, [r0, #4]
 177              		.loc 1 280 5 view .LVU30
 178 0056 13F0010F 		tst	r3, #1
 179 005a 04D0     		beq	.L13
 281:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 282:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 180              		.loc 1 282 5 is_stmt 1 view .LVU31
 181 005c 084A     		ldr	r2, .L15+4
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 9


 182 005e 9368     		ldr	r3, [r2, #8]
 183 0060 43F48033 		orr	r3, r3, #65536
 184 0064 9360     		str	r3, [r2, #8]
 185              	.L13:
 283:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 284:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 285:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 186              		.loc 1 285 3 view .LVU32
 187              		.loc 1 285 17 is_stmt 0 view .LVU33
 188 0066 4368     		ldr	r3, [r0, #4]
 189              		.loc 1 285 5 view .LVU34
 190 0068 13F0020F 		tst	r3, #2
 191 006c 04D0     		beq	.L10
 286:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 287:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 192              		.loc 1 287 5 is_stmt 1 view .LVU35
 193 006e 044A     		ldr	r2, .L15+4
 194 0070 D368     		ldr	r3, [r2, #12]
 195 0072 43F48033 		orr	r3, r3, #65536
 196 0076 D360     		str	r3, [r2, #12]
 197              	.L10:
 288:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 289:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 198              		.loc 1 289 1 is_stmt 0 view .LVU36
 199 0078 7047     		bx	lr
 200              	.L16:
 201 007a 00BF     		.align	2
 202              	.L15:
 203 007c 00700040 		.word	1073770496
 204 0080 003C0140 		.word	1073822720
 205              		.cfi_endproc
 206              	.LFE133:
 208              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
 209              		.align	1
 210              		.global	HAL_PWR_EnablePVD
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu softvfp
 216              	HAL_PWR_EnablePVD:
 217              	.LFB134:
 290:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 291:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 292:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Power Voltage Detector(PVD).
 293:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 294:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 295:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnablePVD(void)
 296:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 218              		.loc 1 296 1 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 297:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)ENABLE;
 223              		.loc 1 297 3 view .LVU38
 224              		.loc 1 297 33 is_stmt 0 view .LVU39
 225 0000 014B     		ldr	r3, .L18
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 10


 226 0002 0122     		movs	r2, #1
 227 0004 1A60     		str	r2, [r3]
 298:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 228              		.loc 1 298 1 view .LVU40
 229 0006 7047     		bx	lr
 230              	.L19:
 231              		.align	2
 232              	.L18:
 233 0008 10000E42 		.word	1108213776
 234              		.cfi_endproc
 235              	.LFE134:
 237              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 238              		.align	1
 239              		.global	HAL_PWR_DisablePVD
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu softvfp
 245              	HAL_PWR_DisablePVD:
 246              	.LFB135:
 299:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 300:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 301:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Power Voltage Detector(PVD).
 302:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 303:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 304:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisablePVD(void)
 305:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 247              		.loc 1 305 1 is_stmt 1 view -0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 306:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)DISABLE;
 252              		.loc 1 306 3 view .LVU42
 253              		.loc 1 306 33 is_stmt 0 view .LVU43
 254 0000 014B     		ldr	r3, .L21
 255 0002 0022     		movs	r2, #0
 256 0004 1A60     		str	r2, [r3]
 307:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 257              		.loc 1 307 1 view .LVU44
 258 0006 7047     		bx	lr
 259              	.L22:
 260              		.align	2
 261              	.L21:
 262 0008 10000E42 		.word	1108213776
 263              		.cfi_endproc
 264              	.LFE135:
 266              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 267              		.align	1
 268              		.global	HAL_PWR_EnableWakeUpPin
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu softvfp
 274              	HAL_PWR_EnableWakeUpPin:
 275              	.LVL1:
 276              	.LFB136:
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 11


 308:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 309:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 310:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Wake-up PINx functionality.
 311:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to enable.
 312:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 313:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 314:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 315:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 316:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 317:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 318:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinx)
 319:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 277              		.loc 1 319 1 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 320:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 321:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 282              		.loc 1 321 3 view .LVU46
 322:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 323:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Enable the wake up pin */
 324:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CSR, WakeUpPinx);
 283              		.loc 1 324 3 view .LVU47
 284 0000 024A     		ldr	r2, .L24
 285 0002 5368     		ldr	r3, [r2, #4]
 286 0004 0343     		orrs	r3, r3, r0
 287 0006 5360     		str	r3, [r2, #4]
 325:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 288              		.loc 1 325 1 is_stmt 0 view .LVU48
 289 0008 7047     		bx	lr
 290              	.L25:
 291 000a 00BF     		.align	2
 292              	.L24:
 293 000c 00700040 		.word	1073770496
 294              		.cfi_endproc
 295              	.LFE136:
 297              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 298              		.align	1
 299              		.global	HAL_PWR_DisableWakeUpPin
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu softvfp
 305              	HAL_PWR_DisableWakeUpPin:
 306              	.LVL2:
 307              	.LFB137:
 326:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 327:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 328:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Wake-up PINx functionality.
 329:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to disable.
 330:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 331:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 332:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 333:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 334:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 335:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 12


 336:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 337:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 308              		.loc 1 337 1 is_stmt 1 view -0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 338:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 339:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));  
 313              		.loc 1 339 3 view .LVU50
 340:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 341:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Disable the wake up pin */
 342:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CSR, WakeUpPinx);
 314              		.loc 1 342 3 view .LVU51
 315 0000 024A     		ldr	r2, .L27
 316 0002 5368     		ldr	r3, [r2, #4]
 317 0004 23EA0003 		bic	r3, r3, r0
 318 0008 5360     		str	r3, [r2, #4]
 343:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 319              		.loc 1 343 1 is_stmt 0 view .LVU52
 320 000a 7047     		bx	lr
 321              	.L28:
 322              		.align	2
 323              	.L27:
 324 000c 00700040 		.word	1073770496
 325              		.cfi_endproc
 326              	.LFE137:
 328              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 329              		.align	1
 330              		.global	HAL_PWR_EnterSLEEPMode
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu softvfp
 336              	HAL_PWR_EnterSLEEPMode:
 337              	.LVL3:
 338              	.LFB138:
 344:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 345:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 346:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Sleep mode.
 347:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *   
 348:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, all I/O pins keep the same state as in Run mode.
 349:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * 
 350:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, the systick is stopped to avoid exit from this mode with
 351:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       systick interrupt when used as time base for Timeout 
 352:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                
 353:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in SLEEP mode.
 354:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            This parameter can be one of the following values:
 355:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: SLEEP mode with regulator ON
 356:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: SLEEP mode with low power regulator ON
 357:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This parameter is not used for the STM32F4 family and is kept as parameter
 358:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       just to maintain compatibility with the lower power families.
 359:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param SLEEPEntry Specifies if SLEEP mode in entered with WFI or WFE instruction.
 360:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 361:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 362:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 363:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 13


 364:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 365:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
 366:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 339              		.loc 1 366 1 is_stmt 1 view -0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 367:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 368:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 344              		.loc 1 368 3 view .LVU54
 369:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 345              		.loc 1 369 3 view .LVU55
 370:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 371:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 372:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 346              		.loc 1 372 3 view .LVU56
 347 0000 064A     		ldr	r2, .L33
 348 0002 1369     		ldr	r3, [r2, #16]
 349 0004 23F00403 		bic	r3, r3, #4
 350 0008 1361     		str	r3, [r2, #16]
 373:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 374:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 375:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 351              		.loc 1 375 3 view .LVU57
 352              		.loc 1 375 5 is_stmt 0 view .LVU58
 353 000a 0129     		cmp	r1, #1
 354 000c 03D0     		beq	.L32
 376:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 377:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 378:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 379:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 380:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 381:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 382:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 383:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __SEV();
 355              		.loc 1 383 5 is_stmt 1 view .LVU59
 356              		.syntax unified
 357              	@ 383 "Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 358 000e 40BF     		sev
 359              	@ 0 "" 2
 384:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 360              		.loc 1 384 5 view .LVU60
 361              	@ 384 "Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 362 0010 20BF     		wfe
 363              	@ 0 "" 2
 385:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 364              		.loc 1 385 5 view .LVU61
 365              	@ 385 "Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 366 0012 20BF     		wfe
 367              	@ 0 "" 2
 386:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 387:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 368              		.loc 1 387 1 is_stmt 0 view .LVU62
 369              		.thumb
 370              		.syntax unified
 371 0014 7047     		bx	lr
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 14


 372              	.L32:
 378:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 373              		.loc 1 378 5 is_stmt 1 view .LVU63
 374              		.syntax unified
 375              	@ 378 "Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 376 0016 30BF     		wfi
 377              	@ 0 "" 2
 378              		.thumb
 379              		.syntax unified
 380 0018 7047     		bx	lr
 381              	.L34:
 382 001a 00BF     		.align	2
 383              	.L33:
 384 001c 00ED00E0 		.word	-536810240
 385              		.cfi_endproc
 386              	.LFE138:
 388              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 389              		.align	1
 390              		.global	HAL_PWR_EnterSTOPMode
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 394              		.fpu softvfp
 396              	HAL_PWR_EnterSTOPMode:
 397              	.LVL4:
 398              	.LFB139:
 388:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 389:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 390:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Stop mode. 
 391:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Stop mode, all I/O pins keep the same state as in Run mode.
 392:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When exiting Stop mode by issuing an interrupt or a wake-up event, 
 393:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         the HSI RC oscillator is selected as system clock.
 394:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When the voltage regulator operates in low power mode, an additional 
 395:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         startup delay is incurred when waking up from Stop mode. 
 396:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 397:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         is higher although the startup time is reduced.    
 398:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in Stop mode.
 399:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 400:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: Stop mode with regulator ON
 401:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: Stop mode with low power regulator ON
 402:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param STOPEntry Specifies if Stop mode in entered with WFI or WFE instruction.
 403:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 404:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFI: Enter Stop mode with WFI instruction
 405:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFE: Enter Stop mode with WFE instruction
 406:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 407:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 408:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 409:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 399              		.loc 1 409 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 410:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 411:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 404              		.loc 1 411 3 view .LVU65
 412:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 15


 405              		.loc 1 412 3 view .LVU66
 413:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 414:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select the regulator state in Stop mode: Set PDDS and LPDS bits according to PWR_Regulator val
 415:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, (PWR_CR_PDDS | PWR_CR_LPDS), Regulator);
 406              		.loc 1 415 3 view .LVU67
 407 0000 0B4A     		ldr	r2, .L39
 408 0002 1368     		ldr	r3, [r2]
 409 0004 23F00303 		bic	r3, r3, #3
 410 0008 0343     		orrs	r3, r3, r0
 411 000a 1360     		str	r3, [r2]
 416:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 417:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 418:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 412              		.loc 1 418 3 view .LVU68
 413 000c 094A     		ldr	r2, .L39+4
 414 000e 1369     		ldr	r3, [r2, #16]
 415 0010 43F00403 		orr	r3, r3, #4
 416 0014 1361     		str	r3, [r2, #16]
 419:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 420:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Stop mode entry --------------------------------------------------*/
 421:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 417              		.loc 1 421 3 view .LVU69
 418              		.loc 1 421 5 is_stmt 0 view .LVU70
 419 0016 0129     		cmp	r1, #1
 420 0018 08D0     		beq	.L38
 422:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 423:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 424:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 425:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 426:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 427:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 428:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 429:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __SEV();
 421              		.loc 1 429 5 is_stmt 1 view .LVU71
 422              		.syntax unified
 423              	@ 429 "Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 424 001a 40BF     		sev
 425              	@ 0 "" 2
 430:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 426              		.loc 1 430 5 view .LVU72
 427              	@ 430 "Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 428 001c 20BF     		wfe
 429              	@ 0 "" 2
 431:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 430              		.loc 1 431 5 view .LVU73
 431              	@ 431 "Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 432 001e 20BF     		wfe
 433              	@ 0 "" 2
 434              		.thumb
 435              		.syntax unified
 436              	.L37:
 432:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 433:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 434:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));  
 437              		.loc 1 434 3 view .LVU74
 438 0020 044A     		ldr	r2, .L39+4
 439 0022 1369     		ldr	r3, [r2, #16]
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 16


 440 0024 23F00403 		bic	r3, r3, #4
 441 0028 1361     		str	r3, [r2, #16]
 435:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 442              		.loc 1 435 1 is_stmt 0 view .LVU75
 443 002a 7047     		bx	lr
 444              	.L38:
 424:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 445              		.loc 1 424 5 is_stmt 1 view .LVU76
 446              		.syntax unified
 447              	@ 424 "Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 448 002c 30BF     		wfi
 449              	@ 0 "" 2
 450              		.thumb
 451              		.syntax unified
 452 002e F7E7     		b	.L37
 453              	.L40:
 454              		.align	2
 455              	.L39:
 456 0030 00700040 		.word	1073770496
 457 0034 00ED00E0 		.word	-536810240
 458              		.cfi_endproc
 459              	.LFE139:
 461              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 462              		.align	1
 463              		.global	HAL_PWR_EnterSTANDBYMode
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 467              		.fpu softvfp
 469              	HAL_PWR_EnterSTANDBYMode:
 470              	.LFB140:
 436:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 437:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 438:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Standby mode.
 439:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Standby mode, all I/O pins are high impedance except for:
 440:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - Reset pad (still available) 
 441:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF1 pin (PC13) if configured for tamper, time-stamp, RTC 
 442:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            Alarm out, or RTC clock calibration out.
 443:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF2 pin (PI8) if configured for tamper or time-stamp.  
 444:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - WKUP pin 1 (PA0) if enabled.       
 445:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 446:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 447:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 448:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 471              		.loc 1 448 1 view -0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 449:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Standby mode */
 450:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CR, PWR_CR_PDDS);
 476              		.loc 1 450 3 view .LVU78
 477 0000 054A     		ldr	r2, .L42
 478 0002 1368     		ldr	r3, [r2]
 479 0004 43F00203 		orr	r3, r3, #2
 480 0008 1360     		str	r3, [r2]
 451:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 17


 452:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 453:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 481              		.loc 1 453 3 view .LVU79
 482 000a 044A     		ldr	r2, .L42+4
 483 000c 1369     		ldr	r3, [r2, #16]
 484 000e 43F00403 		orr	r3, r3, #4
 485 0012 1361     		str	r3, [r2, #16]
 454:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 455:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* This option is used to ensure that store operations are completed */
 456:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #if defined ( __CC_ARM)
 457:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __force_stores();
 458:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #endif
 459:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 460:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __WFI();
 486              		.loc 1 460 3 view .LVU80
 487              		.syntax unified
 488              	@ 460 "Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 489 0014 30BF     		wfi
 490              	@ 0 "" 2
 461:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 491              		.loc 1 461 1 is_stmt 0 view .LVU81
 492              		.thumb
 493              		.syntax unified
 494 0016 7047     		bx	lr
 495              	.L43:
 496              		.align	2
 497              	.L42:
 498 0018 00700040 		.word	1073770496
 499 001c 00ED00E0 		.word	-536810240
 500              		.cfi_endproc
 501              	.LFE140:
 503              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
 504              		.align	1
 505              		.weak	HAL_PWR_PVDCallback
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 509              		.fpu softvfp
 511              	HAL_PWR_PVDCallback:
 512              	.LFB142:
 462:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 463:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 464:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief This function handles the PWR PVD interrupt request.
 465:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This API should be called under the PVD_IRQHandler().
 466:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 467:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 468:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_PVD_IRQHandler(void)
 469:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 470:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 471:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
 472:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 473:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* PWR PVD interrupt user callback */
 474:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     HAL_PWR_PVDCallback();
 475:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 476:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Clear PWR Exti pending bit */
 477:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 478:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 18


 479:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 480:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 481:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 482:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief  PWR PVD interrupt callback
 483:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 484:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 485:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** __weak void HAL_PWR_PVDCallback(void)
 486:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 513              		.loc 1 486 1 is_stmt 1 view -0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 487:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 488:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             the HAL_PWR_PVDCallback could be implemented in the user file
 489:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    */ 
 490:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 518              		.loc 1 490 1 view .LVU83
 519 0000 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE142:
 523              		.section	.text.HAL_PWR_PVD_IRQHandler,"ax",%progbits
 524              		.align	1
 525              		.global	HAL_PWR_PVD_IRQHandler
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu softvfp
 531              	HAL_PWR_PVD_IRQHandler:
 532              	.LFB141:
 469:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 533              		.loc 1 469 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537 0000 08B5     		push	{r3, lr}
 538              	.LCFI0:
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 3, -8
 541              		.cfi_offset 14, -4
 471:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 542              		.loc 1 471 3 view .LVU85
 471:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 543              		.loc 1 471 6 is_stmt 0 view .LVU86
 544 0002 064B     		ldr	r3, .L49
 545 0004 5B69     		ldr	r3, [r3, #20]
 471:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 546              		.loc 1 471 5 view .LVU87
 547 0006 13F4803F 		tst	r3, #65536
 548 000a 00D1     		bne	.L48
 549              	.L45:
 479:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 550              		.loc 1 479 1 view .LVU88
 551 000c 08BD     		pop	{r3, pc}
 552              	.L48:
 474:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 553              		.loc 1 474 5 is_stmt 1 view .LVU89
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 19


 554 000e FFF7FEFF 		bl	HAL_PWR_PVDCallback
 555              	.LVL5:
 477:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 556              		.loc 1 477 5 view .LVU90
 557 0012 024B     		ldr	r3, .L49
 558 0014 4FF48032 		mov	r2, #65536
 559 0018 5A61     		str	r2, [r3, #20]
 479:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 560              		.loc 1 479 1 is_stmt 0 view .LVU91
 561 001a F7E7     		b	.L45
 562              	.L50:
 563              		.align	2
 564              	.L49:
 565 001c 003C0140 		.word	1073822720
 566              		.cfi_endproc
 567              	.LFE141:
 569              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
 570              		.align	1
 571              		.global	HAL_PWR_EnableSleepOnExit
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.fpu softvfp
 577              	HAL_PWR_EnableSleepOnExit:
 578              	.LFB143:
 491:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 492:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 493:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Indicates Sleep-On-Exit when returning from Handler mode to Thread mode. 
 494:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 495:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 496:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 497:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       interruptions handling.         
 498:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 499:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 500:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
 501:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 579              		.loc 1 501 1 is_stmt 1 view -0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 502:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 503:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 584              		.loc 1 503 3 view .LVU93
 585 0000 024A     		ldr	r2, .L52
 586 0002 1369     		ldr	r3, [r2, #16]
 587 0004 43F00203 		orr	r3, r3, #2
 588 0008 1361     		str	r3, [r2, #16]
 504:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 589              		.loc 1 504 1 is_stmt 0 view .LVU94
 590 000a 7047     		bx	lr
 591              	.L53:
 592              		.align	2
 593              	.L52:
 594 000c 00ED00E0 		.word	-536810240
 595              		.cfi_endproc
 596              	.LFE143:
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 20


 598              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
 599              		.align	1
 600              		.global	HAL_PWR_DisableSleepOnExit
 601              		.syntax unified
 602              		.thumb
 603              		.thumb_func
 604              		.fpu softvfp
 606              	HAL_PWR_DisableSleepOnExit:
 607              	.LFB144:
 505:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 506:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 507:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables Sleep-On-Exit feature when returning from Handler mode to Thread mode. 
 508:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 509:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.          
 510:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 511:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 512:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
 513:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 608              		.loc 1 513 1 is_stmt 1 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 514:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
 515:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 613              		.loc 1 515 3 view .LVU96
 614 0000 024A     		ldr	r2, .L55
 615 0002 1369     		ldr	r3, [r2, #16]
 616 0004 23F00203 		bic	r3, r3, #2
 617 0008 1361     		str	r3, [r2, #16]
 516:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 618              		.loc 1 516 1 is_stmt 0 view .LVU97
 619 000a 7047     		bx	lr
 620              	.L56:
 621              		.align	2
 622              	.L55:
 623 000c 00ED00E0 		.word	-536810240
 624              		.cfi_endproc
 625              	.LFE144:
 627              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 628              		.align	1
 629              		.global	HAL_PWR_EnableSEVOnPend
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu softvfp
 635              	HAL_PWR_EnableSEVOnPend:
 636              	.LFB145:
 517:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 518:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 519:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables CORTEX M4 SEVONPEND bit. 
 520:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Sets SEVONPEND bit of SCR register. When this bit is set, this causes 
 521:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 522:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 523:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 524:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
 525:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 21


 637              		.loc 1 525 1 is_stmt 1 view -0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 526:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 527:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 642              		.loc 1 527 3 view .LVU99
 643 0000 024A     		ldr	r2, .L58
 644 0002 1369     		ldr	r3, [r2, #16]
 645 0004 43F01003 		orr	r3, r3, #16
 646 0008 1361     		str	r3, [r2, #16]
 528:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 647              		.loc 1 528 1 is_stmt 0 view .LVU100
 648 000a 7047     		bx	lr
 649              	.L59:
 650              		.align	2
 651              	.L58:
 652 000c 00ED00E0 		.word	-536810240
 653              		.cfi_endproc
 654              	.LFE145:
 656              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 657              		.align	1
 658              		.global	HAL_PWR_DisableSEVOnPend
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu softvfp
 664              	HAL_PWR_DisableSEVOnPend:
 665              	.LFB146:
 529:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 530:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 531:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables CORTEX M4 SEVONPEND bit. 
 532:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SEVONPEND bit of SCR register. When this bit is set, this causes 
 533:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.         
 534:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 535:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 536:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
 537:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 666              		.loc 1 537 1 is_stmt 1 view -0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 538:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 539:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 671              		.loc 1 539 3 view .LVU102
 672 0000 024A     		ldr	r2, .L61
 673 0002 1369     		ldr	r3, [r2, #16]
 674 0004 23F01003 		bic	r3, r3, #16
 675 0008 1361     		str	r3, [r2, #16]
 540:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 676              		.loc 1 540 1 is_stmt 0 view .LVU103
 677 000a 7047     		bx	lr
 678              	.L62:
 679              		.align	2
 680              	.L61:
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 22


 681 000c 00ED00E0 		.word	-536810240
 682              		.cfi_endproc
 683              	.LFE146:
 685              		.text
 686              	.Letext0:
 687              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\2020-q2-update\\arm-none-eabi\\inclu
 688              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\2020-q2-update\\arm-none-eabi\\inclu
 689              		.file 4 "Libraries/CMSIS/Include/core_cm4.h"
 690              		.file 5 "Libraries/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 691              		.file 6 "Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 692              		.file 7 "Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 693              		.file 8 "Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h"
 694              		.file 9 "Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_pwr.c
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:16     .text.HAL_PWR_DeInit:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:24     .text.HAL_PWR_DeInit:00000000 HAL_PWR_DeInit
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:46     .text.HAL_PWR_DeInit:00000014 $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:51     .text.HAL_PWR_EnableBkUpAccess:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:58     .text.HAL_PWR_EnableBkUpAccess:00000000 HAL_PWR_EnableBkUpAccess
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:75     .text.HAL_PWR_EnableBkUpAccess:00000008 $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:80     .text.HAL_PWR_DisableBkUpAccess:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:87     .text.HAL_PWR_DisableBkUpAccess:00000000 HAL_PWR_DisableBkUpAccess
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:104    .text.HAL_PWR_DisableBkUpAccess:00000008 $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:109    .text.HAL_PWR_ConfigPVD:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:116    .text.HAL_PWR_ConfigPVD:00000000 HAL_PWR_ConfigPVD
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:203    .text.HAL_PWR_ConfigPVD:0000007c $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:209    .text.HAL_PWR_EnablePVD:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:216    .text.HAL_PWR_EnablePVD:00000000 HAL_PWR_EnablePVD
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:233    .text.HAL_PWR_EnablePVD:00000008 $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:238    .text.HAL_PWR_DisablePVD:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:245    .text.HAL_PWR_DisablePVD:00000000 HAL_PWR_DisablePVD
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:262    .text.HAL_PWR_DisablePVD:00000008 $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:267    .text.HAL_PWR_EnableWakeUpPin:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:274    .text.HAL_PWR_EnableWakeUpPin:00000000 HAL_PWR_EnableWakeUpPin
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:293    .text.HAL_PWR_EnableWakeUpPin:0000000c $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:298    .text.HAL_PWR_DisableWakeUpPin:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:305    .text.HAL_PWR_DisableWakeUpPin:00000000 HAL_PWR_DisableWakeUpPin
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:324    .text.HAL_PWR_DisableWakeUpPin:0000000c $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:329    .text.HAL_PWR_EnterSLEEPMode:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:336    .text.HAL_PWR_EnterSLEEPMode:00000000 HAL_PWR_EnterSLEEPMode
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:384    .text.HAL_PWR_EnterSLEEPMode:0000001c $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:389    .text.HAL_PWR_EnterSTOPMode:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:396    .text.HAL_PWR_EnterSTOPMode:00000000 HAL_PWR_EnterSTOPMode
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:456    .text.HAL_PWR_EnterSTOPMode:00000030 $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:462    .text.HAL_PWR_EnterSTANDBYMode:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:469    .text.HAL_PWR_EnterSTANDBYMode:00000000 HAL_PWR_EnterSTANDBYMode
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:498    .text.HAL_PWR_EnterSTANDBYMode:00000018 $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:504    .text.HAL_PWR_PVDCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:511    .text.HAL_PWR_PVDCallback:00000000 HAL_PWR_PVDCallback
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:524    .text.HAL_PWR_PVD_IRQHandler:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:531    .text.HAL_PWR_PVD_IRQHandler:00000000 HAL_PWR_PVD_IRQHandler
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:565    .text.HAL_PWR_PVD_IRQHandler:0000001c $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:570    .text.HAL_PWR_EnableSleepOnExit:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:577    .text.HAL_PWR_EnableSleepOnExit:00000000 HAL_PWR_EnableSleepOnExit
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:594    .text.HAL_PWR_EnableSleepOnExit:0000000c $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:599    .text.HAL_PWR_DisableSleepOnExit:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:606    .text.HAL_PWR_DisableSleepOnExit:00000000 HAL_PWR_DisableSleepOnExit
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:623    .text.HAL_PWR_DisableSleepOnExit:0000000c $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:628    .text.HAL_PWR_EnableSEVOnPend:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:635    .text.HAL_PWR_EnableSEVOnPend:00000000 HAL_PWR_EnableSEVOnPend
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:652    .text.HAL_PWR_EnableSEVOnPend:0000000c $d
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:657    .text.HAL_PWR_DisableSEVOnPend:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:664    .text.HAL_PWR_DisableSEVOnPend:00000000 HAL_PWR_DisableSEVOnPend
C:\Users\yzy\AppData\Local\Temp\ccLVSzUA.s:681    .text.HAL_PWR_DisableSEVOnPend:0000000c $d

NO UNDEFINED SYMBOLS
