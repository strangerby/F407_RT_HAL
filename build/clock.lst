ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"clock.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.rt_system_tick_init,"ax",%progbits
  16              		.align	1
  17              		.global	rt_system_tick_init
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	rt_system_tick_init:
  25              	.LFB15:
  26              		.file 1 "RT-Thread/src/clock.c"
   1:RT-Thread/src/clock.c **** /*
   2:RT-Thread/src/clock.c ****  * Copyright (c) 2006-2018, RT-Thread Development Team
   3:RT-Thread/src/clock.c ****  *
   4:RT-Thread/src/clock.c ****  * SPDX-License-Identifier: Apache-2.0
   5:RT-Thread/src/clock.c ****  *
   6:RT-Thread/src/clock.c ****  * Change Logs:
   7:RT-Thread/src/clock.c ****  * Date           Author       Notes
   8:RT-Thread/src/clock.c ****  * 2006-03-12     Bernard      first version
   9:RT-Thread/src/clock.c ****  * 2006-05-27     Bernard      add support for same priority thread schedule
  10:RT-Thread/src/clock.c ****  * 2006-08-10     Bernard      remove the last rt_schedule in rt_tick_increase
  11:RT-Thread/src/clock.c ****  * 2010-03-08     Bernard      remove rt_passed_second
  12:RT-Thread/src/clock.c ****  * 2010-05-20     Bernard      fix the tick exceeds the maximum limits
  13:RT-Thread/src/clock.c ****  * 2010-07-13     Bernard      fix rt_tick_from_millisecond issue found by kuronca
  14:RT-Thread/src/clock.c ****  * 2011-06-26     Bernard      add rt_tick_set function.
  15:RT-Thread/src/clock.c ****  */
  16:RT-Thread/src/clock.c **** 
  17:RT-Thread/src/clock.c **** #include <rthw.h>
  18:RT-Thread/src/clock.c **** #include <rtthread.h>
  19:RT-Thread/src/clock.c **** 
  20:RT-Thread/src/clock.c **** static rt_tick_t rt_tick = 0;
  21:RT-Thread/src/clock.c **** 
  22:RT-Thread/src/clock.c **** /**
  23:RT-Thread/src/clock.c ****  * This function will init system tick and set it to zero.
  24:RT-Thread/src/clock.c ****  * @ingroup SystemInit
  25:RT-Thread/src/clock.c ****  *
  26:RT-Thread/src/clock.c ****  * @deprecated since 1.1.0, this function does not need to be invoked
  27:RT-Thread/src/clock.c ****  * in the system initialization.
  28:RT-Thread/src/clock.c ****  */
  29:RT-Thread/src/clock.c **** void rt_system_tick_init(void)
  30:RT-Thread/src/clock.c **** {
  27              		.loc 1 30 1 view -0
  28              		.cfi_startproc
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s 			page 2


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  31:RT-Thread/src/clock.c **** }
  32              		.loc 1 31 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE15:
  37              		.section	.text.rt_tick_get,"ax",%progbits
  38              		.align	1
  39              		.global	rt_tick_get
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	rt_tick_get:
  46              	.LFB16:
  32:RT-Thread/src/clock.c **** 
  33:RT-Thread/src/clock.c **** /**
  34:RT-Thread/src/clock.c ****  * @addtogroup Clock
  35:RT-Thread/src/clock.c ****  */
  36:RT-Thread/src/clock.c **** 
  37:RT-Thread/src/clock.c **** /**@{*/
  38:RT-Thread/src/clock.c **** 
  39:RT-Thread/src/clock.c **** /**
  40:RT-Thread/src/clock.c ****  * This function will return current tick from operating system startup
  41:RT-Thread/src/clock.c ****  *
  42:RT-Thread/src/clock.c ****  * @return current tick
  43:RT-Thread/src/clock.c ****  */
  44:RT-Thread/src/clock.c **** rt_tick_t rt_tick_get(void)
  45:RT-Thread/src/clock.c **** {
  47              		.loc 1 45 1 view -0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  46:RT-Thread/src/clock.c ****     /* return the global tick */
  47:RT-Thread/src/clock.c ****     return rt_tick;
  52              		.loc 1 47 5 view .LVU3
  48:RT-Thread/src/clock.c **** }
  53              		.loc 1 48 1 is_stmt 0 view .LVU4
  54 0000 014B     		ldr	r3, .L3
  55 0002 1868     		ldr	r0, [r3]
  56 0004 7047     		bx	lr
  57              	.L4:
  58 0006 00BF     		.align	2
  59              	.L3:
  60 0008 00000000 		.word	.LANCHOR0
  61              		.cfi_endproc
  62              	.LFE16:
  64              		.section	.text.rt_tick_set,"ax",%progbits
  65              		.align	1
  66              		.global	rt_tick_set
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu softvfp
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s 			page 3


  72              	rt_tick_set:
  73              	.LVL0:
  74              	.LFB17:
  49:RT-Thread/src/clock.c **** RTM_EXPORT(rt_tick_get);
  50:RT-Thread/src/clock.c **** 
  51:RT-Thread/src/clock.c **** /**
  52:RT-Thread/src/clock.c ****  * This function will set current tick
  53:RT-Thread/src/clock.c ****  */
  54:RT-Thread/src/clock.c **** void rt_tick_set(rt_tick_t tick)
  55:RT-Thread/src/clock.c **** {
  75              		.loc 1 55 1 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		.loc 1 55 1 is_stmt 0 view .LVU6
  80 0000 10B5     		push	{r4, lr}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 4, -8
  84              		.cfi_offset 14, -4
  85 0002 0446     		mov	r4, r0
  56:RT-Thread/src/clock.c ****     rt_base_t level;
  86              		.loc 1 56 5 is_stmt 1 view .LVU7
  57:RT-Thread/src/clock.c **** 
  58:RT-Thread/src/clock.c ****     level = rt_hw_interrupt_disable();
  87              		.loc 1 58 5 view .LVU8
  88              		.loc 1 58 13 is_stmt 0 view .LVU9
  89 0004 FFF7FEFF 		bl	rt_hw_interrupt_disable
  90              	.LVL1:
  59:RT-Thread/src/clock.c ****     rt_tick = tick;
  91              		.loc 1 59 5 is_stmt 1 view .LVU10
  92              		.loc 1 59 13 is_stmt 0 view .LVU11
  93 0008 024B     		ldr	r3, .L7
  94 000a 1C60     		str	r4, [r3]
  60:RT-Thread/src/clock.c ****     rt_hw_interrupt_enable(level);
  95              		.loc 1 60 5 is_stmt 1 view .LVU12
  96 000c FFF7FEFF 		bl	rt_hw_interrupt_enable
  97              	.LVL2:
  61:RT-Thread/src/clock.c **** }
  98              		.loc 1 61 1 is_stmt 0 view .LVU13
  99 0010 10BD     		pop	{r4, pc}
 100              	.LVL3:
 101              	.L8:
 102              		.loc 1 61 1 view .LVU14
 103 0012 00BF     		.align	2
 104              	.L7:
 105 0014 00000000 		.word	.LANCHOR0
 106              		.cfi_endproc
 107              	.LFE17:
 109              		.section	.text.rt_tick_increase,"ax",%progbits
 110              		.align	1
 111              		.global	rt_tick_increase
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	rt_tick_increase:
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s 			page 4


 118              	.LFB18:
  62:RT-Thread/src/clock.c **** 
  63:RT-Thread/src/clock.c **** /**
  64:RT-Thread/src/clock.c ****  * This function will notify kernel there is one tick passed. Normally,
  65:RT-Thread/src/clock.c ****  * this function is invoked by clock ISR.
  66:RT-Thread/src/clock.c ****  */
  67:RT-Thread/src/clock.c **** void rt_tick_increase(void)
  68:RT-Thread/src/clock.c **** {
 119              		.loc 1 68 1 is_stmt 1 view -0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123 0000 08B5     		push	{r3, lr}
 124              	.LCFI1:
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 3, -8
 127              		.cfi_offset 14, -4
  69:RT-Thread/src/clock.c ****     struct rt_thread *thread;
 128              		.loc 1 69 5 view .LVU16
  70:RT-Thread/src/clock.c **** 
  71:RT-Thread/src/clock.c ****     /* increase the global tick */
  72:RT-Thread/src/clock.c ****     ++ rt_tick;
 129              		.loc 1 72 5 view .LVU17
 130 0002 094A     		ldr	r2, .L13
 131 0004 1368     		ldr	r3, [r2]
 132 0006 0133     		adds	r3, r3, #1
 133 0008 1360     		str	r3, [r2]
  73:RT-Thread/src/clock.c **** 
  74:RT-Thread/src/clock.c ****     /* check time slice */
  75:RT-Thread/src/clock.c ****     thread = rt_thread_self();
 134              		.loc 1 75 5 view .LVU18
 135              		.loc 1 75 14 is_stmt 0 view .LVU19
 136 000a FFF7FEFF 		bl	rt_thread_self
 137              	.LVL4:
  76:RT-Thread/src/clock.c **** 
  77:RT-Thread/src/clock.c ****     -- thread->remaining_tick;
 138              		.loc 1 77 5 is_stmt 1 view .LVU20
 139              		.loc 1 77 14 is_stmt 0 view .LVU21
 140 000e C36C     		ldr	r3, [r0, #76]
 141              		.loc 1 77 5 view .LVU22
 142 0010 013B     		subs	r3, r3, #1
 143 0012 C364     		str	r3, [r0, #76]
  78:RT-Thread/src/clock.c ****     if (thread->remaining_tick == 0)
 144              		.loc 1 78 5 is_stmt 1 view .LVU23
 145              		.loc 1 78 8 is_stmt 0 view .LVU24
 146 0014 13B1     		cbz	r3, .L12
 147              	.LVL5:
 148              	.L10:
  79:RT-Thread/src/clock.c ****     {
  80:RT-Thread/src/clock.c ****         /* change to initialized tick */
  81:RT-Thread/src/clock.c ****         thread->remaining_tick = thread->init_tick;
  82:RT-Thread/src/clock.c **** 
  83:RT-Thread/src/clock.c ****         /* yield */
  84:RT-Thread/src/clock.c ****         rt_thread_yield();
  85:RT-Thread/src/clock.c ****     }
  86:RT-Thread/src/clock.c **** 
  87:RT-Thread/src/clock.c ****     /* check timer */
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s 			page 5


  88:RT-Thread/src/clock.c ****     rt_timer_check();
 149              		.loc 1 88 5 is_stmt 1 view .LVU25
 150 0016 FFF7FEFF 		bl	rt_timer_check
 151              	.LVL6:
  89:RT-Thread/src/clock.c **** }
 152              		.loc 1 89 1 is_stmt 0 view .LVU26
 153 001a 08BD     		pop	{r3, pc}
 154              	.LVL7:
 155              	.L12:
  81:RT-Thread/src/clock.c **** 
 156              		.loc 1 81 9 is_stmt 1 view .LVU27
  81:RT-Thread/src/clock.c **** 
 157              		.loc 1 81 40 is_stmt 0 view .LVU28
 158 001c 836C     		ldr	r3, [r0, #72]
  81:RT-Thread/src/clock.c **** 
 159              		.loc 1 81 32 view .LVU29
 160 001e C364     		str	r3, [r0, #76]
  84:RT-Thread/src/clock.c ****     }
 161              		.loc 1 84 9 is_stmt 1 view .LVU30
 162 0020 FFF7FEFF 		bl	rt_thread_yield
 163              	.LVL8:
  84:RT-Thread/src/clock.c ****     }
 164              		.loc 1 84 9 is_stmt 0 view .LVU31
 165 0024 F7E7     		b	.L10
 166              	.L14:
 167 0026 00BF     		.align	2
 168              	.L13:
 169 0028 00000000 		.word	.LANCHOR0
 170              		.cfi_endproc
 171              	.LFE18:
 173              		.section	.text.rt_tick_from_millisecond,"ax",%progbits
 174              		.align	1
 175              		.global	rt_tick_from_millisecond
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu softvfp
 181              	rt_tick_from_millisecond:
 182              	.LVL9:
 183              	.LFB19:
  90:RT-Thread/src/clock.c **** 
  91:RT-Thread/src/clock.c **** /**
  92:RT-Thread/src/clock.c ****  * This function will calculate the tick from millisecond.
  93:RT-Thread/src/clock.c ****  *
  94:RT-Thread/src/clock.c ****  * @param ms the specified millisecond
  95:RT-Thread/src/clock.c ****  *           - Negative Number wait forever
  96:RT-Thread/src/clock.c ****  *           - Zero not wait
  97:RT-Thread/src/clock.c ****  *           - Max 0x7fffffff
  98:RT-Thread/src/clock.c ****  *
  99:RT-Thread/src/clock.c ****  * @return the calculated tick
 100:RT-Thread/src/clock.c ****  */
 101:RT-Thread/src/clock.c **** rt_tick_t rt_tick_from_millisecond(rt_int32_t ms)
 102:RT-Thread/src/clock.c **** {
 184              		.loc 1 102 1 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s 			page 6


 188              		@ link register save eliminated.
 103:RT-Thread/src/clock.c ****     rt_tick_t tick;
 189              		.loc 1 103 5 view .LVU33
 104:RT-Thread/src/clock.c **** 
 105:RT-Thread/src/clock.c ****     if (ms < 0)
 190              		.loc 1 105 5 view .LVU34
 191              		.loc 1 105 8 is_stmt 0 view .LVU35
 192 0000 021E     		subs	r2, r0, #0
 193 0002 15DB     		blt	.L17
 106:RT-Thread/src/clock.c ****     {
 107:RT-Thread/src/clock.c ****         tick = (rt_tick_t)RT_WAITING_FOREVER;
 108:RT-Thread/src/clock.c ****     }
 109:RT-Thread/src/clock.c ****     else
 110:RT-Thread/src/clock.c ****     {
 111:RT-Thread/src/clock.c ****         tick = RT_TICK_PER_SECOND * (ms / 1000);
 194              		.loc 1 111 9 is_stmt 1 view .LVU36
 195              		.loc 1 111 41 is_stmt 0 view .LVU37
 196 0004 0C48     		ldr	r0, .L18
 197              	.LVL10:
 198              		.loc 1 111 41 view .LVU38
 199 0006 80FB0213 		smull	r1, r3, r0, r2
 200 000a D117     		asrs	r1, r2, #31
 201 000c C1EBA311 		rsb	r1, r1, r3, asr #6
 202              		.loc 1 111 35 view .LVU39
 203 0010 4FF47A73 		mov	r3, #1000
 204 0014 03FB01F1 		mul	r1, r3, r1
 205              	.LVL11:
 112:RT-Thread/src/clock.c ****         tick += (RT_TICK_PER_SECOND * (ms % 1000) + 999) / 1000;
 206              		.loc 1 112 9 is_stmt 1 view .LVU40
 207              		.loc 1 112 43 is_stmt 0 view .LVU41
 208 0018 521A     		subs	r2, r2, r1
 209              	.LVL12:
 210              		.loc 1 112 37 view .LVU42
 211 001a 03FB02F3 		mul	r3, r3, r2
 212              		.loc 1 112 51 view .LVU43
 213 001e 03F2E733 		addw	r3, r3, #999
 214              		.loc 1 112 58 view .LVU44
 215 0022 80FB0302 		smull	r0, r2, r0, r3
 216 0026 D817     		asrs	r0, r3, #31
 217 0028 C0EBA210 		rsb	r0, r0, r2, asr #6
 218              		.loc 1 112 14 view .LVU45
 219 002c 0844     		add	r0, r0, r1
 220              	.LVL13:
 221              		.loc 1 112 14 view .LVU46
 222 002e 7047     		bx	lr
 223              	.LVL14:
 224              	.L17:
 107:RT-Thread/src/clock.c ****     }
 225              		.loc 1 107 14 view .LVU47
 226 0030 4FF0FF30 		mov	r0, #-1
 227              	.LVL15:
 113:RT-Thread/src/clock.c ****     }
 114:RT-Thread/src/clock.c ****     
 115:RT-Thread/src/clock.c ****     /* return the calculated tick */
 116:RT-Thread/src/clock.c ****     return tick;
 228              		.loc 1 116 5 is_stmt 1 view .LVU48
 117:RT-Thread/src/clock.c **** }
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s 			page 7


 229              		.loc 1 117 1 is_stmt 0 view .LVU49
 230 0034 7047     		bx	lr
 231              	.L19:
 232 0036 00BF     		.align	2
 233              	.L18:
 234 0038 D34D6210 		.word	274877907
 235              		.cfi_endproc
 236              	.LFE19:
 238              		.section	.bss.rt_tick,"aw",%nobits
 239              		.align	2
 240              		.set	.LANCHOR0,. + 0
 243              	rt_tick:
 244 0000 00000000 		.space	4
 245              		.text
 246              	.Letext0:
 247              		.file 2 "RT-Thread/include/rtdef.h"
 248              		.file 3 "RT-Thread/include/rtthread.h"
 249              		.file 4 "RT-Thread/include/rthw.h"
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 clock.c
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:16     .text.rt_system_tick_init:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:24     .text.rt_system_tick_init:00000000 rt_system_tick_init
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:38     .text.rt_tick_get:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:45     .text.rt_tick_get:00000000 rt_tick_get
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:60     .text.rt_tick_get:00000008 $d
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:65     .text.rt_tick_set:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:72     .text.rt_tick_set:00000000 rt_tick_set
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:105    .text.rt_tick_set:00000014 $d
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:110    .text.rt_tick_increase:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:117    .text.rt_tick_increase:00000000 rt_tick_increase
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:169    .text.rt_tick_increase:00000028 $d
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:174    .text.rt_tick_from_millisecond:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:181    .text.rt_tick_from_millisecond:00000000 rt_tick_from_millisecond
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:234    .text.rt_tick_from_millisecond:00000038 $d
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:239    .bss.rt_tick:00000000 $d
C:\Users\yzy\AppData\Local\Temp\ccjN9aso.s:243    .bss.rt_tick:00000000 rt_tick

UNDEFINED SYMBOLS
rt_hw_interrupt_disable
rt_hw_interrupt_enable
rt_thread_self
rt_timer_check
rt_thread_yield
