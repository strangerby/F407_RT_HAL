ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f4xx_hal_can.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_CAN_MspInit
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_CAN_MspInit:
  25              	.LVL0:
  26              	.LFB132:
  27              		.file 1 "Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c"
   1:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
   2:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
   3:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @file    stm32f4xx_hal_can.c
   4:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @author  MCD Application Team
   5:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Configuration functions
  10:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Control functions
  11:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Interrupts management
  12:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Callbacks functions
  13:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  15:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   @verbatim
  16:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
  17:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                         ##### How to use this driver #####
  18:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
  19:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
  20:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
  21:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_MspInit():
  22:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  23:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****          (++) Configure CAN pins
  24:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  25:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Configure CAN pins as alternate function open-drain
  26:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  27:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  28:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  29:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  30:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  31:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 2


  32:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  33:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  34:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  35:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  36:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           functions:
  37:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  38:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  39:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  40:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  41:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           messages.
  42:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  43:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  44:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           can be used:
  45:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  46:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  message.
  47:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  48:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  message.
  49:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  50:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  mailboxes.
  51:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  52:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  in a Tx mailbox.
  53:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  54:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  55:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  56:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  57:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  58:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  59:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           stored in the Rx Fifo.
  60:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  61:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  62:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  63:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  64:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  65:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  66:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *** Polling mode operation ***
  67:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       ==============================
  68:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
  69:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Reception:
  70:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  71:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  until at least one message is received.
  72:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  73:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  74:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Transmission:
  75:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
  76:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
  77:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Then request transmission of a message using
  78:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  79:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  80:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  81:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *** Interrupt mode operation ***
  82:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       ================================
  83:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
  84:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  85:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           function. Then, the process can be controlled through the
  86:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  87:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  88:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 3


  89:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Notifications can be deactivated using
  90:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
  91:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  92:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
  93:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
  94:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
  95:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
  96:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           here.
  97:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
  98:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
  99:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 100:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 101:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 102:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  read, the notification can be activated again.
 103:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 104:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 105:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *** Sleep mode ***
 106:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       ==================
 107:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
 108:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 109:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 110:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 111:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           be completed.
 112:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 113:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 114:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           will be entered.
 115:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 116:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 117:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 118:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 119:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 120:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 121:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 122:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 123:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) The wake-up from sleep mode can be trigged by two ways:
 124:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 125:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 126:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 127:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  if automatic wake up mode is enabled.
 128:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 129:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *** Callback registration ***
 130:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   =============================================
 131:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 132:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   The compilation define  USE_HAL_CAN_REGISTER_CALLBACKS when set to 1
 133:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   allows the user to configure dynamically the driver callbacks.
 134:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Use Function @ref HAL_CAN_RegisterCallback() to register an interrupt callback.
 135:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 136:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Function @ref HAL_CAN_RegisterCallback() allows to register following callbacks:
 137:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 138:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 139:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 140:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 141:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 142:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 143:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 144:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 145:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 4


 146:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 147:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 148:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 149:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 150:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 151:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 152:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 153:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   and a pointer to the user callback function.
 154:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 155:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Use function @ref HAL_CAN_UnRegisterCallback() to reset a callback to the default
 156:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   weak function.
 157:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   @ref HAL_CAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 158:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   and the Callback ID.
 159:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   This function allows to reset following callbacks:
 160:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 161:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 162:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 163:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 164:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 165:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 166:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 167:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 168:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 169:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 170:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 171:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 172:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 173:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 174:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 175:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 176:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   By default, after the @ref HAL_CAN_Init() and when the state is HAL_CAN_STATE_RESET,
 177:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   all callbacks are set to the corresponding weak functions:
 178:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   example @ref HAL_CAN_ErrorCallback().
 179:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Exception done for MspInit and MspDeInit functions that are
 180:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   reset to the legacy weak function in the @ref HAL_CAN_Init()/ @ref HAL_CAN_DeInit() only when
 181:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   these callbacks are null (not registered beforehand).
 182:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if not, MspInit or MspDeInit are not null, the @ref HAL_CAN_Init()/ @ref HAL_CAN_DeInit()
 183:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 184:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 185:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Callbacks can be registered/unregistered in HAL_CAN_STATE_READY state only.
 186:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 187:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   in HAL_CAN_STATE_READY or HAL_CAN_STATE_RESET state,
 188:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 189:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   In that case first register the MspInit/MspDeInit user callbacks
 190:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   using @ref HAL_CAN_RegisterCallback() before calling @ref HAL_CAN_DeInit()
 191:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   or @ref HAL_CAN_Init() function.
 192:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 193:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   When The compilation define USE_HAL_CAN_REGISTER_CALLBACKS is set to 0 or
 194:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   not defined, the callback registration feature is not available and all callbacks
 195:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   are set to the corresponding weak functions.
 196:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 197:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   @endverbatim
 198:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
 199:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @attention
 200:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
 201:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 202:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * All rights reserved.</center></h2>
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 5


 203:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
 204:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 205:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * the "License"; You may not use this file except in compliance with the
 206:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * License. You may obtain a copy of the License at:
 207:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *                        opensource.org/licenses/BSD-3-Clause
 208:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
 209:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
 210:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 211:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 212:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 213:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #include "stm32f4xx_hal.h"
 214:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 215:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @addtogroup STM32F4xx_HAL_Driver
 216:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 217:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 218:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 219:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN1)
 220:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 221:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN CAN
 222:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief CAN driver modules
 223:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 224:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 225:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 226:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 227:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 228:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 229:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 230:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif
 231:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 232:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 233:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 234:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 235:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 236:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 237:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 238:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 239:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
 240:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 241:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 242:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 243:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 244:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 245:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 246:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 247:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 248:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 249:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 250:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 251:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *  @brief    Initialization and Configuration functions
 252:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *
 253:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
 254:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 255:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 256:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 257:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
 258:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
 259:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 6


 260:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 261:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 262:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 263:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
 264:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 265:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 266:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 267:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 268:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 269:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 270:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 271:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 272:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 273:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 274:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 275:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 276:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
 277:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 278:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 279:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan == NULL)
 280:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 281:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 282:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 283:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 284:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
 285:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 286:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 287:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 288:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 289:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 290:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 291:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 292:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 293:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 294:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 295:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 296:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 297:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 298:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 299:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 300:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 301:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Reset callbacks to legacy functions */
 302:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo0MsgPendingCallback  =  HAL_CAN_RxFifo0MsgPendingCallback;  /* Legacy weak RxFifo0M
 303:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 304:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 305:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 306:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 307:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 308:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 309:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 310:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 311:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 312:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 313:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 314:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 315:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 316:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (hcan->MspInitCallback == NULL)
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 7


 317:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 318:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->MspInitCallback = HAL_CAN_MspInit; /* Legacy weak MspInit */
 319:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 320:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 321:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 322:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->MspInitCallback(hcan);
 323:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 324:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 325:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 326:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 327:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 328:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 329:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 330:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 331:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 332:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 333:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Exit from sleep mode */
 334:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 335:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 336:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Get tick */
 337:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   tickstart = HAL_GetTick();
 338:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 339:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 340:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 341:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 342:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 343:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 344:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
 345:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 346:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 347:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Change CAN state */
 348:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 349:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 350:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
 351:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 352:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 353:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 354:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Request initialisation */
 355:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 356:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 357:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Get tick */
 358:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   tickstart = HAL_GetTick();
 359:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 360:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Wait initialisation acknowledge */
 361:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 362:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 363:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 364:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 365:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
 366:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 367:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 368:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Change CAN state */
 369:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 370:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 371:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
 372:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 373:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 8


 374:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 375:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the time triggered communication mode */
 376:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 377:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 378:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 379:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 380:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 381:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 382:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 383:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 384:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 385:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic bus-off management */
 386:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 387:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 388:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 389:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 390:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 391:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 392:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 393:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 394:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 395:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic wake-up mode */
 396:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 397:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 398:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 399:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 400:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 401:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 402:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 403:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 404:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 405:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic retransmission */
 406:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 407:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 408:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 409:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 410:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 411:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 412:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 413:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 414:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 415:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 416:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 417:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 418:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 419:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 420:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 421:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 422:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 423:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 424:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 425:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the transmit FIFO priority */
 426:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 427:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 428:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 429:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 430:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 9


 431:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 432:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 433:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 434:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 435:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the bit timing register */
 436:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 437:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 438:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 439:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 440:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 441:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 442:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Initialize the error code */
 443:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 444:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 445:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Initialize the CAN state */
 446:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 447:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 448:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
 449:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return HAL_OK;
 450:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 451:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 452:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 453:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 454:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         reset values.
 455:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 456:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 457:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 458:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 459:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 460:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 461:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 462:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan == NULL)
 463:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 464:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 465:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 466:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 467:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
 468:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 469:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 470:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Stop the CAN module */
 471:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 472:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 473:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 474:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->MspDeInitCallback == NULL)
 475:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 476:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->MspDeInitCallback = HAL_CAN_MspDeInit; /* Legacy weak MspDeInit */
 477:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 478:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 479:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 480:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->MspDeInitCallback(hcan);
 481:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 482:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 483:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 484:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 485:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 486:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 487:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Reset the CAN peripheral */
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 10


 488:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 489:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 490:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 491:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 492:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 493:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Change CAN state */
 494:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 495:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 496:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
 497:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return HAL_OK;
 498:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 499:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 500:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 501:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 502:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 503:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 504:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 505:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 506:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 507:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
  28              		.loc 1 507 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 508:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 509:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
  33              		.loc 1 509 3 view .LVU1
 510:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 511:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 512:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 513:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
 514:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
  34              		.loc 1 514 1 is_stmt 0 view .LVU2
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE132:
  39              		.section	.text.HAL_CAN_Init,"ax",%progbits
  40              		.align	1
  41              		.global	HAL_CAN_Init
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu softvfp
  47              	HAL_CAN_Init:
  48              	.LVL1:
  49              	.LFB130:
 275:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
  50              		.loc 1 275 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 276:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  54              		.loc 1 276 3 view .LVU4
 279:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
  55              		.loc 1 279 3 view .LVU5
 279:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 11


  56              		.loc 1 279 6 is_stmt 0 view .LVU6
  57 0000 0028     		cmp	r0, #0
  58 0002 00F0A180 		beq	.L21
 275:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
  59              		.loc 1 275 1 view .LVU7
  60 0006 38B5     		push	{r3, r4, r5, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 16
  63              		.cfi_offset 3, -16
  64              		.cfi_offset 4, -12
  65              		.cfi_offset 5, -8
  66              		.cfi_offset 14, -4
  67 0008 0446     		mov	r4, r0
 285:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
  68              		.loc 1 285 3 is_stmt 1 view .LVU8
 286:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
  69              		.loc 1 286 3 view .LVU9
 287:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
  70              		.loc 1 287 3 view .LVU10
 288:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
  71              		.loc 1 288 3 view .LVU11
 289:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
  72              		.loc 1 289 3 view .LVU12
 290:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
  73              		.loc 1 290 3 view .LVU13
 291:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
  74              		.loc 1 291 3 view .LVU14
 292:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
  75              		.loc 1 292 3 view .LVU15
 293:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
  76              		.loc 1 293 3 view .LVU16
 294:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
  77              		.loc 1 294 3 view .LVU17
 295:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
  78              		.loc 1 295 3 view .LVU18
 296:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  79              		.loc 1 296 3 view .LVU19
 326:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
  80              		.loc 1 326 3 view .LVU20
 326:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
  81              		.loc 1 326 11 is_stmt 0 view .LVU21
  82 000a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 326:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
  83              		.loc 1 326 6 view .LVU22
  84 000e D3B1     		cbz	r3, .L26
  85              	.LVL2:
  86              	.L4:
 334:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  87              		.loc 1 334 3 is_stmt 1 view .LVU23
  88 0010 2268     		ldr	r2, [r4]
  89 0012 1368     		ldr	r3, [r2]
  90 0014 23F00203 		bic	r3, r3, #2
  91 0018 1360     		str	r3, [r2]
 337:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  92              		.loc 1 337 3 view .LVU24
 337:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  93              		.loc 1 337 15 is_stmt 0 view .LVU25
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 12


  94 001a FFF7FEFF 		bl	HAL_GetTick
  95              	.LVL3:
  96 001e 0546     		mov	r5, r0
  97              	.LVL4:
 340:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
  98              		.loc 1 340 3 is_stmt 1 view .LVU26
  99              	.L5:
 340:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 100              		.loc 1 340 9 view .LVU27
 340:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 101              		.loc 1 340 15 is_stmt 0 view .LVU28
 102 0020 2368     		ldr	r3, [r4]
 340:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 103              		.loc 1 340 25 view .LVU29
 104 0022 5A68     		ldr	r2, [r3, #4]
 340:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 105              		.loc 1 340 9 view .LVU30
 106 0024 12F0020F 		tst	r2, #2
 107 0028 10D0     		beq	.L27
 342:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 108              		.loc 1 342 5 is_stmt 1 view .LVU31
 342:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 109              		.loc 1 342 10 is_stmt 0 view .LVU32
 110 002a FFF7FEFF 		bl	HAL_GetTick
 111              	.LVL5:
 342:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 112              		.loc 1 342 24 view .LVU33
 113 002e 401B     		subs	r0, r0, r5
 342:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 114              		.loc 1 342 8 view .LVU34
 115 0030 0A28     		cmp	r0, #10
 116 0032 F5D9     		bls	.L5
 345:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 117              		.loc 1 345 7 is_stmt 1 view .LVU35
 345:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 118              		.loc 1 345 23 is_stmt 0 view .LVU36
 119 0034 636A     		ldr	r3, [r4, #36]
 120 0036 43F40033 		orr	r3, r3, #131072
 121 003a 6362     		str	r3, [r4, #36]
 348:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 122              		.loc 1 348 7 is_stmt 1 view .LVU37
 348:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 123              		.loc 1 348 19 is_stmt 0 view .LVU38
 124 003c 0523     		movs	r3, #5
 125 003e 84F82030 		strb	r3, [r4, #32]
 350:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 126              		.loc 1 350 7 is_stmt 1 view .LVU39
 350:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 127              		.loc 1 350 14 is_stmt 0 view .LVU40
 128 0042 0120     		movs	r0, #1
 129              	.L3:
 450:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 130              		.loc 1 450 1 view .LVU41
 131 0044 38BD     		pop	{r3, r4, r5, pc}
 132              	.LVL6:
 133              	.L26:
 329:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 13


 134              		.loc 1 329 5 is_stmt 1 view .LVU42
 135 0046 FFF7FEFF 		bl	HAL_CAN_MspInit
 136              	.LVL7:
 329:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 137              		.loc 1 329 5 is_stmt 0 view .LVU43
 138 004a E1E7     		b	.L4
 139              	.LVL8:
 140              	.L27:
 355:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 141              		.loc 1 355 3 is_stmt 1 view .LVU44
 142 004c 1A68     		ldr	r2, [r3]
 143 004e 42F00102 		orr	r2, r2, #1
 144 0052 1A60     		str	r2, [r3]
 358:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 145              		.loc 1 358 3 view .LVU45
 358:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 146              		.loc 1 358 15 is_stmt 0 view .LVU46
 147 0054 FFF7FEFF 		bl	HAL_GetTick
 148              	.LVL9:
 149 0058 0546     		mov	r5, r0
 150              	.LVL10:
 361:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 151              		.loc 1 361 3 is_stmt 1 view .LVU47
 152              	.L7:
 361:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 153              		.loc 1 361 9 view .LVU48
 361:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 154              		.loc 1 361 15 is_stmt 0 view .LVU49
 155 005a 2368     		ldr	r3, [r4]
 361:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 156              		.loc 1 361 25 view .LVU50
 157 005c 5A68     		ldr	r2, [r3, #4]
 361:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 158              		.loc 1 361 9 view .LVU51
 159 005e 12F0010F 		tst	r2, #1
 160 0062 0DD1     		bne	.L28
 363:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 161              		.loc 1 363 5 is_stmt 1 view .LVU52
 363:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 162              		.loc 1 363 10 is_stmt 0 view .LVU53
 163 0064 FFF7FEFF 		bl	HAL_GetTick
 164              	.LVL11:
 363:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 165              		.loc 1 363 24 view .LVU54
 166 0068 401B     		subs	r0, r0, r5
 363:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 167              		.loc 1 363 8 view .LVU55
 168 006a 0A28     		cmp	r0, #10
 169 006c F5D9     		bls	.L7
 366:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 170              		.loc 1 366 7 is_stmt 1 view .LVU56
 366:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 171              		.loc 1 366 23 is_stmt 0 view .LVU57
 172 006e 636A     		ldr	r3, [r4, #36]
 173 0070 43F40033 		orr	r3, r3, #131072
 174 0074 6362     		str	r3, [r4, #36]
 369:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 14


 175              		.loc 1 369 7 is_stmt 1 view .LVU58
 369:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 176              		.loc 1 369 19 is_stmt 0 view .LVU59
 177 0076 0523     		movs	r3, #5
 178 0078 84F82030 		strb	r3, [r4, #32]
 371:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 179              		.loc 1 371 7 is_stmt 1 view .LVU60
 371:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 180              		.loc 1 371 14 is_stmt 0 view .LVU61
 181 007c 0120     		movs	r0, #1
 182 007e E1E7     		b	.L3
 183              	.L28:
 376:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 184              		.loc 1 376 3 is_stmt 1 view .LVU62
 376:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 185              		.loc 1 376 17 is_stmt 0 view .LVU63
 186 0080 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 376:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 187              		.loc 1 376 6 view .LVU64
 188 0082 012A     		cmp	r2, #1
 189 0084 3DD0     		beq	.L29
 382:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 190              		.loc 1 382 5 is_stmt 1 view .LVU65
 191 0086 1A68     		ldr	r2, [r3]
 192 0088 22F08002 		bic	r2, r2, #128
 193 008c 1A60     		str	r2, [r3]
 194              	.L10:
 386:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 195              		.loc 1 386 3 view .LVU66
 386:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 196              		.loc 1 386 17 is_stmt 0 view .LVU67
 197 008e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 386:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 198              		.loc 1 386 6 view .LVU68
 199 0090 012B     		cmp	r3, #1
 200 0092 3BD0     		beq	.L30
 392:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 201              		.loc 1 392 5 is_stmt 1 view .LVU69
 202 0094 2268     		ldr	r2, [r4]
 203 0096 1368     		ldr	r3, [r2]
 204 0098 23F04003 		bic	r3, r3, #64
 205 009c 1360     		str	r3, [r2]
 206              	.L12:
 396:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 207              		.loc 1 396 3 view .LVU70
 396:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 208              		.loc 1 396 17 is_stmt 0 view .LVU71
 209 009e A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 396:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 210              		.loc 1 396 6 view .LVU72
 211 00a0 012B     		cmp	r3, #1
 212 00a2 39D0     		beq	.L31
 402:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 213              		.loc 1 402 5 is_stmt 1 view .LVU73
 214 00a4 2268     		ldr	r2, [r4]
 215 00a6 1368     		ldr	r3, [r2]
 216 00a8 23F02003 		bic	r3, r3, #32
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 15


 217 00ac 1360     		str	r3, [r2]
 218              	.L14:
 406:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 219              		.loc 1 406 3 view .LVU74
 406:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 220              		.loc 1 406 17 is_stmt 0 view .LVU75
 221 00ae E37E     		ldrb	r3, [r4, #27]	@ zero_extendqisi2
 406:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 222              		.loc 1 406 6 view .LVU76
 223 00b0 012B     		cmp	r3, #1
 224 00b2 37D0     		beq	.L32
 412:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 225              		.loc 1 412 5 is_stmt 1 view .LVU77
 226 00b4 2268     		ldr	r2, [r4]
 227 00b6 1368     		ldr	r3, [r2]
 228 00b8 43F01003 		orr	r3, r3, #16
 229 00bc 1360     		str	r3, [r2]
 230              	.L16:
 416:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 231              		.loc 1 416 3 view .LVU78
 416:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 232              		.loc 1 416 17 is_stmt 0 view .LVU79
 233 00be 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 416:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 234              		.loc 1 416 6 view .LVU80
 235 00c0 012B     		cmp	r3, #1
 236 00c2 35D0     		beq	.L33
 422:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 237              		.loc 1 422 5 is_stmt 1 view .LVU81
 238 00c4 2268     		ldr	r2, [r4]
 239 00c6 1368     		ldr	r3, [r2]
 240 00c8 23F00803 		bic	r3, r3, #8
 241 00cc 1360     		str	r3, [r2]
 242              	.L18:
 426:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 243              		.loc 1 426 3 view .LVU82
 426:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 244              		.loc 1 426 17 is_stmt 0 view .LVU83
 245 00ce 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 426:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 246              		.loc 1 426 6 view .LVU84
 247 00d0 012B     		cmp	r3, #1
 248 00d2 33D0     		beq	.L34
 432:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 249              		.loc 1 432 5 is_stmt 1 view .LVU85
 250 00d4 2268     		ldr	r2, [r4]
 251 00d6 1368     		ldr	r3, [r2]
 252 00d8 23F00403 		bic	r3, r3, #4
 253 00dc 1360     		str	r3, [r2]
 254              	.L20:
 436:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 255              		.loc 1 436 3 view .LVU86
 256 00de A368     		ldr	r3, [r4, #8]
 257 00e0 E268     		ldr	r2, [r4, #12]
 258 00e2 1343     		orrs	r3, r3, r2
 259 00e4 2269     		ldr	r2, [r4, #16]
 260 00e6 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 16


 261 00e8 6269     		ldr	r2, [r4, #20]
 262 00ea 1343     		orrs	r3, r3, r2
 263 00ec 6268     		ldr	r2, [r4, #4]
 264 00ee 013A     		subs	r2, r2, #1
 265 00f0 2168     		ldr	r1, [r4]
 266 00f2 1343     		orrs	r3, r3, r2
 267 00f4 CB61     		str	r3, [r1, #28]
 443:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 268              		.loc 1 443 3 view .LVU87
 443:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 269              		.loc 1 443 19 is_stmt 0 view .LVU88
 270 00f6 0020     		movs	r0, #0
 271 00f8 6062     		str	r0, [r4, #36]
 446:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 272              		.loc 1 446 3 is_stmt 1 view .LVU89
 446:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 273              		.loc 1 446 15 is_stmt 0 view .LVU90
 274 00fa 0123     		movs	r3, #1
 275 00fc 84F82030 		strb	r3, [r4, #32]
 449:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 276              		.loc 1 449 3 is_stmt 1 view .LVU91
 449:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 277              		.loc 1 449 10 is_stmt 0 view .LVU92
 278 0100 A0E7     		b	.L3
 279              	.L29:
 378:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 280              		.loc 1 378 5 is_stmt 1 view .LVU93
 281 0102 1A68     		ldr	r2, [r3]
 282 0104 42F08002 		orr	r2, r2, #128
 283 0108 1A60     		str	r2, [r3]
 284 010a C0E7     		b	.L10
 285              	.L30:
 388:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 286              		.loc 1 388 5 view .LVU94
 287 010c 2268     		ldr	r2, [r4]
 288 010e 1368     		ldr	r3, [r2]
 289 0110 43F04003 		orr	r3, r3, #64
 290 0114 1360     		str	r3, [r2]
 291 0116 C2E7     		b	.L12
 292              	.L31:
 398:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 293              		.loc 1 398 5 view .LVU95
 294 0118 2268     		ldr	r2, [r4]
 295 011a 1368     		ldr	r3, [r2]
 296 011c 43F02003 		orr	r3, r3, #32
 297 0120 1360     		str	r3, [r2]
 298 0122 C4E7     		b	.L14
 299              	.L32:
 408:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 300              		.loc 1 408 5 view .LVU96
 301 0124 2268     		ldr	r2, [r4]
 302 0126 1368     		ldr	r3, [r2]
 303 0128 23F01003 		bic	r3, r3, #16
 304 012c 1360     		str	r3, [r2]
 305 012e C6E7     		b	.L16
 306              	.L33:
 418:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 17


 307              		.loc 1 418 5 view .LVU97
 308 0130 2268     		ldr	r2, [r4]
 309 0132 1368     		ldr	r3, [r2]
 310 0134 43F00803 		orr	r3, r3, #8
 311 0138 1360     		str	r3, [r2]
 312 013a C8E7     		b	.L18
 313              	.L34:
 428:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 314              		.loc 1 428 5 view .LVU98
 315 013c 2268     		ldr	r2, [r4]
 316 013e 1368     		ldr	r3, [r2]
 317 0140 43F00403 		orr	r3, r3, #4
 318 0144 1360     		str	r3, [r2]
 319 0146 CAE7     		b	.L20
 320              	.LVL12:
 321              	.L21:
 322              	.LCFI1:
 323              		.cfi_def_cfa_offset 0
 324              		.cfi_restore 3
 325              		.cfi_restore 4
 326              		.cfi_restore 5
 327              		.cfi_restore 14
 281:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 328              		.loc 1 281 12 is_stmt 0 view .LVU99
 329 0148 0120     		movs	r0, #1
 330              	.LVL13:
 450:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 331              		.loc 1 450 1 view .LVU100
 332 014a 7047     		bx	lr
 333              		.cfi_endproc
 334              	.LFE130:
 336              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 337              		.align	1
 338              		.weak	HAL_CAN_MspDeInit
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu softvfp
 344              	HAL_CAN_MspDeInit:
 345              	.LVL14:
 346              	.LFB133:
 515:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 516:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 517:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 518:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 519:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 520:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 521:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 522:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 523:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 347              		.loc 1 523 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 524:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 525:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 18


 352              		.loc 1 525 3 view .LVU102
 526:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 527:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 528:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 529:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
 530:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 353              		.loc 1 530 1 is_stmt 0 view .LVU103
 354 0000 7047     		bx	lr
 355              		.cfi_endproc
 356              	.LFE133:
 358              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 359              		.align	1
 360              		.global	HAL_CAN_ConfigFilter
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu softvfp
 366              	HAL_CAN_ConfigFilter:
 367              	.LVL15:
 368              	.LFB134:
 531:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 532:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 533:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 534:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Register a CAN CallBack.
 535:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         To be used instead of the weak predefined callback
 536:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 537:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for CAN module
 538:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be registered
 539:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one of the following values:
 540:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 541:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 542:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 543:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 544:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 545:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 546:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 547:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 548:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 549:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 550:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 551:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 552:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 553:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 554:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 555:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pCallback pointer to the Callback function
 556:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 557:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 558:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Callb
 559:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 560:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 561:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 562:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (pCallback == NULL)
 563:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 564:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 565:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 566:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 567:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 19


 568:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 569:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 570:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 571:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 572:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 573:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 574:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 575:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = pCallback;
 576:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 577:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 578:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 579:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = pCallback;
 580:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 581:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 582:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 583:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = pCallback;
 584:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 585:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 586:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 587:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = pCallback;
 588:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 589:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 590:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 591:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = pCallback;
 592:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 593:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 594:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 595:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = pCallback;
 596:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 597:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 598:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 599:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = pCallback;
 600:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 601:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 602:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 603:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0FullCallback = pCallback;
 604:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 605:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 606:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 607:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = pCallback;
 608:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 609:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 610:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 611:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1FullCallback = pCallback;
 612:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 613:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 614:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 615:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->SleepCallback = pCallback;
 616:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 617:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 618:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 619:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = pCallback;
 620:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 621:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 622:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 623:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCallback = pCallback;
 624:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 20


 625:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 626:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 627:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 628:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 629:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 630:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 631:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 632:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 633:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 634:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 635:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 636:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 637:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 638:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 639:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 640:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 641:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 642:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 643:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 644:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 645:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 646:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 647:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 648:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 649:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 650:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 651:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 652:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 653:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 654:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 655:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 656:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 657:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 658:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 659:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 660:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 661:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 662:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 663:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 664:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 665:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 666:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 667:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 668:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 669:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return error status */
 670:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     status =  HAL_ERROR;
 671:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 672:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 673:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 674:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 675:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 676:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 677:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Unregister a CAN CallBack.
 678:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         CAN callabck is redirected to the weak predefined callback
 679:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 680:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for CAN module
 681:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be unregistered
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 21


 682:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one of the following values:
 683:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 684:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 685:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 686:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 687:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 688:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 689:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 690:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 691:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 692:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 693:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 694:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 695:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 696:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 697:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 698:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 699:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 700:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_UnRegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Cal
 701:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 702:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 703:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 704:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 705:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 706:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 707:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 708:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 709:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = HAL_CAN_TxMailbox0CompleteCallback;
 710:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 711:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 712:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 713:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = HAL_CAN_TxMailbox1CompleteCallback;
 714:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 715:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 716:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 717:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = HAL_CAN_TxMailbox2CompleteCallback;
 718:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 719:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 720:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 721:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = HAL_CAN_TxMailbox0AbortCallback;
 722:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 723:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 724:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 725:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = HAL_CAN_TxMailbox1AbortCallback;
 726:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 727:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 728:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 729:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = HAL_CAN_TxMailbox2AbortCallback;
 730:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 731:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 732:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 733:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = HAL_CAN_RxFifo0MsgPendingCallback;
 734:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 735:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 736:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 737:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0FullCallback = HAL_CAN_RxFifo0FullCallback;
 738:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 22


 739:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 740:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 741:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = HAL_CAN_RxFifo1MsgPendingCallback;
 742:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 743:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 744:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 745:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1FullCallback = HAL_CAN_RxFifo1FullCallback;
 746:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 747:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 748:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 749:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->SleepCallback = HAL_CAN_SleepCallback;
 750:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 751:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 752:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 753:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = HAL_CAN_WakeUpFromRxMsgCallback;
 754:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 755:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 756:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 757:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCallback = HAL_CAN_ErrorCallback;
 758:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 759:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 760:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 761:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 762:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 763:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 764:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 765:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 766:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 767:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 768:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 769:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 770:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 771:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 772:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 773:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 774:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 775:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 776:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 777:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 778:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 779:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 780:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 781:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 782:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 783:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 784:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 785:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 786:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 787:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 788:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 789:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 790:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 791:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 792:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 793:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 794:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 795:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 23


 796:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 797:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 798:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 799:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 800:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 801:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 802:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 803:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return error status */
 804:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     status =  HAL_ERROR;
 805:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 806:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 807:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 808:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 809:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 810:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 811:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 812:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
 813:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 814:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 815:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 816:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *  @brief    Configuration functions.
 817:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *
 818:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
 819:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 820:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****               ##### Configuration functions #####
 821:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 822:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
 823:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 824:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 825:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
 826:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 827:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 828:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 829:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 830:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 831:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 832:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 833:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 834:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 835:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         contains the filter configuration information.
 836:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 837:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 838:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, CAN_FilterTypeDef *sFilterConfig)
 839:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 369              		.loc 1 839 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 840:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t filternbrbitpos;
 374              		.loc 1 840 3 view .LVU105
 841:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 375              		.loc 1 841 3 view .LVU106
 842:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 376              		.loc 1 842 3 view .LVU107
 377              		.loc 1 842 24 is_stmt 0 view .LVU108
 378 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 24


 379              	.LVL16:
 843:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 844:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 380              		.loc 1 844 3 is_stmt 1 view .LVU109
 381              		.loc 1 844 38 is_stmt 0 view .LVU110
 382 0004 013B     		subs	r3, r3, #1
 383              	.LVL17:
 384              		.loc 1 844 38 view .LVU111
 385 0006 DBB2     		uxtb	r3, r3
 386              		.loc 1 844 6 view .LVU112
 387 0008 012B     		cmp	r3, #1
 388 000a 05D9     		bls	.L50
 845:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 846:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 847:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 848:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
 849:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 850:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 851:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 852:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 853:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 854:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 855:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 856:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 857:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN3)
 858:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the CAN instance */
 859:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (hcan->Instance == CAN3)
 860:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 861:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* CAN3 is single instance with 14 dedicated filters banks */
 862:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 863:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check the parameters */
 864:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 865:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 866:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
 867:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 868:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 869:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Select master instance to access the filter banks */
 870:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip = CAN1;
 871:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 872:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check the parameters */
 873:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 874:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 875:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 876:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #elif defined(CAN2)
 877:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 878:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Select master instance to access the filter banks */
 879:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     can_ip = CAN1;
 880:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 881:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 882:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 883:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 884:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 885:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* CAN1 is single instance with 14 dedicated filters banks */
 886:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 887:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 888:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 889:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 25


 890:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 891:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Initialisation mode for the filter */
 892:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 893:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 894:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN3)
 895:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the CAN instance */
 896:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (can_ip == CAN1)
 897:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 898:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Select the start filter number of CAN2 slave instance */
 899:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 900:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 901:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 902:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 903:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #elif defined(CAN2)
 904:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Select the start filter number of CAN2 slave instance */
 905:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 906:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 907:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 908:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif
 909:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Convert filter number into bit position */
 910:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 911:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 912:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter Deactivation */
 913:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 914:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 915:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter Scale */
 916:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 917:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 918:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 16-bit scale for the filter */
 919:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 920:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 921:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 922:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 923:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 924:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 925:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 926:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 927:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 928:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 929:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 930:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 931:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 932:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 933:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 934:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 935:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 936:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit scale for the filter */
 937:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 938:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 939:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 940:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 941:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 942:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 943:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 944:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
 945:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 946:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 26


 947:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 948:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 949:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 950:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter Mode */
 951:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 952:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 953:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 954:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 955:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 956:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 957:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 958:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Identifier list mode for the filter*/
 959:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
 960:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 961:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 962:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter FIFO assignment */
 963:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 964:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 965:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 966:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 967:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 968:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
 969:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 970:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 971:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 972:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 973:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 974:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter activation */
 975:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 976:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 977:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 978:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 979:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 980:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 981:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 982:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 983:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
 984:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 985:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 986:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 987:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 988:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
 989:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 389              		.loc 1 989 5 is_stmt 1 view .LVU113
 390              		.loc 1 989 21 is_stmt 0 view .LVU114
 391 000c 436A     		ldr	r3, [r0, #36]
 392 000e 43F48023 		orr	r3, r3, #262144
 393 0012 4362     		str	r3, [r0, #36]
 990:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 991:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 394              		.loc 1 991 5 is_stmt 1 view .LVU115
 395              		.loc 1 991 12 is_stmt 0 view .LVU116
 396 0014 0120     		movs	r0, #1
 397              	.LVL18:
 992:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 993:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 398              		.loc 1 993 1 view .LVU117
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 27


 399 0016 7047     		bx	lr
 400              	.LVL19:
 401              	.L50:
 839:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t filternbrbitpos;
 402              		.loc 1 839 1 view .LVU118
 403 0018 70B4     		push	{r4, r5, r6}
 404              	.LCFI2:
 405              		.cfi_def_cfa_offset 12
 406              		.cfi_offset 4, -12
 407              		.cfi_offset 5, -8
 408              		.cfi_offset 6, -4
 848:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 409              		.loc 1 848 5 is_stmt 1 view .LVU119
 849:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 410              		.loc 1 849 5 view .LVU120
 850:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 411              		.loc 1 850 5 view .LVU121
 851:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 412              		.loc 1 851 5 view .LVU122
 852:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 413              		.loc 1 852 5 view .LVU123
 853:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 414              		.loc 1 853 5 view .LVU124
 854:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 415              		.loc 1 854 5 view .LVU125
 855:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 416              		.loc 1 855 5 view .LVU126
 879:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 417              		.loc 1 879 5 view .LVU127
 418              	.LVL20:
 882:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 419              		.loc 1 882 5 view .LVU128
 883:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 420              		.loc 1 883 5 view .LVU129
 892:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 421              		.loc 1 892 5 view .LVU130
 422 001a 444B     		ldr	r3, .L53
 423 001c D3F80022 		ldr	r2, [r3, #512]
 424 0020 42F00102 		orr	r2, r2, #1
 425 0024 C3F80022 		str	r2, [r3, #512]
 905:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 426              		.loc 1 905 5 view .LVU131
 427 0028 D3F80022 		ldr	r2, [r3, #512]
 428 002c 22F47C52 		bic	r2, r2, #16128
 429 0030 C3F80022 		str	r2, [r3, #512]
 906:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 430              		.loc 1 906 5 view .LVU132
 431 0034 D3F80022 		ldr	r2, [r3, #512]
 432 0038 486A     		ldr	r0, [r1, #36]
 433              	.LVL21:
 906:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 434              		.loc 1 906 5 is_stmt 0 view .LVU133
 435 003a 42EA0022 		orr	r2, r2, r0, lsl #8
 436 003e C3F80022 		str	r2, [r3, #512]
 910:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 437              		.loc 1 910 5 is_stmt 1 view .LVU134
 910:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 28


 438              		.loc 1 910 52 is_stmt 0 view .LVU135
 439 0042 4A69     		ldr	r2, [r1, #20]
 910:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 440              		.loc 1 910 65 view .LVU136
 441 0044 02F01F02 		and	r2, r2, #31
 910:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 442              		.loc 1 910 21 view .LVU137
 443 0048 0120     		movs	r0, #1
 444 004a 00FA02F2 		lsl	r2, r0, r2
 445              	.LVL22:
 913:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 446              		.loc 1 913 5 is_stmt 1 view .LVU138
 447 004e D3F81C02 		ldr	r0, [r3, #540]
 448 0052 D443     		mvns	r4, r2
 449 0054 20EA0200 		bic	r0, r0, r2
 450 0058 C3F81C02 		str	r0, [r3, #540]
 916:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 451              		.loc 1 916 5 view .LVU139
 916:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 452              		.loc 1 916 22 is_stmt 0 view .LVU140
 453 005c CB69     		ldr	r3, [r1, #28]
 916:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 454              		.loc 1 916 8 view .LVU141
 455 005e B3B9     		cbnz	r3, .L38
 919:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 456              		.loc 1 919 7 is_stmt 1 view .LVU142
 457 0060 324B     		ldr	r3, .L53
 458 0062 D3F80C02 		ldr	r0, [r3, #524]
 459 0066 2040     		ands	r0, r0, r4
 460 0068 C3F80C02 		str	r0, [r3, #524]
 923:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 461              		.loc 1 923 7 view .LVU143
 924:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 462              		.loc 1 924 48 is_stmt 0 view .LVU144
 463 006c CE68     		ldr	r6, [r1, #12]
 925:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 464              		.loc 1 925 22 view .LVU145
 465 006e 8D88     		ldrh	r5, [r1, #4]
 923:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 466              		.loc 1 923 44 view .LVU146
 467 0070 4869     		ldr	r0, [r1, #20]
 924:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 468              		.loc 1 924 75 view .LVU147
 469 0072 45EA0645 		orr	r5, r5, r6, lsl #16
 923:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 470              		.loc 1 923 62 view .LVU148
 471 0076 4830     		adds	r0, r0, #72
 472 0078 43F83050 		str	r5, [r3, r0, lsl #3]
 929:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 473              		.loc 1 929 7 is_stmt 1 view .LVU149
 930:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 474              		.loc 1 930 48 is_stmt 0 view .LVU150
 475 007c 8E68     		ldr	r6, [r1, #8]
 931:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 476              		.loc 1 931 22 view .LVU151
 477 007e 0888     		ldrh	r0, [r1]
 929:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 29


 478              		.loc 1 929 44 view .LVU152
 479 0080 4D69     		ldr	r5, [r1, #20]
 930:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 480              		.loc 1 930 76 view .LVU153
 481 0082 40EA0640 		orr	r0, r0, r6, lsl #16
 929:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 482              		.loc 1 929 62 view .LVU154
 483 0086 4835     		adds	r5, r5, #72
 484 0088 03EBC503 		add	r3, r3, r5, lsl #3
 485 008c 5860     		str	r0, [r3, #4]
 486              	.L38:
 934:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 487              		.loc 1 934 5 is_stmt 1 view .LVU155
 934:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 488              		.loc 1 934 22 is_stmt 0 view .LVU156
 489 008e CB69     		ldr	r3, [r1, #28]
 934:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 490              		.loc 1 934 8 view .LVU157
 491 0090 012B     		cmp	r3, #1
 492 0092 1DD0     		beq	.L51
 493              	.L39:
 951:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 494              		.loc 1 951 5 is_stmt 1 view .LVU158
 951:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 495              		.loc 1 951 22 is_stmt 0 view .LVU159
 496 0094 8B69     		ldr	r3, [r1, #24]
 951:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 497              		.loc 1 951 8 view .LVU160
 498 0096 002B     		cmp	r3, #0
 499 0098 32D1     		bne	.L40
 954:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 500              		.loc 1 954 7 is_stmt 1 view .LVU161
 501 009a 2448     		ldr	r0, .L53
 502 009c D0F80432 		ldr	r3, [r0, #516]
 503 00a0 2340     		ands	r3, r3, r4
 504 00a2 C0F80432 		str	r3, [r0, #516]
 505              	.L41:
 963:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 506              		.loc 1 963 5 view .LVU162
 963:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 507              		.loc 1 963 22 is_stmt 0 view .LVU163
 508 00a6 0B69     		ldr	r3, [r1, #16]
 963:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 509              		.loc 1 963 8 view .LVU164
 510 00a8 8BBB     		cbnz	r3, .L42
 966:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 511              		.loc 1 966 7 is_stmt 1 view .LVU165
 512 00aa 204B     		ldr	r3, .L53
 513 00ac D3F81402 		ldr	r0, [r3, #532]
 514 00b0 0440     		ands	r4, r4, r0
 515 00b2 C3F81442 		str	r4, [r3, #532]
 516              	.L43:
 975:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 517              		.loc 1 975 5 view .LVU166
 975:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 518              		.loc 1 975 22 is_stmt 0 view .LVU167
 519 00b6 0B6A     		ldr	r3, [r1, #32]
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 30


 975:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 520              		.loc 1 975 8 view .LVU168
 521 00b8 012B     		cmp	r3, #1
 522 00ba 2FD0     		beq	.L52
 523              	.LVL23:
 524              	.L44:
 981:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 525              		.loc 1 981 5 is_stmt 1 view .LVU169
 526 00bc 1B4A     		ldr	r2, .L53
 527 00be D2F80032 		ldr	r3, [r2, #512]
 528 00c2 23F00103 		bic	r3, r3, #1
 529 00c6 C2F80032 		str	r3, [r2, #512]
 984:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 530              		.loc 1 984 5 view .LVU170
 984:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 531              		.loc 1 984 12 is_stmt 0 view .LVU171
 532 00ca 0020     		movs	r0, #0
 533              		.loc 1 993 1 view .LVU172
 534 00cc 70BC     		pop	{r4, r5, r6}
 535              	.LCFI3:
 536              		.cfi_remember_state
 537              		.cfi_restore 6
 538              		.cfi_restore 5
 539              		.cfi_restore 4
 540              		.cfi_def_cfa_offset 0
 541 00ce 7047     		bx	lr
 542              	.LVL24:
 543              	.L51:
 544              	.LCFI4:
 545              		.cfi_restore_state
 937:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 546              		.loc 1 937 7 is_stmt 1 view .LVU173
 547 00d0 164B     		ldr	r3, .L53
 548 00d2 D3F80C02 		ldr	r0, [r3, #524]
 549 00d6 1043     		orrs	r0, r0, r2
 550 00d8 C3F80C02 		str	r0, [r3, #524]
 940:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 551              		.loc 1 940 7 view .LVU174
 941:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 552              		.loc 1 941 48 is_stmt 0 view .LVU175
 553 00dc 0E68     		ldr	r6, [r1]
 942:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 554              		.loc 1 942 22 view .LVU176
 555 00de 8D88     		ldrh	r5, [r1, #4]
 940:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 556              		.loc 1 940 44 view .LVU177
 557 00e0 4869     		ldr	r0, [r1, #20]
 941:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 558              		.loc 1 941 72 view .LVU178
 559 00e2 45EA0645 		orr	r5, r5, r6, lsl #16
 940:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 560              		.loc 1 940 62 view .LVU179
 561 00e6 4830     		adds	r0, r0, #72
 562 00e8 43F83050 		str	r5, [r3, r0, lsl #3]
 945:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 563              		.loc 1 945 7 is_stmt 1 view .LVU180
 946:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 31


 564              		.loc 1 946 48 is_stmt 0 view .LVU181
 565 00ec 8E68     		ldr	r6, [r1, #8]
 947:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 566              		.loc 1 947 22 view .LVU182
 567 00ee 8889     		ldrh	r0, [r1, #12]
 945:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 568              		.loc 1 945 44 view .LVU183
 569 00f0 4D69     		ldr	r5, [r1, #20]
 946:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 570              		.loc 1 946 76 view .LVU184
 571 00f2 40EA0640 		orr	r0, r0, r6, lsl #16
 945:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 572              		.loc 1 945 62 view .LVU185
 573 00f6 4835     		adds	r5, r5, #72
 574 00f8 03EBC503 		add	r3, r3, r5, lsl #3
 575 00fc 5860     		str	r0, [r3, #4]
 576 00fe C9E7     		b	.L39
 577              	.L40:
 959:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 578              		.loc 1 959 7 is_stmt 1 view .LVU186
 579 0100 0A48     		ldr	r0, .L53
 580 0102 D0F80432 		ldr	r3, [r0, #516]
 581 0106 1343     		orrs	r3, r3, r2
 582 0108 C0F80432 		str	r3, [r0, #516]
 583 010c CBE7     		b	.L41
 584              	.L42:
 971:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 585              		.loc 1 971 7 view .LVU187
 586 010e 0748     		ldr	r0, .L53
 587 0110 D0F81432 		ldr	r3, [r0, #532]
 588 0114 1343     		orrs	r3, r3, r2
 589 0116 C0F81432 		str	r3, [r0, #532]
 590 011a CCE7     		b	.L43
 591              	.L52:
 977:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 592              		.loc 1 977 7 view .LVU188
 593 011c 0349     		ldr	r1, .L53
 594              	.LVL25:
 977:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 595              		.loc 1 977 7 is_stmt 0 view .LVU189
 596 011e D1F81C32 		ldr	r3, [r1, #540]
 597 0122 1A43     		orrs	r2, r2, r3
 598              	.LVL26:
 977:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 599              		.loc 1 977 7 view .LVU190
 600 0124 C1F81C22 		str	r2, [r1, #540]
 601 0128 C8E7     		b	.L44
 602              	.L54:
 603 012a 00BF     		.align	2
 604              	.L53:
 605 012c 00640040 		.word	1073767424
 606              		.cfi_endproc
 607              	.LFE134:
 609              		.section	.text.HAL_CAN_Start,"ax",%progbits
 610              		.align	1
 611              		.global	HAL_CAN_Start
 612              		.syntax unified
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 32


 613              		.thumb
 614              		.thumb_func
 615              		.fpu softvfp
 617              	HAL_CAN_Start:
 618              	.LVL27:
 619              	.LFB135:
 994:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 995:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 996:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
 997:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 998:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 999:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
1000:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *  @brief    Control functions
1001:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *
1002:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
1003:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1004:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                       ##### Control functions #####
1005:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1006:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
1007:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
1008:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
1009:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
1010:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
1011:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
1012:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
1013:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                              and activate the corresponding
1014:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                              transmission request
1015:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
1016:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
1017:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
1018:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                              pending on the selected Tx mailbox
1019:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
1020:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
1021:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1022:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
1023:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
1024:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1025:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1026:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1027:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Start the CAN module.
1028:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1029:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1030:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1031:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1032:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
1033:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 620              		.loc 1 1033 1 is_stmt 1 view -0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		.loc 1 1033 1 is_stmt 0 view .LVU192
 625 0000 70B5     		push	{r4, r5, r6, lr}
 626              	.LCFI5:
 627              		.cfi_def_cfa_offset 16
 628              		.cfi_offset 4, -16
 629              		.cfi_offset 5, -12
 630              		.cfi_offset 6, -8
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 33


 631              		.cfi_offset 14, -4
 632 0002 0446     		mov	r4, r0
1034:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
 633              		.loc 1 1034 3 is_stmt 1 view .LVU193
1035:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1036:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 634              		.loc 1 1036 3 view .LVU194
 635              		.loc 1 1036 11 is_stmt 0 view .LVU195
 636 0004 90F82050 		ldrb	r5, [r0, #32]	@ zero_extendqisi2
 637 0008 EDB2     		uxtb	r5, r5
 638              		.loc 1 1036 6 view .LVU196
 639 000a 012D     		cmp	r5, #1
 640 000c 06D0     		beq	.L61
1037:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1038:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Change CAN peripheral state */
1039:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
1040:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1041:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Request leave initialisation */
1042:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1043:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1044:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get tick */
1045:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     tickstart = HAL_GetTick();
1046:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1047:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wait the acknowledge */
1048:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
1049:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1050:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check for the Timeout */
1051:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1052:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1053:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1054:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1055:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1056:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Change CAN state */
1057:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1058:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1059:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
1060:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1061:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1062:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1063:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Reset the CAN ErrorCode */
1064:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
1065:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1066:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1067:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1068:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1069:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1070:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1071:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1072:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
 641              		.loc 1 1072 5 is_stmt 1 view .LVU197
 642              		.loc 1 1072 21 is_stmt 0 view .LVU198
 643 000e 436A     		ldr	r3, [r0, #36]
 644 0010 43F40023 		orr	r3, r3, #524288
 645 0014 4362     		str	r3, [r0, #36]
1073:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1074:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 646              		.loc 1 1074 5 is_stmt 1 view .LVU199
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 34


 647              		.loc 1 1074 12 is_stmt 0 view .LVU200
 648 0016 0125     		movs	r5, #1
 649              	.LVL28:
 650              	.L58:
1075:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1076:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 651              		.loc 1 1076 1 view .LVU201
 652 0018 2846     		mov	r0, r5
 653 001a 70BD     		pop	{r4, r5, r6, pc}
 654              	.LVL29:
 655              	.L61:
1039:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 656              		.loc 1 1039 5 is_stmt 1 view .LVU202
1039:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 657              		.loc 1 1039 17 is_stmt 0 view .LVU203
 658 001c 0223     		movs	r3, #2
 659 001e 80F82030 		strb	r3, [r0, #32]
1042:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 660              		.loc 1 1042 5 is_stmt 1 view .LVU204
 661 0022 0268     		ldr	r2, [r0]
 662 0024 1368     		ldr	r3, [r2]
 663 0026 23F00103 		bic	r3, r3, #1
 664 002a 1360     		str	r3, [r2]
1045:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 665              		.loc 1 1045 5 view .LVU205
1045:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 666              		.loc 1 1045 17 is_stmt 0 view .LVU206
 667 002c FFF7FEFF 		bl	HAL_GetTick
 668              	.LVL30:
1045:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 669              		.loc 1 1045 17 view .LVU207
 670 0030 0646     		mov	r6, r0
 671              	.LVL31:
1048:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 672              		.loc 1 1048 5 is_stmt 1 view .LVU208
 673              	.L57:
1048:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 674              		.loc 1 1048 11 view .LVU209
1048:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 675              		.loc 1 1048 17 is_stmt 0 view .LVU210
 676 0032 2368     		ldr	r3, [r4]
1048:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 677              		.loc 1 1048 27 view .LVU211
 678 0034 5B68     		ldr	r3, [r3, #4]
1048:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 679              		.loc 1 1048 11 view .LVU212
 680 0036 13F0010F 		tst	r3, #1
 681 003a 0CD0     		beq	.L62
1051:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 682              		.loc 1 1051 7 is_stmt 1 view .LVU213
1051:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 683              		.loc 1 1051 12 is_stmt 0 view .LVU214
 684 003c FFF7FEFF 		bl	HAL_GetTick
 685              	.LVL32:
1051:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 686              		.loc 1 1051 26 view .LVU215
 687 0040 831B     		subs	r3, r0, r6
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 35


1051:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 688              		.loc 1 1051 10 view .LVU216
 689 0042 0A2B     		cmp	r3, #10
 690 0044 F5D9     		bls	.L57
1054:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 691              		.loc 1 1054 9 is_stmt 1 view .LVU217
1054:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 692              		.loc 1 1054 25 is_stmt 0 view .LVU218
 693 0046 636A     		ldr	r3, [r4, #36]
 694 0048 43F40033 		orr	r3, r3, #131072
 695 004c 6362     		str	r3, [r4, #36]
1057:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 696              		.loc 1 1057 9 is_stmt 1 view .LVU219
1057:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 697              		.loc 1 1057 21 is_stmt 0 view .LVU220
 698 004e 0523     		movs	r3, #5
 699 0050 84F82030 		strb	r3, [r4, #32]
1059:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 700              		.loc 1 1059 9 is_stmt 1 view .LVU221
1059:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 701              		.loc 1 1059 16 is_stmt 0 view .LVU222
 702 0054 E0E7     		b	.L58
 703              	.L62:
1064:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 704              		.loc 1 1064 5 is_stmt 1 view .LVU223
1064:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 705              		.loc 1 1064 21 is_stmt 0 view .LVU224
 706 0056 0025     		movs	r5, #0
 707 0058 6562     		str	r5, [r4, #36]
1067:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 708              		.loc 1 1067 5 is_stmt 1 view .LVU225
1067:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 709              		.loc 1 1067 12 is_stmt 0 view .LVU226
 710 005a DDE7     		b	.L58
 711              		.cfi_endproc
 712              	.LFE135:
 714              		.section	.text.HAL_CAN_Stop,"ax",%progbits
 715              		.align	1
 716              		.global	HAL_CAN_Stop
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 720              		.fpu softvfp
 722              	HAL_CAN_Stop:
 723              	.LVL33:
 724              	.LFB136:
1077:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1078:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1079:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
1080:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1081:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1082:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1083:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1084:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
1085:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 725              		.loc 1 1085 1 is_stmt 1 view -0
 726              		.cfi_startproc
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 36


 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		.loc 1 1085 1 is_stmt 0 view .LVU228
 730 0000 38B5     		push	{r3, r4, r5, lr}
 731              	.LCFI6:
 732              		.cfi_def_cfa_offset 16
 733              		.cfi_offset 3, -16
 734              		.cfi_offset 4, -12
 735              		.cfi_offset 5, -8
 736              		.cfi_offset 14, -4
 737 0002 0446     		mov	r4, r0
1086:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
 738              		.loc 1 1086 3 is_stmt 1 view .LVU229
1087:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1088:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
 739              		.loc 1 1088 3 view .LVU230
 740              		.loc 1 1088 11 is_stmt 0 view .LVU231
 741 0004 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 742 0008 DBB2     		uxtb	r3, r3
 743              		.loc 1 1088 6 view .LVU232
 744 000a 022B     		cmp	r3, #2
 745 000c 05D0     		beq	.L69
1089:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1090:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Request initialisation */
1091:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1092:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1093:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get tick */
1094:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     tickstart = HAL_GetTick();
1095:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1096:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wait the acknowledge */
1097:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
1098:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1099:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check for the Timeout */
1100:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1101:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1102:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1103:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1104:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1105:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Change CAN state */
1106:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1107:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1108:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
1109:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1110:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1111:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1112:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Exit from sleep mode */
1113:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1114:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1115:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Change CAN peripheral state */
1116:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1117:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1118:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1119:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1120:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1121:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1122:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1123:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 37


1124:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
 746              		.loc 1 1124 5 is_stmt 1 view .LVU233
 747              		.loc 1 1124 21 is_stmt 0 view .LVU234
 748 000e 436A     		ldr	r3, [r0, #36]
 749 0010 43F48013 		orr	r3, r3, #1048576
 750 0014 4362     		str	r3, [r0, #36]
1125:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1126:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 751              		.loc 1 1126 5 is_stmt 1 view .LVU235
 752              		.loc 1 1126 12 is_stmt 0 view .LVU236
 753 0016 0120     		movs	r0, #1
 754              	.LVL34:
 755              	.L66:
1127:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1128:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 756              		.loc 1 1128 1 view .LVU237
 757 0018 38BD     		pop	{r3, r4, r5, pc}
 758              	.LVL35:
 759              	.L69:
1091:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 760              		.loc 1 1091 5 is_stmt 1 view .LVU238
 761 001a 0268     		ldr	r2, [r0]
 762 001c 1368     		ldr	r3, [r2]
 763 001e 43F00103 		orr	r3, r3, #1
 764 0022 1360     		str	r3, [r2]
1094:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 765              		.loc 1 1094 5 view .LVU239
1094:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 766              		.loc 1 1094 17 is_stmt 0 view .LVU240
 767 0024 FFF7FEFF 		bl	HAL_GetTick
 768              	.LVL36:
1094:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 769              		.loc 1 1094 17 view .LVU241
 770 0028 0546     		mov	r5, r0
 771              	.LVL37:
1097:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 772              		.loc 1 1097 5 is_stmt 1 view .LVU242
 773              	.L65:
1097:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 774              		.loc 1 1097 11 view .LVU243
1097:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 775              		.loc 1 1097 17 is_stmt 0 view .LVU244
 776 002a 2368     		ldr	r3, [r4]
1097:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 777              		.loc 1 1097 27 view .LVU245
 778 002c 5A68     		ldr	r2, [r3, #4]
1097:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 779              		.loc 1 1097 11 view .LVU246
 780 002e 12F0010F 		tst	r2, #1
 781 0032 0DD1     		bne	.L70
1100:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 782              		.loc 1 1100 7 is_stmt 1 view .LVU247
1100:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 783              		.loc 1 1100 12 is_stmt 0 view .LVU248
 784 0034 FFF7FEFF 		bl	HAL_GetTick
 785              	.LVL38:
1100:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 38


 786              		.loc 1 1100 26 view .LVU249
 787 0038 431B     		subs	r3, r0, r5
1100:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 788              		.loc 1 1100 10 view .LVU250
 789 003a 0A2B     		cmp	r3, #10
 790 003c F5D9     		bls	.L65
1103:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 791              		.loc 1 1103 9 is_stmt 1 view .LVU251
1103:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 792              		.loc 1 1103 25 is_stmt 0 view .LVU252
 793 003e 636A     		ldr	r3, [r4, #36]
 794 0040 43F40033 		orr	r3, r3, #131072
 795 0044 6362     		str	r3, [r4, #36]
1106:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 796              		.loc 1 1106 9 is_stmt 1 view .LVU253
1106:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 797              		.loc 1 1106 21 is_stmt 0 view .LVU254
 798 0046 0523     		movs	r3, #5
 799 0048 84F82030 		strb	r3, [r4, #32]
1108:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 800              		.loc 1 1108 9 is_stmt 1 view .LVU255
1108:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 801              		.loc 1 1108 16 is_stmt 0 view .LVU256
 802 004c 0120     		movs	r0, #1
 803 004e E3E7     		b	.L66
 804              	.L70:
1113:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 805              		.loc 1 1113 5 is_stmt 1 view .LVU257
 806 0050 1A68     		ldr	r2, [r3]
 807 0052 22F00202 		bic	r2, r2, #2
 808 0056 1A60     		str	r2, [r3]
1116:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 809              		.loc 1 1116 5 view .LVU258
1116:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 810              		.loc 1 1116 17 is_stmt 0 view .LVU259
 811 0058 0123     		movs	r3, #1
 812 005a 84F82030 		strb	r3, [r4, #32]
1119:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 813              		.loc 1 1119 5 is_stmt 1 view .LVU260
1119:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 814              		.loc 1 1119 12 is_stmt 0 view .LVU261
 815 005e 0020     		movs	r0, #0
 816 0060 DAE7     		b	.L66
 817              		.cfi_endproc
 818              	.LFE136:
 820              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 821              		.align	1
 822              		.global	HAL_CAN_DeInit
 823              		.syntax unified
 824              		.thumb
 825              		.thumb_func
 826              		.fpu softvfp
 828              	HAL_CAN_DeInit:
 829              	.LVL39:
 830              	.LFB131:
 460:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 831              		.loc 1 460 1 is_stmt 1 view -0
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 39


 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 462:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 835              		.loc 1 462 3 view .LVU263
 462:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 836              		.loc 1 462 6 is_stmt 0 view .LVU264
 837 0000 80B1     		cbz	r0, .L73
 460:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 838              		.loc 1 460 1 view .LVU265
 839 0002 10B5     		push	{r4, lr}
 840              	.LCFI7:
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 4, -8
 843              		.cfi_offset 14, -4
 844 0004 0446     		mov	r4, r0
 468:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 845              		.loc 1 468 3 is_stmt 1 view .LVU266
 471:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 846              		.loc 1 471 3 view .LVU267
 471:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 847              		.loc 1 471 9 is_stmt 0 view .LVU268
 848 0006 FFF7FEFF 		bl	HAL_CAN_Stop
 849              	.LVL40:
 484:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 850              		.loc 1 484 3 is_stmt 1 view .LVU269
 851 000a 2046     		mov	r0, r4
 852 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 853              	.LVL41:
 488:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 854              		.loc 1 488 3 view .LVU270
 855 0010 2268     		ldr	r2, [r4]
 856 0012 1368     		ldr	r3, [r2]
 857 0014 43F40043 		orr	r3, r3, #32768
 858 0018 1360     		str	r3, [r2]
 491:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 859              		.loc 1 491 3 view .LVU271
 491:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 860              		.loc 1 491 19 is_stmt 0 view .LVU272
 861 001a 0020     		movs	r0, #0
 862 001c 6062     		str	r0, [r4, #36]
 494:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 863              		.loc 1 494 3 is_stmt 1 view .LVU273
 494:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 864              		.loc 1 494 15 is_stmt 0 view .LVU274
 865 001e 84F82000 		strb	r0, [r4, #32]
 497:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 866              		.loc 1 497 3 is_stmt 1 view .LVU275
 498:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 867              		.loc 1 498 1 is_stmt 0 view .LVU276
 868 0022 10BD     		pop	{r4, pc}
 869              	.LVL42:
 870              	.L73:
 871              	.LCFI8:
 872              		.cfi_def_cfa_offset 0
 873              		.cfi_restore 4
 874              		.cfi_restore 14
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 40


 464:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 875              		.loc 1 464 12 view .LVU277
 876 0024 0120     		movs	r0, #1
 877              	.LVL43:
 498:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 878              		.loc 1 498 1 view .LVU278
 879 0026 7047     		bx	lr
 880              		.cfi_endproc
 881              	.LFE131:
 883              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 884              		.align	1
 885              		.global	HAL_CAN_RequestSleep
 886              		.syntax unified
 887              		.thumb
 888              		.thumb_func
 889              		.fpu softvfp
 891              	HAL_CAN_RequestSleep:
 892              	.LVL44:
 893              	.LFB137:
1129:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1130:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1131:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
1132:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
1133:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
1134:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         of a CAN frame) has been completed.
1135:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1136:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1137:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status.
1138:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1139:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
1140:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 894              		.loc 1 1140 1 is_stmt 1 view -0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              		@ link register save eliminated.
1141:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 899              		.loc 1 1141 3 view .LVU280
 900              		.loc 1 1141 24 is_stmt 0 view .LVU281
 901 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 902              	.LVL45:
1142:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1143:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 903              		.loc 1 1143 3 is_stmt 1 view .LVU282
 904              		.loc 1 1143 38 is_stmt 0 view .LVU283
 905 0004 013B     		subs	r3, r3, #1
 906              	.LVL46:
 907              		.loc 1 1143 38 view .LVU284
 908 0006 DBB2     		uxtb	r3, r3
 909              		.loc 1 1143 6 view .LVU285
 910 0008 012B     		cmp	r3, #1
 911 000a 05D9     		bls	.L81
1144:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1145:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1146:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Request Sleep mode */
1147:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1148:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 41


1149:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1150:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1151:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1152:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1153:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1154:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1155:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 912              		.loc 1 1155 5 is_stmt 1 view .LVU286
 913              		.loc 1 1155 21 is_stmt 0 view .LVU287
 914 000c 436A     		ldr	r3, [r0, #36]
 915 000e 43F48023 		orr	r3, r3, #262144
 916 0012 4362     		str	r3, [r0, #36]
1156:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1157:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1158:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 917              		.loc 1 1158 5 is_stmt 1 view .LVU288
 918              		.loc 1 1158 12 is_stmt 0 view .LVU289
 919 0014 0120     		movs	r0, #1
 920              	.LVL47:
1159:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1160:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 921              		.loc 1 1160 1 view .LVU290
 922 0016 7047     		bx	lr
 923              	.LVL48:
 924              	.L81:
1147:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 925              		.loc 1 1147 5 is_stmt 1 view .LVU291
 926 0018 0268     		ldr	r2, [r0]
 927 001a 1368     		ldr	r3, [r2]
 928 001c 43F00203 		orr	r3, r3, #2
 929 0020 1360     		str	r3, [r2]
1150:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 930              		.loc 1 1150 5 view .LVU292
1150:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 931              		.loc 1 1150 12 is_stmt 0 view .LVU293
 932 0022 0020     		movs	r0, #0
 933              	.LVL49:
1150:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 934              		.loc 1 1150 12 view .LVU294
 935 0024 7047     		bx	lr
 936              		.cfi_endproc
 937              	.LFE137:
 939              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 940              		.align	1
 941              		.global	HAL_CAN_WakeUp
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu softvfp
 947              	HAL_CAN_WakeUp:
 948              	.LVL50:
 949              	.LFB138:
1161:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1162:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1163:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Wake up from sleep mode.
1164:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
1165:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         is exited.
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 42


1166:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1167:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1168:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status.
1169:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1170:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
1171:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 950              		.loc 1 1171 1 is_stmt 1 view -0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 8
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955              		.loc 1 1171 1 is_stmt 0 view .LVU296
 956 0000 82B0     		sub	sp, sp, #8
 957              	.LCFI9:
 958              		.cfi_def_cfa_offset 8
1172:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   __IO uint32_t count = 0;
 959              		.loc 1 1172 3 is_stmt 1 view .LVU297
 960              		.loc 1 1172 17 is_stmt 0 view .LVU298
 961 0002 0023     		movs	r3, #0
 962 0004 0193     		str	r3, [sp, #4]
1173:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t timeout = 1000000U;
 963              		.loc 1 1173 3 is_stmt 1 view .LVU299
 964              	.LVL51:
1174:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 965              		.loc 1 1174 3 view .LVU300
 966              		.loc 1 1174 24 is_stmt 0 view .LVU301
 967 0006 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 968              	.LVL52:
1175:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1176:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 969              		.loc 1 1176 3 is_stmt 1 view .LVU302
 970              		.loc 1 1176 38 is_stmt 0 view .LVU303
 971 000a 013B     		subs	r3, r3, #1
 972              	.LVL53:
 973              		.loc 1 1176 38 view .LVU304
 974 000c DBB2     		uxtb	r3, r3
 975              		.loc 1 1176 6 view .LVU305
 976 000e 012B     		cmp	r3, #1
 977 0010 18D8     		bhi	.L83
1177:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1178:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1179:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wake up request */
1180:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 978              		.loc 1 1180 5 is_stmt 1 view .LVU306
 979 0012 0268     		ldr	r2, [r0]
 980 0014 1368     		ldr	r3, [r2]
 981 0016 23F00203 		bic	r3, r3, #2
 982 001a 1360     		str	r3, [r2]
 983              	.L86:
1181:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1182:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wait sleep mode is exited */
1183:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     do
 984              		.loc 1 1183 5 view .LVU307
1184:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1185:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Increment counter */
1186:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       count++;
 985              		.loc 1 1186 7 view .LVU308
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 43


 986              		.loc 1 1186 12 is_stmt 0 view .LVU309
 987 001c 019B     		ldr	r3, [sp, #4]
 988 001e 0133     		adds	r3, r3, #1
 989 0020 0193     		str	r3, [sp, #4]
1187:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1188:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check if timeout is reached */
1189:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (count > timeout)
 990              		.loc 1 1189 7 is_stmt 1 view .LVU310
 991              		.loc 1 1189 17 is_stmt 0 view .LVU311
 992 0022 019A     		ldr	r2, [sp, #4]
 993              		.loc 1 1189 10 view .LVU312
 994 0024 0B4B     		ldr	r3, .L89
 995 0026 9A42     		cmp	r2, r3
 996 0028 06D8     		bhi	.L88
1190:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1191:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1192:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1193:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1194:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
1195:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1196:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1197:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
 997              		.loc 1 1197 11 is_stmt 1 view .LVU313
 998              		.loc 1 1197 17 is_stmt 0 view .LVU314
 999 002a 0368     		ldr	r3, [r0]
 1000              		.loc 1 1197 27 view .LVU315
 1001 002c 5B68     		ldr	r3, [r3, #4]
 1002              		.loc 1 1197 5 view .LVU316
 1003 002e 13F0020F 		tst	r3, #2
 1004 0032 F3D1     		bne	.L86
1198:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1199:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1200:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1005              		.loc 1 1200 12 view .LVU317
 1006 0034 0020     		movs	r0, #0
 1007              	.LVL54:
 1008              		.loc 1 1200 12 view .LVU318
 1009 0036 0AE0     		b	.L85
 1010              	.LVL55:
 1011              	.L88:
1192:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 1012              		.loc 1 1192 9 is_stmt 1 view .LVU319
1192:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 1013              		.loc 1 1192 25 is_stmt 0 view .LVU320
 1014 0038 436A     		ldr	r3, [r0, #36]
 1015 003a 43F40033 		orr	r3, r3, #131072
 1016 003e 4362     		str	r3, [r0, #36]
1194:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 1017              		.loc 1 1194 9 is_stmt 1 view .LVU321
1194:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 1018              		.loc 1 1194 16 is_stmt 0 view .LVU322
 1019 0040 0120     		movs	r0, #1
 1020              	.LVL56:
1194:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 1021              		.loc 1 1194 16 view .LVU323
 1022 0042 04E0     		b	.L85
 1023              	.LVL57:
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 44


 1024              	.L83:
1201:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1202:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1203:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1204:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1205:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1025              		.loc 1 1205 5 is_stmt 1 view .LVU324
 1026              		.loc 1 1205 21 is_stmt 0 view .LVU325
 1027 0044 436A     		ldr	r3, [r0, #36]
 1028 0046 43F48023 		orr	r3, r3, #262144
 1029 004a 4362     		str	r3, [r0, #36]
1206:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1207:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1030              		.loc 1 1207 5 is_stmt 1 view .LVU326
 1031              		.loc 1 1207 12 is_stmt 0 view .LVU327
 1032 004c 0120     		movs	r0, #1
 1033              	.LVL58:
 1034              	.L85:
1208:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1209:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1035              		.loc 1 1209 1 view .LVU328
 1036 004e 02B0     		add	sp, sp, #8
 1037              	.LCFI10:
 1038              		.cfi_def_cfa_offset 0
 1039              		@ sp needed
 1040 0050 7047     		bx	lr
 1041              	.L90:
 1042 0052 00BF     		.align	2
 1043              	.L89:
 1044 0054 40420F00 		.word	1000000
 1045              		.cfi_endproc
 1046              	.LFE138:
 1048              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
 1049              		.align	1
 1050              		.global	HAL_CAN_IsSleepActive
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1054              		.fpu softvfp
 1056              	HAL_CAN_IsSleepActive:
 1057              	.LVL59:
 1058              	.LFB139:
1210:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1211:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1212:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Check is sleep mode is active.
1213:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1214:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1215:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Status
1216:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
1217:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 1 : Sleep mode is active.
1218:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1219:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(CAN_HandleTypeDef *hcan)
1220:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1059              		.loc 1 1220 1 is_stmt 1 view -0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 45


 1063              		@ link register save eliminated.
1221:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t status = 0U;
 1064              		.loc 1 1221 3 view .LVU330
1222:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1065              		.loc 1 1222 3 view .LVU331
 1066              		.loc 1 1222 24 is_stmt 0 view .LVU332
 1067 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1068              	.LVL60:
1223:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1224:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1069              		.loc 1 1224 3 is_stmt 1 view .LVU333
 1070              		.loc 1 1224 38 is_stmt 0 view .LVU334
 1071 0004 013B     		subs	r3, r3, #1
 1072              	.LVL61:
 1073              		.loc 1 1224 38 view .LVU335
 1074 0006 DBB2     		uxtb	r3, r3
 1075              		.loc 1 1224 6 view .LVU336
 1076 0008 012B     		cmp	r3, #1
 1077 000a 01D9     		bls	.L95
1221:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1078              		.loc 1 1221 12 view .LVU337
 1079 000c 0020     		movs	r0, #0
 1080              	.LVL62:
1221:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1081              		.loc 1 1221 12 view .LVU338
 1082 000e 7047     		bx	lr
 1083              	.LVL63:
 1084              	.L95:
1225:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1226:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1227:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Sleep mode */
1228:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 1085              		.loc 1 1228 5 is_stmt 1 view .LVU339
 1086              		.loc 1 1228 14 is_stmt 0 view .LVU340
 1087 0010 0368     		ldr	r3, [r0]
 1088              		.loc 1 1228 24 view .LVU341
 1089 0012 5868     		ldr	r0, [r3, #4]
 1090              	.LVL64:
 1091              		.loc 1 1228 8 view .LVU342
 1092 0014 10F00200 		ands	r0, r0, #2
 1093 0018 00D1     		bne	.L94
 1094 001a 7047     		bx	lr
 1095              	.L94:
1229:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1230:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       status = 1U;
 1096              		.loc 1 1230 14 view .LVU343
 1097 001c 0120     		movs	r0, #1
 1098              	.LVL65:
1231:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1232:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1233:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1234:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
1235:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 1099              		.loc 1 1235 3 is_stmt 1 view .LVU344
1236:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1100              		.loc 1 1236 1 is_stmt 0 view .LVU345
 1101 001e 7047     		bx	lr
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 46


 1102              		.cfi_endproc
 1103              	.LFE139:
 1105              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 1106              		.align	1
 1107              		.global	HAL_CAN_AddTxMessage
 1108              		.syntax unified
 1109              		.thumb
 1110              		.thumb_func
 1111              		.fpu softvfp
 1113              	HAL_CAN_AddTxMessage:
 1114              	.LVL66:
 1115              	.LFB140:
1237:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1238:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1239:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
1240:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         corresponding transmission request.
1241:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1242:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1243:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
1244:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
1245:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
1246:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
1247:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
1248:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1249:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1250:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, CAN_TxHeaderTypeDef *pHeader, uint8
1251:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1116              		.loc 1 1251 1 is_stmt 1 view -0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              		@ link register save eliminated.
 1121              		.loc 1 1251 1 is_stmt 0 view .LVU347
 1122 0000 70B4     		push	{r4, r5, r6}
 1123              	.LCFI11:
 1124              		.cfi_def_cfa_offset 12
 1125              		.cfi_offset 4, -12
 1126              		.cfi_offset 5, -8
 1127              		.cfi_offset 6, -4
1252:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
 1128              		.loc 1 1252 3 is_stmt 1 view .LVU348
1253:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1129              		.loc 1 1253 3 view .LVU349
 1130              		.loc 1 1253 24 is_stmt 0 view .LVU350
 1131 0002 90F82040 		ldrb	r4, [r0, #32]	@ zero_extendqisi2
 1132              	.LVL67:
1254:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 1133              		.loc 1 1254 3 is_stmt 1 view .LVU351
 1134              		.loc 1 1254 18 is_stmt 0 view .LVU352
 1135 0006 0568     		ldr	r5, [r0]
 1136              		.loc 1 1254 12 view .LVU353
 1137 0008 AD68     		ldr	r5, [r5, #8]
 1138              	.LVL68:
1255:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1256:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
1257:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
 1139              		.loc 1 1257 3 is_stmt 1 view .LVU354
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 47


1258:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
 1140              		.loc 1 1258 3 view .LVU355
1259:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
 1141              		.loc 1 1259 3 view .LVU356
1260:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
 1142              		.loc 1 1260 3 view .LVU357
1261:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1262:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
1263:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1264:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1265:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1266:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
 1143              		.loc 1 1266 5 view .LVU358
1267:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1268:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
 1144              		.loc 1 1268 3 view .LVU359
1269:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1270:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1145              		.loc 1 1270 3 view .LVU360
 1146              		.loc 1 1270 38 is_stmt 0 view .LVU361
 1147 000a 013C     		subs	r4, r4, #1
 1148              	.LVL69:
 1149              		.loc 1 1270 38 view .LVU362
 1150 000c E4B2     		uxtb	r4, r4
 1151              		.loc 1 1270 6 view .LVU363
 1152 000e 012C     		cmp	r4, #1
 1153 0010 65D8     		bhi	.L97
1271:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1272:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1273:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
1274:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
 1154              		.loc 1 1274 5 is_stmt 1 view .LVU364
 1155              		.loc 1 1274 8 is_stmt 0 view .LVU365
 1156 0012 15F0E05F 		tst	r5, #469762048
 1157 0016 5CD0     		beq	.L98
1275:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
1276:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
1277:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1278:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Select an empty transmit mailbox */
1279:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 1158              		.loc 1 1279 7 is_stmt 1 view .LVU366
 1159              		.loc 1 1279 23 is_stmt 0 view .LVU367
 1160 0018 C5F30164 		ubfx	r4, r5, #24, #2
 1161              	.LVL70:
1280:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1281:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check transmit mailbox value */
1282:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (transmitmailbox > 2U)
 1162              		.loc 1 1282 7 is_stmt 1 view .LVU368
 1163              		.loc 1 1282 10 is_stmt 0 view .LVU369
 1164 001c 022C     		cmp	r4, #2
 1165 001e 05D9     		bls	.L99
1283:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1284:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1285:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INTERNAL;
 1166              		.loc 1 1285 9 is_stmt 1 view .LVU370
 1167              		.loc 1 1285 25 is_stmt 0 view .LVU371
 1168 0020 436A     		ldr	r3, [r0, #36]
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 48


 1169              	.LVL71:
 1170              		.loc 1 1285 25 view .LVU372
 1171 0022 43F40003 		orr	r3, r3, #8388608
 1172 0026 4362     		str	r3, [r0, #36]
1286:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1287:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 1173              		.loc 1 1287 9 is_stmt 1 view .LVU373
 1174              		.loc 1 1287 16 is_stmt 0 view .LVU374
 1175 0028 0120     		movs	r0, #1
 1176              	.LVL72:
 1177              		.loc 1 1287 16 view .LVU375
 1178 002a 5DE0     		b	.L100
 1179              	.LVL73:
 1180              	.L99:
1288:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1289:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1290:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Store the Tx mailbox */
1291:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
 1181              		.loc 1 1291 7 is_stmt 1 view .LVU376
 1182              		.loc 1 1291 33 is_stmt 0 view .LVU377
 1183 002c 0125     		movs	r5, #1
 1184              	.LVL74:
 1185              		.loc 1 1291 33 view .LVU378
 1186 002e A540     		lsls	r5, r5, r4
 1187              		.loc 1 1291 19 view .LVU379
 1188 0030 1D60     		str	r5, [r3]
1292:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1293:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the Id */
1294:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
 1189              		.loc 1 1294 7 is_stmt 1 view .LVU380
 1190              		.loc 1 1294 18 is_stmt 0 view .LVU381
 1191 0032 8B68     		ldr	r3, [r1, #8]
 1192              	.LVL75:
 1193              		.loc 1 1294 10 view .LVU382
 1194 0034 002B     		cmp	r3, #0
 1195 0036 39D1     		bne	.L101
1295:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1296:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
 1196              		.loc 1 1296 9 is_stmt 1 view .LVU383
 1197              		.loc 1 1296 68 is_stmt 0 view .LVU384
 1198 0038 0E68     		ldr	r6, [r1]
1297:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1199              		.loc 1 1297 67 view .LVU385
 1200 003a CB68     		ldr	r3, [r1, #12]
1296:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1201              		.loc 1 1296 13 view .LVU386
 1202 003c 0568     		ldr	r5, [r0]
1296:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1203              		.loc 1 1296 98 view .LVU387
 1204 003e 43EA4656 		orr	r6, r3, r6, lsl #21
1296:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1205              		.loc 1 1296 57 view .LVU388
 1206 0042 04F11803 		add	r3, r4, #24
 1207 0046 1B01     		lsls	r3, r3, #4
 1208 0048 EE50     		str	r6, [r5, r3]
 1209              	.L102:
1298:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 49


1299:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1300:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1301:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
1302:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
1303:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
1304:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1305:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1306:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the DLC */
1307:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
 1210              		.loc 1 1307 7 is_stmt 1 view .LVU389
 1211              		.loc 1 1307 11 is_stmt 0 view .LVU390
 1212 004a 0368     		ldr	r3, [r0]
 1213              		.loc 1 1307 66 view .LVU391
 1214 004c 0D69     		ldr	r5, [r1, #16]
 1215              		.loc 1 1307 56 view .LVU392
 1216 004e 04F11806 		add	r6, r4, #24
 1217 0052 03EB0613 		add	r3, r3, r6, lsl #4
 1218 0056 5D60     		str	r5, [r3, #4]
1308:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1309:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
1310:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
 1219              		.loc 1 1310 7 is_stmt 1 view .LVU393
 1220              		.loc 1 1310 18 is_stmt 0 view .LVU394
 1221 0058 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 1222              		.loc 1 1310 10 view .LVU395
 1223 005a 012B     		cmp	r3, #1
 1224 005c 31D0     		beq	.L105
 1225              	.LVL76:
 1226              	.L103:
1311:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1312:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
1313:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1314:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1315:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the data field */
1316:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
 1227              		.loc 1 1316 7 is_stmt 1 view .LVU396
 1228 005e D179     		ldrb	r1, [r2, #7]	@ zero_extendqisi2
 1229 0060 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 1230 0062 1B04     		lsls	r3, r3, #16
 1231 0064 43EA0163 		orr	r3, r3, r1, lsl #24
 1232 0068 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1233 006a 43EA0123 		orr	r3, r3, r1, lsl #8
 1234 006e 1579     		ldrb	r5, [r2, #4]	@ zero_extendqisi2
 1235 0070 0168     		ldr	r1, [r0]
 1236 0072 2B43     		orrs	r3, r3, r5
 1237 0074 01EB0411 		add	r1, r1, r4, lsl #4
 1238 0078 C1F88C31 		str	r3, [r1, #396]
1317:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
1318:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
1319:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
1320:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
1321:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
 1239              		.loc 1 1321 7 view .LVU397
 1240 007c D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 1241 007e 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 1242 0080 1B04     		lsls	r3, r3, #16
 1243 0082 43EA0163 		orr	r3, r3, r1, lsl #24
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 50


 1244 0086 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1245 0088 43EA0123 		orr	r3, r3, r1, lsl #8
 1246 008c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1247 008e 0268     		ldr	r2, [r0]
 1248              	.LVL77:
 1249              		.loc 1 1321 7 is_stmt 0 view .LVU398
 1250 0090 0B43     		orrs	r3, r3, r1
 1251 0092 02EB0412 		add	r2, r2, r4, lsl #4
 1252 0096 C2F88831 		str	r3, [r2, #392]
1322:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
1323:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
1324:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
1325:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
1326:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1327:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Request transmission */
1328:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 1253              		.loc 1 1328 7 is_stmt 1 view .LVU399
 1254 009a 0268     		ldr	r2, [r0]
 1255 009c 1834     		adds	r4, r4, #24
 1256              	.LVL78:
 1257              		.loc 1 1328 7 is_stmt 0 view .LVU400
 1258 009e 2401     		lsls	r4, r4, #4
 1259 00a0 1359     		ldr	r3, [r2, r4]
 1260 00a2 43F00103 		orr	r3, r3, #1
 1261 00a6 1351     		str	r3, [r2, r4]
1329:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1330:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Return function status */
1331:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_OK;
 1262              		.loc 1 1331 7 is_stmt 1 view .LVU401
 1263              		.loc 1 1331 14 is_stmt 0 view .LVU402
 1264 00a8 0020     		movs	r0, #0
 1265              	.LVL79:
 1266              		.loc 1 1331 14 view .LVU403
 1267 00aa 1DE0     		b	.L100
 1268              	.LVL80:
 1269              	.L101:
1301:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1270              		.loc 1 1301 9 is_stmt 1 view .LVU404
1301:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1271              		.loc 1 1301 68 is_stmt 0 view .LVU405
 1272 00ac 4D68     		ldr	r5, [r1, #4]
1301:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1273              		.loc 1 1301 98 view .LVU406
 1274 00ae 43EAC503 		orr	r3, r3, r5, lsl #3
1303:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 1275              		.loc 1 1303 67 view .LVU407
 1276 00b2 CD68     		ldr	r5, [r1, #12]
1301:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1277              		.loc 1 1301 13 view .LVU408
 1278 00b4 0668     		ldr	r6, [r0]
1302:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1279              		.loc 1 1302 73 view .LVU409
 1280 00b6 2B43     		orrs	r3, r3, r5
1301:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1281              		.loc 1 1301 57 view .LVU410
 1282 00b8 04F11805 		add	r5, r4, #24
 1283 00bc 2D01     		lsls	r5, r5, #4
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 51


 1284 00be 7351     		str	r3, [r6, r5]
 1285 00c0 C3E7     		b	.L102
 1286              	.L105:
1312:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 1287              		.loc 1 1312 9 is_stmt 1 view .LVU411
 1288 00c2 0368     		ldr	r3, [r0]
 1289 00c4 03EB0613 		add	r3, r3, r6, lsl #4
 1290 00c8 5968     		ldr	r1, [r3, #4]
 1291              	.LVL81:
1312:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 1292              		.loc 1 1312 9 is_stmt 0 view .LVU412
 1293 00ca 41F48071 		orr	r1, r1, #256
 1294 00ce 5960     		str	r1, [r3, #4]
 1295 00d0 C5E7     		b	.L103
 1296              	.LVL82:
 1297              	.L98:
1332:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1333:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
1334:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1335:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
1336:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1298              		.loc 1 1336 7 is_stmt 1 view .LVU413
 1299              		.loc 1 1336 23 is_stmt 0 view .LVU414
 1300 00d2 436A     		ldr	r3, [r0, #36]
 1301              	.LVL83:
 1302              		.loc 1 1336 23 view .LVU415
 1303 00d4 43F40013 		orr	r3, r3, #2097152
 1304 00d8 4362     		str	r3, [r0, #36]
1337:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1338:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
 1305              		.loc 1 1338 7 is_stmt 1 view .LVU416
 1306              		.loc 1 1338 14 is_stmt 0 view .LVU417
 1307 00da 0120     		movs	r0, #1
 1308              	.LVL84:
 1309              		.loc 1 1338 14 view .LVU418
 1310 00dc 04E0     		b	.L100
 1311              	.LVL85:
 1312              	.L97:
1339:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1340:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1341:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1342:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1343:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1344:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1313              		.loc 1 1344 5 is_stmt 1 view .LVU419
 1314              		.loc 1 1344 21 is_stmt 0 view .LVU420
 1315 00de 436A     		ldr	r3, [r0, #36]
 1316              	.LVL86:
 1317              		.loc 1 1344 21 view .LVU421
 1318 00e0 43F48023 		orr	r3, r3, #262144
 1319 00e4 4362     		str	r3, [r0, #36]
1345:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1346:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1320              		.loc 1 1346 5 is_stmt 1 view .LVU422
 1321              		.loc 1 1346 12 is_stmt 0 view .LVU423
 1322 00e6 0120     		movs	r0, #1
 1323              	.LVL87:
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 52


 1324              	.L100:
1347:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1348:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1325              		.loc 1 1348 1 view .LVU424
 1326 00e8 70BC     		pop	{r4, r5, r6}
 1327              	.LCFI12:
 1328              		.cfi_restore 6
 1329              		.cfi_restore 5
 1330              		.cfi_restore 4
 1331              		.cfi_def_cfa_offset 0
 1332 00ea 7047     		bx	lr
 1333              		.cfi_endproc
 1334              	.LFE140:
 1336              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 1337              		.align	1
 1338              		.global	HAL_CAN_AbortTxRequest
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu softvfp
 1344              	HAL_CAN_AbortTxRequest:
 1345              	.LVL88:
 1346              	.LFB141:
1349:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1350:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1351:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Abort transmission requests
1352:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1353:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1354:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
1355:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1356:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1357:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1358:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1359:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1347              		.loc 1 1359 1 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351              		@ link register save eliminated.
1360:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1352              		.loc 1 1360 3 view .LVU426
 1353              		.loc 1 1360 24 is_stmt 0 view .LVU427
 1354 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1355              	.LVL89:
1361:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1362:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1363:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1356              		.loc 1 1363 3 is_stmt 1 view .LVU428
1364:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1365:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1357              		.loc 1 1365 3 view .LVU429
 1358              		.loc 1 1365 38 is_stmt 0 view .LVU430
 1359 0004 013B     		subs	r3, r3, #1
 1360              	.LVL90:
 1361              		.loc 1 1365 38 view .LVU431
 1362 0006 DBB2     		uxtb	r3, r3
 1363              		.loc 1 1365 6 view .LVU432
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 53


 1364 0008 012B     		cmp	r3, #1
 1365 000a 05D9     		bls	.L112
1366:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1367:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1368:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 0 */
1369:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
1370:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1371:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
1372:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
1373:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1374:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1375:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 1 */
1376:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
1377:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1378:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
1379:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
1380:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1381:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1382:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 2 */
1383:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
1384:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1385:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
1386:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
1387:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1388:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1389:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1390:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1391:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1392:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1393:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1394:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1395:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1366              		.loc 1 1395 5 is_stmt 1 view .LVU433
 1367              		.loc 1 1395 21 is_stmt 0 view .LVU434
 1368 000c 436A     		ldr	r3, [r0, #36]
 1369 000e 43F48023 		orr	r3, r3, #262144
 1370 0012 4362     		str	r3, [r0, #36]
1396:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1397:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1371              		.loc 1 1397 5 is_stmt 1 view .LVU435
 1372              		.loc 1 1397 12 is_stmt 0 view .LVU436
 1373 0014 0120     		movs	r0, #1
 1374              	.LVL91:
1398:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1399:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1375              		.loc 1 1399 1 view .LVU437
 1376 0016 7047     		bx	lr
 1377              	.LVL92:
 1378              	.L112:
1369:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1379              		.loc 1 1369 5 is_stmt 1 view .LVU438
1369:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1380              		.loc 1 1369 8 is_stmt 0 view .LVU439
 1381 0018 11F0010F 		tst	r1, #1
 1382 001c 04D0     		beq	.L108
1372:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1383              		.loc 1 1372 7 is_stmt 1 view .LVU440
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 54


 1384 001e 0268     		ldr	r2, [r0]
 1385 0020 9368     		ldr	r3, [r2, #8]
 1386 0022 43F08003 		orr	r3, r3, #128
 1387 0026 9360     		str	r3, [r2, #8]
 1388              	.L108:
1376:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1389              		.loc 1 1376 5 view .LVU441
1376:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1390              		.loc 1 1376 8 is_stmt 0 view .LVU442
 1391 0028 11F0020F 		tst	r1, #2
 1392 002c 04D0     		beq	.L109
1379:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1393              		.loc 1 1379 7 is_stmt 1 view .LVU443
 1394 002e 0268     		ldr	r2, [r0]
 1395 0030 9368     		ldr	r3, [r2, #8]
 1396 0032 43F40043 		orr	r3, r3, #32768
 1397 0036 9360     		str	r3, [r2, #8]
 1398              	.L109:
1383:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1399              		.loc 1 1383 5 view .LVU444
1383:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1400              		.loc 1 1383 8 is_stmt 0 view .LVU445
 1401 0038 11F0040F 		tst	r1, #4
 1402 003c 04D0     		beq	.L110
1386:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1403              		.loc 1 1386 7 is_stmt 1 view .LVU446
 1404 003e 0268     		ldr	r2, [r0]
 1405 0040 9368     		ldr	r3, [r2, #8]
 1406 0042 43F40003 		orr	r3, r3, #8388608
 1407 0046 9360     		str	r3, [r2, #8]
 1408              	.L110:
1390:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1409              		.loc 1 1390 5 view .LVU447
1390:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1410              		.loc 1 1390 12 is_stmt 0 view .LVU448
 1411 0048 0020     		movs	r0, #0
 1412              	.LVL93:
1390:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1413              		.loc 1 1390 12 view .LVU449
 1414 004a 7047     		bx	lr
 1415              		.cfi_endproc
 1416              	.LFE141:
 1418              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 1419              		.align	1
 1420              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 1421              		.syntax unified
 1422              		.thumb
 1423              		.thumb_func
 1424              		.fpu softvfp
 1426              	HAL_CAN_GetTxMailboxesFreeLevel:
 1427              	.LVL94:
 1428              	.LFB142:
1400:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1401:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1402:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
1403:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1404:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 55


1405:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
1406:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1407:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(CAN_HandleTypeDef *hcan)
1408:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1429              		.loc 1 1408 1 is_stmt 1 view -0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433              		@ link register save eliminated.
1409:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t freelevel = 0U;
 1434              		.loc 1 1409 3 view .LVU451
1410:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1435              		.loc 1 1410 3 view .LVU452
 1436              		.loc 1 1410 24 is_stmt 0 view .LVU453
 1437 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1438              	.LVL95:
1411:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1412:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1439              		.loc 1 1412 3 is_stmt 1 view .LVU454
 1440              		.loc 1 1412 38 is_stmt 0 view .LVU455
 1441 0004 013B     		subs	r3, r3, #1
 1442              	.LVL96:
 1443              		.loc 1 1412 38 view .LVU456
 1444 0006 DBB2     		uxtb	r3, r3
 1445              		.loc 1 1412 6 view .LVU457
 1446 0008 012B     		cmp	r3, #1
 1447 000a 01D9     		bls	.L119
1409:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1448              		.loc 1 1409 12 view .LVU458
 1449 000c 0020     		movs	r0, #0
 1450              	.LVL97:
1413:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1414:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1415:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1416:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
1417:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1418:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
1419:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1420:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1421:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1422:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
1423:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1424:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
1425:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1426:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1427:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
1428:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
1429:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1430:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
1431:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1432:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1433:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1434:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1435:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return freelevel;
 1451              		.loc 1 1435 3 is_stmt 1 view .LVU459
 1452              	.L113:
1436:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 56


 1453              		.loc 1 1436 1 is_stmt 0 view .LVU460
 1454 000e 7047     		bx	lr
 1455              	.LVL98:
 1456              	.L119:
1416:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1457              		.loc 1 1416 5 is_stmt 1 view .LVU461
1416:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1458              		.loc 1 1416 14 is_stmt 0 view .LVU462
 1459 0010 0368     		ldr	r3, [r0]
1416:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1460              		.loc 1 1416 24 view .LVU463
 1461 0012 9868     		ldr	r0, [r3, #8]
 1462              	.LVL99:
1416:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1463              		.loc 1 1416 8 view .LVU464
 1464 0014 10F08060 		ands	r0, r0, #67108864
 1465 0018 00D0     		beq	.L115
1418:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1466              		.loc 1 1418 16 view .LVU465
 1467 001a 0120     		movs	r0, #1
 1468              	.L115:
 1469              	.LVL100:
1422:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1470              		.loc 1 1422 5 is_stmt 1 view .LVU466
1422:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1471              		.loc 1 1422 24 is_stmt 0 view .LVU467
 1472 001c 9A68     		ldr	r2, [r3, #8]
1422:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1473              		.loc 1 1422 8 view .LVU468
 1474 001e 12F0006F 		tst	r2, #134217728
 1475 0022 00D0     		beq	.L116
1424:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1476              		.loc 1 1424 7 is_stmt 1 view .LVU469
1424:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1477              		.loc 1 1424 16 is_stmt 0 view .LVU470
 1478 0024 0130     		adds	r0, r0, #1
 1479              	.LVL101:
 1480              	.L116:
1428:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1481              		.loc 1 1428 5 is_stmt 1 view .LVU471
1428:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1482              		.loc 1 1428 24 is_stmt 0 view .LVU472
 1483 0026 9B68     		ldr	r3, [r3, #8]
1428:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1484              		.loc 1 1428 8 view .LVU473
 1485 0028 13F0805F 		tst	r3, #268435456
 1486 002c EFD0     		beq	.L113
1430:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1487              		.loc 1 1430 7 is_stmt 1 view .LVU474
1430:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1488              		.loc 1 1430 16 is_stmt 0 view .LVU475
 1489 002e 0130     		adds	r0, r0, #1
 1490              	.LVL102:
1430:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1491              		.loc 1 1430 16 view .LVU476
 1492 0030 7047     		bx	lr
 1493              		.cfi_endproc
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 57


 1494              	.LFE142:
 1496              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 1497              		.align	1
 1498              		.global	HAL_CAN_IsTxMessagePending
 1499              		.syntax unified
 1500              		.thumb
 1501              		.thumb_func
 1502              		.fpu softvfp
 1504              	HAL_CAN_IsTxMessagePending:
 1505              	.LVL103:
 1506              	.LFB143:
1437:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1438:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1439:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1440:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         Mailboxes.
1441:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1442:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1443:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1444:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1445:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Status
1446:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
1447:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
1448:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *                Tx Mailbox.
1449:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1450:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1451:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1507              		.loc 1 1451 1 is_stmt 1 view -0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
 1511              		@ link register save eliminated.
1452:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t status = 0U;
 1512              		.loc 1 1452 3 view .LVU478
1453:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1513              		.loc 1 1453 3 view .LVU479
 1514              		.loc 1 1453 24 is_stmt 0 view .LVU480
 1515 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1516              	.LVL104:
1454:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1455:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1456:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1517              		.loc 1 1456 3 is_stmt 1 view .LVU481
1457:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1458:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1518              		.loc 1 1458 3 view .LVU482
 1519              		.loc 1 1458 38 is_stmt 0 view .LVU483
 1520 0004 013B     		subs	r3, r3, #1
 1521              	.LVL105:
 1522              		.loc 1 1458 38 view .LVU484
 1523 0006 DBB2     		uxtb	r3, r3
 1524              		.loc 1 1458 6 view .LVU485
 1525 0008 012B     		cmp	r3, #1
 1526 000a 01D9     		bls	.L124
1452:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1527              		.loc 1 1452 12 view .LVU486
 1528 000c 0020     		movs	r0, #0
 1529              	.LVL106:
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 58


1452:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1530              		.loc 1 1452 12 view .LVU487
 1531 000e 7047     		bx	lr
 1532              	.LVL107:
 1533              	.L124:
1459:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1460:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1461:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1462:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
 1534              		.loc 1 1462 5 is_stmt 1 view .LVU488
 1535              		.loc 1 1462 14 is_stmt 0 view .LVU489
 1536 0010 0368     		ldr	r3, [r0]
 1537              		.loc 1 1462 24 view .LVU490
 1538 0012 9B68     		ldr	r3, [r3, #8]
 1539              		.loc 1 1462 30 view .LVU491
 1540 0014 03EA8163 		and	r3, r3, r1, lsl #26
 1541              		.loc 1 1462 8 view .LVU492
 1542 0018 B3EB816F 		cmp	r3, r1, lsl #26
 1543 001c 01D0     		beq	.L125
1463:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1464:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       status = 1U;
 1544              		.loc 1 1464 14 view .LVU493
 1545 001e 0120     		movs	r0, #1
 1546              	.LVL108:
1465:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1466:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1467:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1468:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return status */
1469:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 1547              		.loc 1 1469 3 is_stmt 1 view .LVU494
1470:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1548              		.loc 1 1470 1 is_stmt 0 view .LVU495
 1549 0020 7047     		bx	lr
 1550              	.LVL109:
 1551              	.L125:
1452:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1552              		.loc 1 1452 12 view .LVU496
 1553 0022 0020     		movs	r0, #0
 1554              	.LVL110:
1452:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1555              		.loc 1 1452 12 view .LVU497
 1556 0024 7047     		bx	lr
 1557              		.cfi_endproc
 1558              	.LFE143:
 1560              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 1561              		.align	1
 1562              		.global	HAL_CAN_GetTxTimestamp
 1563              		.syntax unified
 1564              		.thumb
 1565              		.thumb_func
 1566              		.fpu softvfp
 1568              	HAL_CAN_GetTxTimestamp:
 1569              	.LVL111:
 1570              	.LFB144:
1471:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1472:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1473:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 59


1474:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             mode is enabled.
1475:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1476:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1477:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1478:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         read.
1479:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1480:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1481:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1482:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
1483:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1571              		.loc 1 1483 1 is_stmt 1 view -0
 1572              		.cfi_startproc
 1573              		@ args = 0, pretend = 0, frame = 0
 1574              		@ frame_needed = 0, uses_anonymous_args = 0
 1575              		@ link register save eliminated.
1484:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t timestamp = 0U;
 1576              		.loc 1 1484 3 view .LVU499
1485:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
 1577              		.loc 1 1485 3 view .LVU500
1486:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1578              		.loc 1 1486 3 view .LVU501
 1579              		.loc 1 1486 24 is_stmt 0 view .LVU502
 1580 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1581              	.LVL112:
1487:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1488:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1489:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
 1582              		.loc 1 1489 3 is_stmt 1 view .LVU503
1490:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1491:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1583              		.loc 1 1491 3 view .LVU504
 1584              		.loc 1 1491 38 is_stmt 0 view .LVU505
 1585 0004 013B     		subs	r3, r3, #1
 1586              	.LVL113:
 1587              		.loc 1 1491 38 view .LVU506
 1588 0006 DBB2     		uxtb	r3, r3
 1589              		.loc 1 1491 6 view .LVU507
 1590 0008 012B     		cmp	r3, #1
 1591 000a 01D9     		bls	.L129
1484:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
 1592              		.loc 1 1484 12 view .LVU508
 1593 000c 0020     		movs	r0, #0
 1594              	.LVL114:
1492:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1493:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1494:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Select the Tx mailbox */
1495:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     transmitmailbox = POSITION_VAL(TxMailbox);
1496:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1497:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get timestamp */
1498:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
1499:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1500:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1501:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return the timestamp */
1502:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return timestamp;
 1595              		.loc 1 1502 3 is_stmt 1 view .LVU509
1503:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1596              		.loc 1 1503 1 is_stmt 0 view .LVU510
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 60


 1597 000e 7047     		bx	lr
 1598              	.LVL115:
 1599              	.L129:
1495:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 1600              		.loc 1 1495 5 is_stmt 1 view .LVU511
 1601              	.LBB4:
 1602              	.LBI4:
 1603              		.file 2 "Libraries/CMSIS/Include/cmsis_gcc.h"
   1:Libraries/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Libraries/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Libraries/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Libraries/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Libraries/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Libraries/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Libraries/CMSIS/Include/cmsis_gcc.h **** /*
   8:Libraries/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Libraries/CMSIS/Include/cmsis_gcc.h ****  *
  10:Libraries/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Libraries/CMSIS/Include/cmsis_gcc.h ****  *
  12:Libraries/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Libraries/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Libraries/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Libraries/CMSIS/Include/cmsis_gcc.h ****  *
  16:Libraries/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Libraries/CMSIS/Include/cmsis_gcc.h ****  *
  18:Libraries/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Libraries/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Libraries/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Libraries/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Libraries/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
  24:Libraries/CMSIS/Include/cmsis_gcc.h **** 
  25:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Libraries/CMSIS/Include/cmsis_gcc.h **** 
  28:Libraries/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Libraries/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Libraries/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Libraries/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Libraries/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Libraries/CMSIS/Include/cmsis_gcc.h **** 
  34:Libraries/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Libraries/CMSIS/Include/cmsis_gcc.h **** 
  39:Libraries/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 61


  50:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Libraries/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Libraries/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Libraries/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Libraries/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Libraries/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 62


 107:Libraries/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Libraries/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Libraries/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 117:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 118:Libraries/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Libraries/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Libraries/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Libraries/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 123:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 124:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 125:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Libraries/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 129:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 131:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 133:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 134:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 135:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 136:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Libraries/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 140:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 142:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 144:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 145:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 146:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 147:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 151:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 153:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 155:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 158:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 159:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 160:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 162:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 63


 164:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 166:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 168:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 170:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 173:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 175:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 176:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 177:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 181:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 183:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 185:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 186:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 187:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 189:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 193:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 195:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 197:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 199:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 200:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 201:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 205:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 207:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 209:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 212:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 213:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 214:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 215:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 219:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Libraries/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 64


 221:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 223:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 226:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 227:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 228:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 229:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 233:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 235:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 237:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 240:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 241:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 242:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 243:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 247:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 249:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 251:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 254:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 255:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 256:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 258:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 262:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 264:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 266:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 269:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 271:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 272:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 273:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 277:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 65


 278:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 279:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 281:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 282:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 283:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 285:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 289:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 291:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 293:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 295:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 296:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 297:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 301:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 303:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 305:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 308:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 309:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 310:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 312:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 316:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 318:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 320:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 323:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 325:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 326:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 327:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 331:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 333:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Libraries/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 66


 335:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 336:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 337:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 339:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 343:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 345:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 347:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 349:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 350:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 352:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 356:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 358:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 360:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 363:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 364:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 365:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 366:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 370:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 372:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 374:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 376:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 377:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 378:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 382:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 384:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 386:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 389:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 390:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 391:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 67


 392:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 393:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 397:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 399:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 401:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 404:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 406:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 407:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 408:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 412:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 414:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 416:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 417:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 418:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 420:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 424:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 426:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 428:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 430:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 431:Libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 435:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Libraries/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 439:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 441:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 443:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 444:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 445:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 446:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Libraries/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 68


 449:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 450:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 452:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 454:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 455:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 456:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 457:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 461:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 463:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 465:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 468:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 469:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 470:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 472:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 476:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 478:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 480:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 483:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 485:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 486:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 487:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 491:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 493:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 495:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 496:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 497:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 499:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 503:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 505:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 69


 506:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 507:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 509:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 510:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 511:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Libraries/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 516:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 518:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 520:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 521:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 522:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 523:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 527:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 529:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 531:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 534:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 535:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 536:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 538:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 542:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 544:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 546:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 549:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 551:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 552:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 553:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 557:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 559:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 561:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 562:Libraries/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 70


 563:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 565:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 569:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 571:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 573:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 575:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Libraries/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Libraries/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 579:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 580:Libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 583:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 584:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Libraries/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Libraries/CMSIS/Include/cmsis_gcc.h ****   
 589:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 592:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 594:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Libraries/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Libraries/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Libraries/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 599:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 604:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 605:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 607:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 611:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 614:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 616:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Libraries/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 71


 620:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 625:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 627:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 628:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 629:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Libraries/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Libraries/CMSIS/Include/cmsis_gcc.h ****   
 634:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 637:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 639:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Libraries/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Libraries/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 644:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 647:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 648:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 649:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 651:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 655:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 658:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 660:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Libraries/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 664:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 667:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 669:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 670:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 671:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Libraries/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 676:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 72


 677:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 679:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 681:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Libraries/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Libraries/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 686:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 691:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 692:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 693:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 695:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 699:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 702:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 704:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Libraries/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 708:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 713:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 715:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 716:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 717:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Libraries/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 722:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 725:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 727:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Libraries/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Libraries/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 732:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 73


 734:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 735:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 736:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 737:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 739:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Libraries/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Libraries/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 743:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 746:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 748:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Libraries/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Libraries/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 752:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 755:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 757:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Libraries/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 760:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 761:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 762:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 766:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 768:Libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Libraries/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Libraries/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Libraries/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Libraries/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Libraries/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 776:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 778:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 782:Libraries/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 785:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 786:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 787:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 788:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 74


 791:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 792:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 794:Libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Libraries/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Libraries/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Libraries/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Libraries/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Libraries/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 802:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 805:Libraries/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 808:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 809:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 810:Libraries/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 812:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 813:Libraries/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Libraries/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Libraries/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Libraries/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Libraries/CMSIS/Include/cmsis_gcc.h **** */
 818:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 819:Libraries/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Libraries/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Libraries/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Libraries/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 827:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 832:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 833:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 836:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 838:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 839:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 842:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 844:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 845:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 846:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 75


 848:Libraries/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 850:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 852:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 853:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 854:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 857:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 859:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 860:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 861:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Libraries/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Libraries/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 866:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 868:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 870:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 871:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 872:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 873:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Libraries/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 877:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 879:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 881:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 882:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 883:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 884:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Libraries/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 888:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 890:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 892:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 893:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 894:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 895:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 900:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 902:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Libraries/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 76


 905:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 907:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 911:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 912:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 913:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 914:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 919:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 921:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 923:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 926:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 927:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 928:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 929:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 934:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 936:Libraries/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Libraries/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 939:Libraries/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 941:Libraries/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 945:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 946:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 947:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 948:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 954:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 956:Libraries/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Libraries/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Libraries/CMSIS/Include/cmsis_gcc.h ****   {
 959:Libraries/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Libraries/CMSIS/Include/cmsis_gcc.h ****   }
 961:Libraries/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 77


 962:Libraries/CMSIS/Include/cmsis_gcc.h **** }
 963:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 964:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 965:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 966:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Libraries/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Libraries/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 972:Libraries/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 974:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 975:Libraries/CMSIS/Include/cmsis_gcc.h **** /**
 976:Libraries/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Libraries/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Libraries/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Libraries/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Libraries/CMSIS/Include/cmsis_gcc.h ****  */
 981:Libraries/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 1604              		.loc 2 981 31 view .LVU512
 1605              	.LBB5:
 982:Libraries/CMSIS/Include/cmsis_gcc.h **** {
 983:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 1606              		.loc 2 983 3 view .LVU513
 984:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 985:Libraries/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Libraries/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Libraries/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1607              		.loc 2 988 4 view .LVU514
 1608              		.syntax unified
 1609              	@ 988 "Libraries/CMSIS/Include/cmsis_gcc.h" 1
 1610 0010 91FAA1F1 		rbit r1, r1
 1611              	@ 0 "" 2
 1612              	.LVL116:
 989:Libraries/CMSIS/Include/cmsis_gcc.h **** #else
 990:Libraries/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Libraries/CMSIS/Include/cmsis_gcc.h **** 
 992:Libraries/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Libraries/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Libraries/CMSIS/Include/cmsis_gcc.h ****   {
 995:Libraries/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Libraries/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Libraries/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Libraries/CMSIS/Include/cmsis_gcc.h ****   }
 999:Libraries/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Libraries/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Libraries/CMSIS/Include/cmsis_gcc.h ****   return result;
 1613              		.loc 2 1001 3 view .LVU515
 1614              		.loc 2 1001 3 is_stmt 0 view .LVU516
 1615              		.thumb
 1616              		.syntax unified
 1617              	.LBE5:
 1618              	.LBE4:
1495:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 1619              		.loc 1 1495 21 view .LVU517
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 78


 1620 0014 B1FA81F1 		clz	r1, r1
 1621              	.LVL117:
1498:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1622              		.loc 1 1498 5 is_stmt 1 view .LVU518
1498:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1623              		.loc 1 1498 22 is_stmt 0 view .LVU519
 1624 0018 0368     		ldr	r3, [r0]
1498:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1625              		.loc 1 1498 61 view .LVU520
 1626 001a 1831     		adds	r1, r1, #24
 1627              	.LVL118:
1498:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1628              		.loc 1 1498 61 view .LVU521
 1629 001c 03EB0111 		add	r1, r3, r1, lsl #4
 1630              	.LVL119:
1498:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1631              		.loc 1 1498 61 view .LVU522
 1632 0020 4868     		ldr	r0, [r1, #4]
 1633              	.LVL120:
1498:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1634              		.loc 1 1498 85 view .LVU523
 1635 0022 000C     		lsrs	r0, r0, #16
 1636              	.LVL121:
1498:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1637              		.loc 1 1498 85 view .LVU524
 1638 0024 7047     		bx	lr
 1639              		.cfi_endproc
 1640              	.LFE144:
 1642              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
 1643              		.align	1
 1644              		.global	HAL_CAN_GetRxMessage
 1645              		.syntax unified
 1646              		.thumb
 1647              		.thumb_func
 1648              		.fpu softvfp
 1650              	HAL_CAN_GetRxMessage:
 1651              	.LVL122:
 1652              	.LFB145:
1504:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1505:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1506:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1507:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1508:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1509:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
1510:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1511:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1512:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         of the Rx frame will be stored.
1513:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
1514:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1515:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1516:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo, CAN_RxHeaderTypeDe
1517:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1653              		.loc 1 1517 1 is_stmt 1 view -0
 1654              		.cfi_startproc
 1655              		@ args = 0, pretend = 0, frame = 0
 1656              		@ frame_needed = 0, uses_anonymous_args = 0
 1657              		@ link register save eliminated.
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 79


 1658              		.loc 1 1517 1 is_stmt 0 view .LVU526
 1659 0000 30B4     		push	{r4, r5}
 1660              	.LCFI13:
 1661              		.cfi_def_cfa_offset 8
 1662              		.cfi_offset 4, -8
 1663              		.cfi_offset 5, -4
1518:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1664              		.loc 1 1518 3 is_stmt 1 view .LVU527
 1665              		.loc 1 1518 24 is_stmt 0 view .LVU528
 1666 0002 90F82040 		ldrb	r4, [r0, #32]	@ zero_extendqisi2
 1667              	.LVL123:
1519:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1520:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1668              		.loc 1 1520 3 is_stmt 1 view .LVU529
1521:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1522:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1669              		.loc 1 1522 3 view .LVU530
 1670              		.loc 1 1522 38 is_stmt 0 view .LVU531
 1671 0006 013C     		subs	r4, r4, #1
 1672              	.LVL124:
 1673              		.loc 1 1522 38 view .LVU532
 1674 0008 E4B2     		uxtb	r4, r4
 1675              		.loc 1 1522 6 view .LVU533
 1676 000a 012C     		cmp	r4, #1
 1677 000c 00F29180 		bhi	.L131
1523:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1524:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1525:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the Rx FIFO */
1526:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1678              		.loc 1 1526 5 is_stmt 1 view .LVU534
 1679              		.loc 1 1526 8 is_stmt 0 view .LVU535
 1680 0010 51B9     		cbnz	r1, .L132
1527:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1528:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1529:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
 1681              		.loc 1 1529 7 is_stmt 1 view .LVU536
 1682              		.loc 1 1529 16 is_stmt 0 view .LVU537
 1683 0012 0468     		ldr	r4, [r0]
 1684              		.loc 1 1529 26 view .LVU538
 1685 0014 E468     		ldr	r4, [r4, #12]
 1686              		.loc 1 1529 10 view .LVU539
 1687 0016 14F0030F 		tst	r4, #3
 1688 001a 10D1     		bne	.L133
1530:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1531:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1532:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1689              		.loc 1 1532 9 is_stmt 1 view .LVU540
 1690              		.loc 1 1532 25 is_stmt 0 view .LVU541
 1691 001c 436A     		ldr	r3, [r0, #36]
 1692              	.LVL125:
 1693              		.loc 1 1532 25 view .LVU542
 1694 001e 43F40013 		orr	r3, r3, #2097152
 1695 0022 4362     		str	r3, [r0, #36]
1533:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1534:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 1696              		.loc 1 1534 9 is_stmt 1 view .LVU543
 1697              		.loc 1 1534 16 is_stmt 0 view .LVU544
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 80


 1698 0024 0120     		movs	r0, #1
 1699              	.LVL126:
 1700              		.loc 1 1534 16 view .LVU545
 1701 0026 89E0     		b	.L134
 1702              	.LVL127:
 1703              	.L132:
1535:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1536:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1537:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1538:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1539:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1540:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
 1704              		.loc 1 1540 7 is_stmt 1 view .LVU546
 1705              		.loc 1 1540 16 is_stmt 0 view .LVU547
 1706 0028 0468     		ldr	r4, [r0]
 1707              		.loc 1 1540 26 view .LVU548
 1708 002a 2469     		ldr	r4, [r4, #16]
 1709              		.loc 1 1540 10 view .LVU549
 1710 002c 14F0030F 		tst	r4, #3
 1711 0030 05D1     		bne	.L133
1541:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1542:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1543:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1712              		.loc 1 1543 9 is_stmt 1 view .LVU550
 1713              		.loc 1 1543 25 is_stmt 0 view .LVU551
 1714 0032 436A     		ldr	r3, [r0, #36]
 1715              	.LVL128:
 1716              		.loc 1 1543 25 view .LVU552
 1717 0034 43F40013 		orr	r3, r3, #2097152
 1718 0038 4362     		str	r3, [r0, #36]
1544:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1545:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 1719              		.loc 1 1545 9 is_stmt 1 view .LVU553
 1720              		.loc 1 1545 16 is_stmt 0 view .LVU554
 1721 003a 0120     		movs	r0, #1
 1722              	.LVL129:
 1723              		.loc 1 1545 16 view .LVU555
 1724 003c 7EE0     		b	.L134
 1725              	.LVL130:
 1726              	.L133:
1546:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1547:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1548:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1549:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get the header */
1550:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
 1727              		.loc 1 1550 5 is_stmt 1 view .LVU556
 1728              		.loc 1 1550 39 is_stmt 0 view .LVU557
 1729 003e 0568     		ldr	r5, [r0]
 1730              		.loc 1 1550 71 view .LVU558
 1731 0040 01F11B04 		add	r4, r1, #27
 1732 0044 2401     		lsls	r4, r4, #4
 1733 0046 2C59     		ldr	r4, [r5, r4]
 1734              		.loc 1 1550 33 view .LVU559
 1735 0048 04F00404 		and	r4, r4, #4
 1736              		.loc 1 1550 18 view .LVU560
 1737 004c 9460     		str	r4, [r2, #8]
1551:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 81


 1738              		.loc 1 1551 5 is_stmt 1 view .LVU561
 1739              		.loc 1 1551 8 is_stmt 0 view .LVU562
 1740 004e 002C     		cmp	r4, #0
 1741 0050 61D1     		bne	.L135
1552:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1553:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
 1742              		.loc 1 1553 7 is_stmt 1 view .LVU563
 1743              		.loc 1 1553 45 is_stmt 0 view .LVU564
 1744 0052 0568     		ldr	r5, [r0]
 1745              		.loc 1 1553 77 view .LVU565
 1746 0054 01F11B04 		add	r4, r1, #27
 1747 0058 2401     		lsls	r4, r4, #4
 1748 005a 2C59     		ldr	r4, [r5, r4]
 1749              		.loc 1 1553 83 view .LVU566
 1750 005c 640D     		lsrs	r4, r4, #21
 1751              		.loc 1 1553 22 view .LVU567
 1752 005e 1460     		str	r4, [r2]
 1753              	.L136:
1554:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1555:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
1556:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1557:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) & hcan->Instance->sFIFOMailBox[RxFifo].RIR)
1558:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1559:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
 1754              		.loc 1 1559 5 is_stmt 1 view .LVU568
 1755              		.loc 1 1559 40 is_stmt 0 view .LVU569
 1756 0060 0568     		ldr	r5, [r0]
 1757              		.loc 1 1559 72 view .LVU570
 1758 0062 01F11B04 		add	r4, r1, #27
 1759 0066 2401     		lsls	r4, r4, #4
 1760 0068 2D59     		ldr	r5, [r5, r4]
 1761              		.loc 1 1559 34 view .LVU571
 1762 006a 05F00205 		and	r5, r5, #2
 1763              		.loc 1 1559 18 view .LVU572
 1764 006e D560     		str	r5, [r2, #12]
1560:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos
 1765              		.loc 1 1560 5 is_stmt 1 view .LVU573
 1766              		.loc 1 1560 41 is_stmt 0 view .LVU574
 1767 0070 0568     		ldr	r5, [r0]
 1768              		.loc 1 1560 73 view .LVU575
 1769 0072 2544     		add	r5, r5, r4
 1770 0074 6D68     		ldr	r5, [r5, #4]
 1771              		.loc 1 1560 80 view .LVU576
 1772 0076 05F00F05 		and	r5, r5, #15
 1773              		.loc 1 1560 18 view .LVU577
 1774 007a 1561     		str	r5, [r2, #16]
1561:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 1775              		.loc 1 1561 5 is_stmt 1 view .LVU578
 1776              		.loc 1 1561 54 is_stmt 0 view .LVU579
 1777 007c 0568     		ldr	r5, [r0]
 1778              		.loc 1 1561 86 view .LVU580
 1779 007e 2544     		add	r5, r5, r4
 1780 0080 6D68     		ldr	r5, [r5, #4]
 1781              		.loc 1 1561 93 view .LVU581
 1782 0082 C5F30725 		ubfx	r5, r5, #8, #8
 1783              		.loc 1 1561 31 view .LVU582
 1784 0086 9561     		str	r5, [r2, #24]
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 82


1562:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 1785              		.loc 1 1562 5 is_stmt 1 view .LVU583
 1786              		.loc 1 1562 48 is_stmt 0 view .LVU584
 1787 0088 0568     		ldr	r5, [r0]
 1788              		.loc 1 1562 80 view .LVU585
 1789 008a 2C44     		add	r4, r4, r5
 1790 008c 6468     		ldr	r4, [r4, #4]
 1791              		.loc 1 1562 87 view .LVU586
 1792 008e 240C     		lsrs	r4, r4, #16
 1793              		.loc 1 1562 24 view .LVU587
 1794 0090 5461     		str	r4, [r2, #20]
1563:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1564:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get the data */
1565:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1795              		.loc 1 1565 5 is_stmt 1 view .LVU588
 1796              		.loc 1 1565 49 is_stmt 0 view .LVU589
 1797 0092 0268     		ldr	r2, [r0]
 1798              	.LVL131:
 1799              		.loc 1 1565 81 view .LVU590
 1800 0094 02EB0112 		add	r2, r2, r1, lsl #4
 1801 0098 D2F8B821 		ldr	r2, [r2, #440]
 1802              		.loc 1 1565 14 view .LVU591
 1803 009c 1A70     		strb	r2, [r3]
1566:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1804              		.loc 1 1566 5 is_stmt 1 view .LVU592
 1805              		.loc 1 1566 49 is_stmt 0 view .LVU593
 1806 009e 0268     		ldr	r2, [r0]
 1807              		.loc 1 1566 81 view .LVU594
 1808 00a0 02EB0112 		add	r2, r2, r1, lsl #4
 1809 00a4 D2F8B821 		ldr	r2, [r2, #440]
 1810              		.loc 1 1566 16 view .LVU595
 1811 00a8 C2F30722 		ubfx	r2, r2, #8, #8
 1812              		.loc 1 1566 14 view .LVU596
 1813 00ac 5A70     		strb	r2, [r3, #1]
1567:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1814              		.loc 1 1567 5 is_stmt 1 view .LVU597
 1815              		.loc 1 1567 49 is_stmt 0 view .LVU598
 1816 00ae 0268     		ldr	r2, [r0]
 1817              		.loc 1 1567 81 view .LVU599
 1818 00b0 02EB0112 		add	r2, r2, r1, lsl #4
 1819 00b4 D2F8B821 		ldr	r2, [r2, #440]
 1820              		.loc 1 1567 16 view .LVU600
 1821 00b8 C2F30742 		ubfx	r2, r2, #16, #8
 1822              		.loc 1 1567 14 view .LVU601
 1823 00bc 9A70     		strb	r2, [r3, #2]
1568:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1824              		.loc 1 1568 5 is_stmt 1 view .LVU602
 1825              		.loc 1 1568 49 is_stmt 0 view .LVU603
 1826 00be 0268     		ldr	r2, [r0]
 1827              		.loc 1 1568 81 view .LVU604
 1828 00c0 02EB0112 		add	r2, r2, r1, lsl #4
 1829 00c4 D2F8B821 		ldr	r2, [r2, #440]
 1830              		.loc 1 1568 16 view .LVU605
 1831 00c8 120E     		lsrs	r2, r2, #24
 1832              		.loc 1 1568 14 view .LVU606
 1833 00ca DA70     		strb	r2, [r3, #3]
1569:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 83


 1834              		.loc 1 1569 5 is_stmt 1 view .LVU607
 1835              		.loc 1 1569 49 is_stmt 0 view .LVU608
 1836 00cc 0268     		ldr	r2, [r0]
 1837              		.loc 1 1569 81 view .LVU609
 1838 00ce 02EB0112 		add	r2, r2, r1, lsl #4
 1839 00d2 D2F8BC21 		ldr	r2, [r2, #444]
 1840              		.loc 1 1569 14 view .LVU610
 1841 00d6 1A71     		strb	r2, [r3, #4]
1570:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1842              		.loc 1 1570 5 is_stmt 1 view .LVU611
 1843              		.loc 1 1570 49 is_stmt 0 view .LVU612
 1844 00d8 0268     		ldr	r2, [r0]
 1845              		.loc 1 1570 81 view .LVU613
 1846 00da 02EB0112 		add	r2, r2, r1, lsl #4
 1847 00de D2F8BC21 		ldr	r2, [r2, #444]
 1848              		.loc 1 1570 16 view .LVU614
 1849 00e2 C2F30722 		ubfx	r2, r2, #8, #8
 1850              		.loc 1 1570 14 view .LVU615
 1851 00e6 5A71     		strb	r2, [r3, #5]
1571:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1852              		.loc 1 1571 5 is_stmt 1 view .LVU616
 1853              		.loc 1 1571 49 is_stmt 0 view .LVU617
 1854 00e8 0268     		ldr	r2, [r0]
 1855              		.loc 1 1571 81 view .LVU618
 1856 00ea 02EB0112 		add	r2, r2, r1, lsl #4
 1857 00ee D2F8BC21 		ldr	r2, [r2, #444]
 1858              		.loc 1 1571 16 view .LVU619
 1859 00f2 C2F30742 		ubfx	r2, r2, #16, #8
 1860              		.loc 1 1571 14 view .LVU620
 1861 00f6 9A71     		strb	r2, [r3, #6]
1572:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1862              		.loc 1 1572 5 is_stmt 1 view .LVU621
 1863              		.loc 1 1572 49 is_stmt 0 view .LVU622
 1864 00f8 0268     		ldr	r2, [r0]
 1865              		.loc 1 1572 81 view .LVU623
 1866 00fa 02EB0112 		add	r2, r2, r1, lsl #4
 1867 00fe D2F8BC21 		ldr	r2, [r2, #444]
 1868              		.loc 1 1572 16 view .LVU624
 1869 0102 120E     		lsrs	r2, r2, #24
 1870              		.loc 1 1572 14 view .LVU625
 1871 0104 DA71     		strb	r2, [r3, #7]
1573:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1574:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Release the FIFO */
1575:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1872              		.loc 1 1575 5 is_stmt 1 view .LVU626
 1873              		.loc 1 1575 8 is_stmt 0 view .LVU627
 1874 0106 71B9     		cbnz	r1, .L137
1576:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1577:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Release RX FIFO 0 */
1578:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
 1875              		.loc 1 1578 7 is_stmt 1 view .LVU628
 1876 0108 0268     		ldr	r2, [r0]
 1877 010a D368     		ldr	r3, [r2, #12]
 1878              	.LVL132:
 1879              		.loc 1 1578 7 is_stmt 0 view .LVU629
 1880 010c 43F02003 		orr	r3, r3, #32
 1881 0110 D360     		str	r3, [r2, #12]
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 84


 1882              	.L138:
1579:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1580:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1581:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1582:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Release RX FIFO 1 */
1583:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
1584:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1585:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1586:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1587:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1883              		.loc 1 1587 5 is_stmt 1 view .LVU630
 1884              		.loc 1 1587 12 is_stmt 0 view .LVU631
 1885 0112 0020     		movs	r0, #0
 1886              	.LVL133:
 1887              		.loc 1 1587 12 view .LVU632
 1888 0114 12E0     		b	.L134
 1889              	.LVL134:
 1890              	.L135:
1557:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1891              		.loc 1 1557 7 is_stmt 1 view .LVU633
1557:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1892              		.loc 1 1557 63 is_stmt 0 view .LVU634
 1893 0116 0568     		ldr	r5, [r0]
1557:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1894              		.loc 1 1557 95 view .LVU635
 1895 0118 01F11B04 		add	r4, r1, #27
 1896 011c 2401     		lsls	r4, r4, #4
 1897 011e 2C59     		ldr	r4, [r5, r4]
1557:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1898              		.loc 1 1557 101 view .LVU636
 1899 0120 E408     		lsrs	r4, r4, #3
1557:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1900              		.loc 1 1557 22 view .LVU637
 1901 0122 5460     		str	r4, [r2, #4]
 1902 0124 9CE7     		b	.L136
 1903              	.LVL135:
 1904              	.L137:
1583:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1905              		.loc 1 1583 7 is_stmt 1 view .LVU638
 1906 0126 0268     		ldr	r2, [r0]
 1907 0128 1369     		ldr	r3, [r2, #16]
 1908              	.LVL136:
1583:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1909              		.loc 1 1583 7 is_stmt 0 view .LVU639
 1910 012a 43F02003 		orr	r3, r3, #32
 1911 012e 1361     		str	r3, [r2, #16]
 1912 0130 EFE7     		b	.L138
 1913              	.LVL137:
 1914              	.L131:
1588:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1589:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1590:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1591:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1592:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1915              		.loc 1 1592 5 is_stmt 1 view .LVU640
 1916              		.loc 1 1592 21 is_stmt 0 view .LVU641
 1917 0132 436A     		ldr	r3, [r0, #36]
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 85


 1918              	.LVL138:
 1919              		.loc 1 1592 21 view .LVU642
 1920 0134 43F48023 		orr	r3, r3, #262144
 1921 0138 4362     		str	r3, [r0, #36]
1593:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1594:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1922              		.loc 1 1594 5 is_stmt 1 view .LVU643
 1923              		.loc 1 1594 12 is_stmt 0 view .LVU644
 1924 013a 0120     		movs	r0, #1
 1925              	.LVL139:
 1926              	.L134:
1595:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1596:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1927              		.loc 1 1596 1 view .LVU645
 1928 013c 30BC     		pop	{r4, r5}
 1929              	.LCFI14:
 1930              		.cfi_restore 5
 1931              		.cfi_restore 4
 1932              		.cfi_def_cfa_offset 0
 1933 013e 7047     		bx	lr
 1934              		.cfi_endproc
 1935              	.LFE145:
 1937              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 1938              		.align	1
 1939              		.global	HAL_CAN_GetRxFifoFillLevel
 1940              		.syntax unified
 1941              		.thumb
 1942              		.thumb_func
 1943              		.fpu softvfp
 1945              	HAL_CAN_GetRxFifoFillLevel:
 1946              	.LVL140:
 1947              	.LFB146:
1597:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1598:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1599:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1600:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1601:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1602:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1603:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1604:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1605:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1606:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1607:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1948              		.loc 1 1607 1 is_stmt 1 view -0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 0, uses_anonymous_args = 0
 1952              		@ link register save eliminated.
1608:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t filllevel = 0U;
 1953              		.loc 1 1608 3 view .LVU647
1609:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1954              		.loc 1 1609 3 view .LVU648
 1955              		.loc 1 1609 24 is_stmt 0 view .LVU649
 1956 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1957              	.LVL141:
1610:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1611:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 86


1612:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1958              		.loc 1 1612 3 is_stmt 1 view .LVU650
1613:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1614:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1959              		.loc 1 1614 3 view .LVU651
 1960              		.loc 1 1614 38 is_stmt 0 view .LVU652
 1961 0004 013B     		subs	r3, r3, #1
 1962              	.LVL142:
 1963              		.loc 1 1614 38 view .LVU653
 1964 0006 DBB2     		uxtb	r3, r3
 1965              		.loc 1 1614 6 view .LVU654
 1966 0008 012B     		cmp	r3, #1
 1967 000a 01D9     		bls	.L144
1608:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1968              		.loc 1 1608 12 view .LVU655
 1969 000c 0020     		movs	r0, #0
 1970              	.LVL143:
1615:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1616:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1617:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
1618:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1619:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
1620:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1621:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1622:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1623:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
1624:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1625:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1626:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1627:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return Rx FIFO fill level */
1628:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return filllevel;
 1971              		.loc 1 1628 3 is_stmt 1 view .LVU656
1629:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1972              		.loc 1 1629 1 is_stmt 0 view .LVU657
 1973 000e 7047     		bx	lr
 1974              	.LVL144:
 1975              	.L144:
1617:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1976              		.loc 1 1617 5 is_stmt 1 view .LVU658
1617:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1977              		.loc 1 1617 8 is_stmt 0 view .LVU659
 1978 0010 21B9     		cbnz	r1, .L142
1619:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1979              		.loc 1 1619 7 is_stmt 1 view .LVU660
1619:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1980              		.loc 1 1619 23 is_stmt 0 view .LVU661
 1981 0012 0368     		ldr	r3, [r0]
1619:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1982              		.loc 1 1619 33 view .LVU662
 1983 0014 D868     		ldr	r0, [r3, #12]
 1984              	.LVL145:
1619:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1985              		.loc 1 1619 17 view .LVU663
 1986 0016 00F00300 		and	r0, r0, #3
 1987              	.LVL146:
1619:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1988              		.loc 1 1619 17 view .LVU664
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 87


 1989 001a 7047     		bx	lr
 1990              	.LVL147:
 1991              	.L142:
1623:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1992              		.loc 1 1623 7 is_stmt 1 view .LVU665
1623:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1993              		.loc 1 1623 23 is_stmt 0 view .LVU666
 1994 001c 0368     		ldr	r3, [r0]
1623:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1995              		.loc 1 1623 33 view .LVU667
 1996 001e 1869     		ldr	r0, [r3, #16]
 1997              	.LVL148:
1623:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1998              		.loc 1 1623 17 view .LVU668
 1999 0020 00F00300 		and	r0, r0, #3
 2000              	.LVL149:
1623:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2001              		.loc 1 1623 17 view .LVU669
 2002 0024 7047     		bx	lr
 2003              		.cfi_endproc
 2004              	.LFE146:
 2006              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 2007              		.align	1
 2008              		.global	HAL_CAN_ActivateNotification
 2009              		.syntax unified
 2010              		.thumb
 2011              		.thumb_func
 2012              		.fpu softvfp
 2014              	HAL_CAN_ActivateNotification:
 2015              	.LVL150:
 2016              	.LFB147:
1630:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1631:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1632:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
1633:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1634:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1635:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1636:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *  @brief    Interrupts management
1637:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *
1638:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
1639:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1640:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                        ##### Interrupts management #####
1641:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1642:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
1643:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1644:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1645:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
1646:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1647:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
1648:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
1649:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1650:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1651:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1652:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Enable interrupts.
1653:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1654:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1655:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 88


1656:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1657:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1658:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1659:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1660:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2017              		.loc 1 1660 1 is_stmt 1 view -0
 2018              		.cfi_startproc
 2019              		@ args = 0, pretend = 0, frame = 0
 2020              		@ frame_needed = 0, uses_anonymous_args = 0
 2021              		@ link register save eliminated.
1661:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2022              		.loc 1 1661 3 view .LVU671
 2023              		.loc 1 1661 24 is_stmt 0 view .LVU672
 2024 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2025              	.LVL151:
1662:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1663:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1664:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
 2026              		.loc 1 1664 3 is_stmt 1 view .LVU673
1665:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1666:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2027              		.loc 1 1666 3 view .LVU674
 2028              		.loc 1 1666 38 is_stmt 0 view .LVU675
 2029 0004 013B     		subs	r3, r3, #1
 2030              	.LVL152:
 2031              		.loc 1 1666 38 view .LVU676
 2032 0006 DBB2     		uxtb	r3, r3
 2033              		.loc 1 1666 6 view .LVU677
 2034 0008 012B     		cmp	r3, #1
 2035 000a 05D9     		bls	.L148
1667:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1668:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1669:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Enable the selected interrupts */
1670:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
1671:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1672:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1673:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1674:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1675:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1676:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1677:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1678:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2036              		.loc 1 1678 5 is_stmt 1 view .LVU678
 2037              		.loc 1 1678 21 is_stmt 0 view .LVU679
 2038 000c 436A     		ldr	r3, [r0, #36]
 2039 000e 43F48023 		orr	r3, r3, #262144
 2040 0012 4362     		str	r3, [r0, #36]
1679:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1680:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 2041              		.loc 1 1680 5 is_stmt 1 view .LVU680
 2042              		.loc 1 1680 12 is_stmt 0 view .LVU681
 2043 0014 0120     		movs	r0, #1
 2044              	.LVL153:
1681:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1682:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2045              		.loc 1 1682 1 view .LVU682
 2046 0016 7047     		bx	lr
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 89


 2047              	.LVL154:
 2048              	.L148:
1670:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2049              		.loc 1 1670 5 is_stmt 1 view .LVU683
 2050 0018 0268     		ldr	r2, [r0]
 2051 001a 5369     		ldr	r3, [r2, #20]
 2052 001c 1943     		orrs	r1, r1, r3
 2053              	.LVL155:
1670:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2054              		.loc 1 1670 5 is_stmt 0 view .LVU684
 2055 001e 5161     		str	r1, [r2, #20]
1673:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2056              		.loc 1 1673 5 is_stmt 1 view .LVU685
1673:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2057              		.loc 1 1673 12 is_stmt 0 view .LVU686
 2058 0020 0020     		movs	r0, #0
 2059              	.LVL156:
1673:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2060              		.loc 1 1673 12 view .LVU687
 2061 0022 7047     		bx	lr
 2062              		.cfi_endproc
 2063              	.LFE147:
 2065              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 2066              		.align	1
 2067              		.global	HAL_CAN_DeactivateNotification
 2068              		.syntax unified
 2069              		.thumb
 2070              		.thumb_func
 2071              		.fpu softvfp
 2073              	HAL_CAN_DeactivateNotification:
 2074              	.LVL157:
 2075              	.LFB148:
1683:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1684:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1685:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Disable interrupts.
1686:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1687:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1688:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1689:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1690:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1691:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1692:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1693:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2076              		.loc 1 1693 1 is_stmt 1 view -0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 0
 2079              		@ frame_needed = 0, uses_anonymous_args = 0
 2080              		@ link register save eliminated.
1694:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2081              		.loc 1 1694 3 view .LVU689
 2082              		.loc 1 1694 24 is_stmt 0 view .LVU690
 2083 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2084              	.LVL158:
1695:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1696:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1697:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
 2085              		.loc 1 1697 3 is_stmt 1 view .LVU691
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 90


1698:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1699:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2086              		.loc 1 1699 3 view .LVU692
 2087              		.loc 1 1699 38 is_stmt 0 view .LVU693
 2088 0004 013B     		subs	r3, r3, #1
 2089              	.LVL159:
 2090              		.loc 1 1699 38 view .LVU694
 2091 0006 DBB2     		uxtb	r3, r3
 2092              		.loc 1 1699 6 view .LVU695
 2093 0008 012B     		cmp	r3, #1
 2094 000a 05D9     		bls	.L152
1700:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1701:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1702:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Disable the selected interrupts */
1703:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
1704:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1705:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1706:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1707:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1708:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1709:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1710:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1711:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2095              		.loc 1 1711 5 is_stmt 1 view .LVU696
 2096              		.loc 1 1711 21 is_stmt 0 view .LVU697
 2097 000c 436A     		ldr	r3, [r0, #36]
 2098 000e 43F48023 		orr	r3, r3, #262144
 2099 0012 4362     		str	r3, [r0, #36]
1712:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1713:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 2100              		.loc 1 1713 5 is_stmt 1 view .LVU698
 2101              		.loc 1 1713 12 is_stmt 0 view .LVU699
 2102 0014 0120     		movs	r0, #1
 2103              	.LVL160:
1714:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1715:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2104              		.loc 1 1715 1 view .LVU700
 2105 0016 7047     		bx	lr
 2106              	.LVL161:
 2107              	.L152:
1703:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2108              		.loc 1 1703 5 is_stmt 1 view .LVU701
 2109 0018 0268     		ldr	r2, [r0]
 2110 001a 5369     		ldr	r3, [r2, #20]
 2111 001c 23EA0101 		bic	r1, r3, r1
 2112              	.LVL162:
1703:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2113              		.loc 1 1703 5 is_stmt 0 view .LVU702
 2114 0020 5161     		str	r1, [r2, #20]
1706:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2115              		.loc 1 1706 5 is_stmt 1 view .LVU703
1706:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2116              		.loc 1 1706 12 is_stmt 0 view .LVU704
 2117 0022 0020     		movs	r0, #0
 2118              	.LVL163:
1706:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2119              		.loc 1 1706 12 view .LVU705
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 91


 2120 0024 7047     		bx	lr
 2121              		.cfi_endproc
 2122              	.LFE148:
 2124              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 2125              		.align	1
 2126              		.weak	HAL_CAN_TxMailbox0CompleteCallback
 2127              		.syntax unified
 2128              		.thumb
 2129              		.thumb_func
 2130              		.fpu softvfp
 2132              	HAL_CAN_TxMailbox0CompleteCallback:
 2133              	.LVL164:
 2134              	.LFB150:
1716:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1717:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1718:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1719:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1720:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1721:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
1722:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1723:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1724:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
1725:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1726:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
1727:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
1728:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
1729:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
1730:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
1731:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
1732:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1733:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1734:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
1735:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1736:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
1737:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
1738:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1739:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1740:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
1741:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1742:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
1743:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1744:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1745:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1746:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1747:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback(hcan);
1748:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1749:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1750:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
1751:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1752:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1753:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1754:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1755:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
1756:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1757:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1758:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
1759:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 92


1760:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
1761:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1762:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1763:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
1764:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1765:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else
1766:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1767:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
1768:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1769:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1770:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox0AbortCallback(hcan);
1771:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1772:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1773:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
1774:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1775:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1776:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1777:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1778:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1779:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1780:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
1781:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1782:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1783:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
1784:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1785:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
1786:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1787:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1788:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1789:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1790:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback(hcan);
1791:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1792:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1793:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
1794:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1795:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1796:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1797:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1798:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
1799:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1800:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1801:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
1802:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1803:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
1804:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1805:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1806:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
1807:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1808:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else
1809:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1810:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
1811:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1812:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1813:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox1AbortCallback(hcan);
1814:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1815:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1816:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 93


1817:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1818:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1819:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1820:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1821:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1822:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1823:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
1824:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1825:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1826:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
1827:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1828:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
1829:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1830:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1831:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1832:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1833:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback(hcan);
1834:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1835:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1836:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
1837:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1838:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1839:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1840:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1841:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
1842:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1843:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1844:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
1845:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1846:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
1847:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1848:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1849:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
1850:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1851:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else
1852:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1853:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1854:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1855:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1856:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox2AbortCallback(hcan);
1857:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1858:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1859:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
1860:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1861:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1862:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1863:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1864:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1865:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1866:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
1867:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
1868:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1869:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
1870:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1871:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1872:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
1873:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 94


1874:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1875:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1876:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1877:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1878:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1879:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1880:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
1881:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1882:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
1883:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1884:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1885:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
1886:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1887:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1888:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1889:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1890:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo0FullCallback(hcan);
1891:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1892:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1893:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
1894:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1895:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1896:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1897:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1898:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1899:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
1900:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1901:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check if message is still pending */
1902:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
1903:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1904:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 0 mesage pending Callback */
1905:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1906:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1907:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo0MsgPendingCallback(hcan);
1908:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1909:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1910:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
1911:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1912:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1913:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1914:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1915:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1916:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
1917:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1918:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
1919:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1920:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1921:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
1922:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1923:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
1924:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1925:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1926:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1927:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1928:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1929:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
1930:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 95


1931:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
1932:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1933:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1934:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
1935:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1936:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1937:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1938:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1939:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo1FullCallback(hcan);
1940:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1941:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1942:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
1943:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1944:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1945:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1946:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1947:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1948:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
1949:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1950:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check if message is still pending */
1951:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
1952:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1953:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 1 mesage pending Callback */
1954:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1955:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1956:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo1MsgPendingCallback(hcan);
1957:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1958:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1959:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
1960:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1961:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1962:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1963:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1964:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
1965:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
1966:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1967:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
1968:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1969:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1970:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
1971:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1972:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Sleep Callback */
1973:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1974:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1975:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->SleepCallback(hcan);
1976:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1977:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1978:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
1979:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1980:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1981:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1982:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1983:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1984:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
1985:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1986:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
1987:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 96


1988:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear WakeUp Flag */
1989:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
1990:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1991:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* WakeUp Callback */
1992:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1993:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1994:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->WakeUpFromRxMsgCallback(hcan);
1995:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1996:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1997:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
1998:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1999:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2000:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2001:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2002:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Error interrupts management *********************************************/
2003:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
2004:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2005:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
2006:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2007:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Error Warning Flag */
2008:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
2009:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
2010:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2011:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Error Warning */
2012:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
2013:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2014:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
2015:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2016:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2017:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Error Passive Flag */
2018:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
2019:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
2020:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2021:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Error Passive */
2022:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
2023:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2024:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
2025:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2026:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2027:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Bus-off Flag */
2028:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
2029:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
2030:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2031:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
2032:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
2033:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2034:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
2035:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2036:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2037:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Last Error Code Flag */
2038:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
2039:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
2040:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2041:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
2042:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
2043:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_0):
2044:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Stuff error */
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 97


2045:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
2046:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2047:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
2048:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Form error */
2049:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
2050:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2051:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
2052:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
2053:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
2054:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2055:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
2056:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
2057:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
2058:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2059:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
2060:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
2061:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
2062:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2063:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
2064:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to CRC error */
2065:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
2066:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2067:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           default:
2068:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2069:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
2070:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2071:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Clear Last error code Flag */
2072:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
2073:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2074:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2075:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2076:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Clear ERRI Flag */
2077:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
2078:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2079:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2080:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
2081:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
2082:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2083:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code in handle */
2084:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
2085:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2086:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Call Error callback function */
2087:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
2088:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Call registered callback*/
2089:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCallback(hcan);
2090:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
2091:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Call weak (surcharged) callback */
2092:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
2093:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2094:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2095:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
2096:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2097:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2098:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
2099:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2100:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2101:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 98


2102:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *  @brief   CAN Callback functions
2103:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *
2104:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
2105:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2106:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                           ##### Callback functions #####
2107:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2108:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
2109:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     This subsection provides the following callback functions:
2110:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
2111:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
2112:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
2113:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
2114:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
2115:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
2116:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
2117:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
2118:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
2119:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
2120:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
2121:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
2122:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
2123:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2124:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
2125:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
2126:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2127:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2128:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2129:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
2130:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2131:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2132:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2133:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2134:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
2135:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2135              		.loc 1 2135 1 is_stmt 1 view -0
 2136              		.cfi_startproc
 2137              		@ args = 0, pretend = 0, frame = 0
 2138              		@ frame_needed = 0, uses_anonymous_args = 0
 2139              		@ link register save eliminated.
2136:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2137:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2140              		.loc 1 2137 3 view .LVU707
2138:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2139:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2140:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
2141:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2142:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2143:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2141              		.loc 1 2143 1 is_stmt 0 view .LVU708
 2142 0000 7047     		bx	lr
 2143              		.cfi_endproc
 2144              	.LFE150:
 2146              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 2147              		.align	1
 2148              		.weak	HAL_CAN_TxMailbox1CompleteCallback
 2149              		.syntax unified
 2150              		.thumb
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 99


 2151              		.thumb_func
 2152              		.fpu softvfp
 2154              	HAL_CAN_TxMailbox1CompleteCallback:
 2155              	.LVL165:
 2156              	.LFB151:
2144:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2145:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2146:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
2147:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2148:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2149:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2150:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2151:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
2152:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2157              		.loc 1 2152 1 is_stmt 1 view -0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 0, uses_anonymous_args = 0
 2161              		@ link register save eliminated.
2153:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2154:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2162              		.loc 1 2154 3 view .LVU710
2155:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2156:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2157:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
2158:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2159:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2160:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2163              		.loc 1 2160 1 is_stmt 0 view .LVU711
 2164 0000 7047     		bx	lr
 2165              		.cfi_endproc
 2166              	.LFE151:
 2168              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 2169              		.align	1
 2170              		.weak	HAL_CAN_TxMailbox2CompleteCallback
 2171              		.syntax unified
 2172              		.thumb
 2173              		.thumb_func
 2174              		.fpu softvfp
 2176              	HAL_CAN_TxMailbox2CompleteCallback:
 2177              	.LVL166:
 2178              	.LFB152:
2161:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2162:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2163:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
2164:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2165:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2166:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2167:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2168:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
2169:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2179              		.loc 1 2169 1 is_stmt 1 view -0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 0
 2182              		@ frame_needed = 0, uses_anonymous_args = 0
 2183              		@ link register save eliminated.
2170:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 100


2171:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2184              		.loc 1 2171 3 view .LVU713
2172:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2173:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2174:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
2175:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2176:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2177:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2185              		.loc 1 2177 1 is_stmt 0 view .LVU714
 2186 0000 7047     		bx	lr
 2187              		.cfi_endproc
 2188              	.LFE152:
 2190              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 2191              		.align	1
 2192              		.weak	HAL_CAN_TxMailbox0AbortCallback
 2193              		.syntax unified
 2194              		.thumb
 2195              		.thumb_func
 2196              		.fpu softvfp
 2198              	HAL_CAN_TxMailbox0AbortCallback:
 2199              	.LVL167:
 2200              	.LFB153:
2178:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2179:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2180:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
2181:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2182:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2183:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2184:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2185:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
2186:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2201              		.loc 1 2186 1 is_stmt 1 view -0
 2202              		.cfi_startproc
 2203              		@ args = 0, pretend = 0, frame = 0
 2204              		@ frame_needed = 0, uses_anonymous_args = 0
 2205              		@ link register save eliminated.
2187:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2188:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2206              		.loc 1 2188 3 view .LVU716
2189:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2190:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2191:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
2192:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2193:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2194:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2207              		.loc 1 2194 1 is_stmt 0 view .LVU717
 2208 0000 7047     		bx	lr
 2209              		.cfi_endproc
 2210              	.LFE153:
 2212              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
 2213              		.align	1
 2214              		.weak	HAL_CAN_TxMailbox1AbortCallback
 2215              		.syntax unified
 2216              		.thumb
 2217              		.thumb_func
 2218              		.fpu softvfp
 2220              	HAL_CAN_TxMailbox1AbortCallback:
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 101


 2221              	.LVL168:
 2222              	.LFB154:
2195:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2196:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2197:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
2198:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2199:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2200:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2201:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2202:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
2203:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2223              		.loc 1 2203 1 is_stmt 1 view -0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 0
 2226              		@ frame_needed = 0, uses_anonymous_args = 0
 2227              		@ link register save eliminated.
2204:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2205:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2228              		.loc 1 2205 3 view .LVU719
2206:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2207:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2208:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
2209:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2210:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2211:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2229              		.loc 1 2211 1 is_stmt 0 view .LVU720
 2230 0000 7047     		bx	lr
 2231              		.cfi_endproc
 2232              	.LFE154:
 2234              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
 2235              		.align	1
 2236              		.weak	HAL_CAN_TxMailbox2AbortCallback
 2237              		.syntax unified
 2238              		.thumb
 2239              		.thumb_func
 2240              		.fpu softvfp
 2242              	HAL_CAN_TxMailbox2AbortCallback:
 2243              	.LVL169:
 2244              	.LFB155:
2212:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2213:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2214:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
2215:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2216:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2217:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2218:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2219:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
2220:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2245              		.loc 1 2220 1 is_stmt 1 view -0
 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 0
 2248              		@ frame_needed = 0, uses_anonymous_args = 0
 2249              		@ link register save eliminated.
2221:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2222:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2250              		.loc 1 2222 3 view .LVU722
2223:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 102


2224:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2225:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
2226:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2227:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2228:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2251              		.loc 1 2228 1 is_stmt 0 view .LVU723
 2252 0000 7047     		bx	lr
 2253              		.cfi_endproc
 2254              	.LFE155:
 2256              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 2257              		.align	1
 2258              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 2259              		.syntax unified
 2260              		.thumb
 2261              		.thumb_func
 2262              		.fpu softvfp
 2264              	HAL_CAN_RxFifo0MsgPendingCallback:
 2265              	.LVL170:
 2266              	.LFB156:
2229:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2230:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2231:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
2232:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2233:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2234:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2235:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2236:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
2237:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2267              		.loc 1 2237 1 is_stmt 1 view -0
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 0
 2270              		@ frame_needed = 0, uses_anonymous_args = 0
 2271              		@ link register save eliminated.
2238:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2239:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2272              		.loc 1 2239 3 view .LVU725
2240:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2241:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2242:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
2243:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2244:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2245:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2273              		.loc 1 2245 1 is_stmt 0 view .LVU726
 2274 0000 7047     		bx	lr
 2275              		.cfi_endproc
 2276              	.LFE156:
 2278              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 2279              		.align	1
 2280              		.weak	HAL_CAN_RxFifo0FullCallback
 2281              		.syntax unified
 2282              		.thumb
 2283              		.thumb_func
 2284              		.fpu softvfp
 2286              	HAL_CAN_RxFifo0FullCallback:
 2287              	.LVL171:
 2288              	.LFB157:
2246:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 103


2247:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2248:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
2249:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2250:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2251:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2252:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2253:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
2254:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2289              		.loc 1 2254 1 is_stmt 1 view -0
 2290              		.cfi_startproc
 2291              		@ args = 0, pretend = 0, frame = 0
 2292              		@ frame_needed = 0, uses_anonymous_args = 0
 2293              		@ link register save eliminated.
2255:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2256:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2294              		.loc 1 2256 3 view .LVU728
2257:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2258:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2259:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
2260:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             file
2261:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2262:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2295              		.loc 1 2262 1 is_stmt 0 view .LVU729
 2296 0000 7047     		bx	lr
 2297              		.cfi_endproc
 2298              	.LFE157:
 2300              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 2301              		.align	1
 2302              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 2303              		.syntax unified
 2304              		.thumb
 2305              		.thumb_func
 2306              		.fpu softvfp
 2308              	HAL_CAN_RxFifo1MsgPendingCallback:
 2309              	.LVL172:
 2310              	.LFB158:
2263:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2264:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2265:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
2266:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2267:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2268:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2269:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2270:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
2271:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2311              		.loc 1 2271 1 is_stmt 1 view -0
 2312              		.cfi_startproc
 2313              		@ args = 0, pretend = 0, frame = 0
 2314              		@ frame_needed = 0, uses_anonymous_args = 0
 2315              		@ link register save eliminated.
2272:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2273:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2316              		.loc 1 2273 3 view .LVU731
2274:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2275:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2276:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
2277:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 104


2278:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2279:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2317              		.loc 1 2279 1 is_stmt 0 view .LVU732
 2318 0000 7047     		bx	lr
 2319              		.cfi_endproc
 2320              	.LFE158:
 2322              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 2323              		.align	1
 2324              		.weak	HAL_CAN_RxFifo1FullCallback
 2325              		.syntax unified
 2326              		.thumb
 2327              		.thumb_func
 2328              		.fpu softvfp
 2330              	HAL_CAN_RxFifo1FullCallback:
 2331              	.LVL173:
 2332              	.LFB159:
2280:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2281:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2282:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
2283:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2284:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2285:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2286:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2287:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
2288:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2333              		.loc 1 2288 1 is_stmt 1 view -0
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 0
 2336              		@ frame_needed = 0, uses_anonymous_args = 0
 2337              		@ link register save eliminated.
2289:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2290:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2338              		.loc 1 2290 3 view .LVU734
2291:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2292:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2293:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
2294:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             file
2295:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2296:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2339              		.loc 1 2296 1 is_stmt 0 view .LVU735
 2340 0000 7047     		bx	lr
 2341              		.cfi_endproc
 2342              	.LFE159:
 2344              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 2345              		.align	1
 2346              		.weak	HAL_CAN_SleepCallback
 2347              		.syntax unified
 2348              		.thumb
 2349              		.thumb_func
 2350              		.fpu softvfp
 2352              	HAL_CAN_SleepCallback:
 2353              	.LVL174:
 2354              	.LFB160:
2297:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2298:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2299:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Sleep callback.
2300:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 105


2301:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2302:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2303:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2304:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
2305:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2355              		.loc 1 2305 1 is_stmt 1 view -0
 2356              		.cfi_startproc
 2357              		@ args = 0, pretend = 0, frame = 0
 2358              		@ frame_needed = 0, uses_anonymous_args = 0
 2359              		@ link register save eliminated.
2306:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2307:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2360              		.loc 1 2307 3 view .LVU737
2308:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2309:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2310:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
2311:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2312:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2361              		.loc 1 2312 1 is_stmt 0 view .LVU738
 2362 0000 7047     		bx	lr
 2363              		.cfi_endproc
 2364              	.LFE160:
 2366              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
 2367              		.align	1
 2368              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 2369              		.syntax unified
 2370              		.thumb
 2371              		.thumb_func
 2372              		.fpu softvfp
 2374              	HAL_CAN_WakeUpFromRxMsgCallback:
 2375              	.LVL175:
 2376              	.LFB161:
2313:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2314:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2315:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
2316:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2317:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2318:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2319:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2320:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
2321:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2377              		.loc 1 2321 1 is_stmt 1 view -0
 2378              		.cfi_startproc
 2379              		@ args = 0, pretend = 0, frame = 0
 2380              		@ frame_needed = 0, uses_anonymous_args = 0
 2381              		@ link register save eliminated.
2322:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2323:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2382              		.loc 1 2323 3 view .LVU740
2324:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2325:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2326:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
2327:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2328:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2329:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2383              		.loc 1 2329 1 is_stmt 0 view .LVU741
 2384 0000 7047     		bx	lr
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 106


 2385              		.cfi_endproc
 2386              	.LFE161:
 2388              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2389              		.align	1
 2390              		.weak	HAL_CAN_ErrorCallback
 2391              		.syntax unified
 2392              		.thumb
 2393              		.thumb_func
 2394              		.fpu softvfp
 2396              	HAL_CAN_ErrorCallback:
 2397              	.LVL176:
 2398              	.LFB162:
2330:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2331:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2332:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Error CAN callback.
2333:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2334:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2335:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2336:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2337:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
2338:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2399              		.loc 1 2338 1 is_stmt 1 view -0
 2400              		.cfi_startproc
 2401              		@ args = 0, pretend = 0, frame = 0
 2402              		@ frame_needed = 0, uses_anonymous_args = 0
 2403              		@ link register save eliminated.
2339:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2340:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2404              		.loc 1 2340 3 view .LVU743
2341:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2342:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2343:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
2344:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2345:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2405              		.loc 1 2345 1 is_stmt 0 view .LVU744
 2406 0000 7047     		bx	lr
 2407              		.cfi_endproc
 2408              	.LFE162:
 2410              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2411              		.align	1
 2412              		.global	HAL_CAN_IRQHandler
 2413              		.syntax unified
 2414              		.thumb
 2415              		.thumb_func
 2416              		.fpu softvfp
 2418              	HAL_CAN_IRQHandler:
 2419              	.LVL177:
 2420              	.LFB149:
1724:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2421              		.loc 1 1724 1 is_stmt 1 view -0
 2422              		.cfi_startproc
 2423              		@ args = 0, pretend = 0, frame = 0
 2424              		@ frame_needed = 0, uses_anonymous_args = 0
1724:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2425              		.loc 1 1724 1 is_stmt 0 view .LVU746
 2426 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2427              	.LCFI15:
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 107


 2428              		.cfi_def_cfa_offset 40
 2429              		.cfi_offset 3, -40
 2430              		.cfi_offset 4, -36
 2431              		.cfi_offset 5, -32
 2432              		.cfi_offset 6, -28
 2433              		.cfi_offset 7, -24
 2434              		.cfi_offset 8, -20
 2435              		.cfi_offset 9, -16
 2436              		.cfi_offset 10, -12
 2437              		.cfi_offset 11, -8
 2438              		.cfi_offset 14, -4
 2439 0004 0546     		mov	r5, r0
1725:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2440              		.loc 1 1725 3 is_stmt 1 view .LVU747
 2441              	.LVL178:
1726:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2442              		.loc 1 1726 3 view .LVU748
1726:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2443              		.loc 1 1726 25 is_stmt 0 view .LVU749
 2444 0006 0368     		ldr	r3, [r0]
1726:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2445              		.loc 1 1726 12 view .LVU750
 2446 0008 5C69     		ldr	r4, [r3, #20]
 2447              	.LVL179:
1727:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2448              		.loc 1 1727 3 is_stmt 1 view .LVU751
1727:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2449              		.loc 1 1727 12 is_stmt 0 view .LVU752
 2450 000a D3F80480 		ldr	r8, [r3, #4]
 2451              	.LVL180:
1728:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2452              		.loc 1 1728 3 is_stmt 1 view .LVU753
1728:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2453              		.loc 1 1728 12 is_stmt 0 view .LVU754
 2454 000e 9F68     		ldr	r7, [r3, #8]
 2455              	.LVL181:
1729:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2456              		.loc 1 1729 3 is_stmt 1 view .LVU755
1729:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2457              		.loc 1 1729 12 is_stmt 0 view .LVU756
 2458 0010 D3F80CB0 		ldr	fp, [r3, #12]
 2459              	.LVL182:
1730:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2460              		.loc 1 1730 3 is_stmt 1 view .LVU757
1730:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2461              		.loc 1 1730 12 is_stmt 0 view .LVU758
 2462 0014 D3F810A0 		ldr	r10, [r3, #16]
 2463              	.LVL183:
1731:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2464              		.loc 1 1731 3 is_stmt 1 view .LVU759
1731:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2465              		.loc 1 1731 12 is_stmt 0 view .LVU760
 2466 0018 D3F81890 		ldr	r9, [r3, #24]
 2467              	.LVL184:
1734:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2468              		.loc 1 1734 3 is_stmt 1 view .LVU761
1734:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 108


 2469              		.loc 1 1734 6 is_stmt 0 view .LVU762
 2470 001c 14F00106 		ands	r6, r4, #1
 2471 0020 3BD0     		beq	.L167
1737:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2472              		.loc 1 1737 5 is_stmt 1 view .LVU763
1737:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2473              		.loc 1 1737 8 is_stmt 0 view .LVU764
 2474 0022 17F00106 		ands	r6, r7, #1
 2475 0026 16D0     		beq	.L168
1740:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2476              		.loc 1 1740 7 is_stmt 1 view .LVU765
 2477 0028 0122     		movs	r2, #1
 2478 002a 9A60     		str	r2, [r3, #8]
1742:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 2479              		.loc 1 1742 7 view .LVU766
1742:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 2480              		.loc 1 1742 10 is_stmt 0 view .LVU767
 2481 002c 17F0020F 		tst	r7, #2
 2482 0030 08D1     		bne	.L202
1755:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2483              		.loc 1 1755 9 is_stmt 1 view .LVU768
1755:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2484              		.loc 1 1755 12 is_stmt 0 view .LVU769
 2485 0032 17F0040F 		tst	r7, #4
 2486 0036 0CD1     		bne	.L199
1760:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2487              		.loc 1 1760 14 is_stmt 1 view .LVU770
1760:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2488              		.loc 1 1760 17 is_stmt 0 view .LVU771
 2489 0038 17F00806 		ands	r6, r7, #8
 2490 003c 06D0     		beq	.L203
1763:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2491              		.loc 1 1763 21 view .LVU772
 2492 003e 4FF48056 		mov	r6, #4096
 2493 0042 08E0     		b	.L168
 2494              	.L202:
1750:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2495              		.loc 1 1750 9 is_stmt 1 view .LVU773
 2496 0044 FFF7FEFF 		bl	HAL_CAN_TxMailbox0CompleteCallback
 2497              	.LVL185:
1725:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2498              		.loc 1 1725 12 is_stmt 0 view .LVU774
 2499 0048 0026     		movs	r6, #0
 2500 004a 04E0     		b	.L168
 2501              	.LVL186:
 2502              	.L203:
1773:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2503              		.loc 1 1773 11 is_stmt 1 view .LVU775
 2504 004c FFF7FEFF 		bl	HAL_CAN_TxMailbox0AbortCallback
 2505              	.LVL187:
1773:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2506              		.loc 1 1773 11 is_stmt 0 view .LVU776
 2507 0050 01E0     		b	.L168
 2508              	.LVL188:
 2509              	.L199:
1758:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2510              		.loc 1 1758 21 view .LVU777
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 109


 2511 0052 4FF40066 		mov	r6, #2048
 2512              	.LVL189:
 2513              	.L168:
1780:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2514              		.loc 1 1780 5 is_stmt 1 view .LVU778
1780:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2515              		.loc 1 1780 8 is_stmt 0 view .LVU779
 2516 0056 17F4807F 		tst	r7, #256
 2517 005a 0DD0     		beq	.L170
1783:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2518              		.loc 1 1783 7 is_stmt 1 view .LVU780
 2519 005c 2B68     		ldr	r3, [r5]
 2520 005e 4FF48072 		mov	r2, #256
 2521 0062 9A60     		str	r2, [r3, #8]
1785:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 2522              		.loc 1 1785 7 view .LVU781
1785:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 2523              		.loc 1 1785 10 is_stmt 0 view .LVU782
 2524 0064 17F4007F 		tst	r7, #512
 2525 0068 40F08680 		bne	.L204
1798:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2526              		.loc 1 1798 9 is_stmt 1 view .LVU783
1798:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2527              		.loc 1 1798 12 is_stmt 0 view .LVU784
 2528 006c 17F4806F 		tst	r7, #1024
 2529 0070 00F08680 		beq	.L172
1801:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2530              		.loc 1 1801 11 is_stmt 1 view .LVU785
1801:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2531              		.loc 1 1801 21 is_stmt 0 view .LVU786
 2532 0074 46F40056 		orr	r6, r6, #8192
 2533              	.LVL190:
 2534              	.L170:
1823:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2535              		.loc 1 1823 5 is_stmt 1 view .LVU787
1823:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2536              		.loc 1 1823 8 is_stmt 0 view .LVU788
 2537 0078 17F4803F 		tst	r7, #65536
 2538 007c 0DD0     		beq	.L167
1826:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2539              		.loc 1 1826 7 is_stmt 1 view .LVU789
 2540 007e 2B68     		ldr	r3, [r5]
 2541 0080 4FF48032 		mov	r2, #65536
 2542 0084 9A60     		str	r2, [r3, #8]
1828:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 2543              		.loc 1 1828 7 view .LVU790
1828:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 2544              		.loc 1 1828 10 is_stmt 0 view .LVU791
 2545 0086 17F4003F 		tst	r7, #131072
 2546 008a 40F08380 		bne	.L205
1841:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2547              		.loc 1 1841 9 is_stmt 1 view .LVU792
1841:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2548              		.loc 1 1841 12 is_stmt 0 view .LVU793
 2549 008e 17F4802F 		tst	r7, #262144
 2550 0092 00F08380 		beq	.L175
1844:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 110


 2551              		.loc 1 1844 11 is_stmt 1 view .LVU794
1844:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2552              		.loc 1 1844 21 is_stmt 0 view .LVU795
 2553 0096 46F40046 		orr	r6, r6, #32768
 2554              	.LVL191:
 2555              	.L167:
1867:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2556              		.loc 1 1867 3 is_stmt 1 view .LVU796
1867:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2557              		.loc 1 1867 6 is_stmt 0 view .LVU797
 2558 009a 14F0080F 		tst	r4, #8
 2559 009e 07D0     		beq	.L177
1869:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2560              		.loc 1 1869 5 is_stmt 1 view .LVU798
1869:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2561              		.loc 1 1869 8 is_stmt 0 view .LVU799
 2562 00a0 1BF0100F 		tst	fp, #16
 2563 00a4 04D0     		beq	.L177
1872:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2564              		.loc 1 1872 7 is_stmt 1 view .LVU800
1872:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2565              		.loc 1 1872 17 is_stmt 0 view .LVU801
 2566 00a6 46F40076 		orr	r6, r6, #512
 2567              	.LVL192:
1875:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2568              		.loc 1 1875 7 is_stmt 1 view .LVU802
 2569 00aa 2B68     		ldr	r3, [r5]
 2570 00ac 1022     		movs	r2, #16
 2571 00ae DA60     		str	r2, [r3, #12]
 2572              	.L177:
1880:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2573              		.loc 1 1880 3 view .LVU803
1880:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2574              		.loc 1 1880 6 is_stmt 0 view .LVU804
 2575 00b0 14F0040F 		tst	r4, #4
 2576 00b4 02D0     		beq	.L178
1882:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2577              		.loc 1 1882 5 is_stmt 1 view .LVU805
1882:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2578              		.loc 1 1882 8 is_stmt 0 view .LVU806
 2579 00b6 1BF0080F 		tst	fp, #8
 2580 00ba 79D1     		bne	.L206
 2581              	.L178:
1899:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2582              		.loc 1 1899 3 is_stmt 1 view .LVU807
1899:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2583              		.loc 1 1899 6 is_stmt 0 view .LVU808
 2584 00bc 14F0020F 		tst	r4, #2
 2585 00c0 04D0     		beq	.L179
1902:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2586              		.loc 1 1902 5 is_stmt 1 view .LVU809
1902:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2587              		.loc 1 1902 14 is_stmt 0 view .LVU810
 2588 00c2 2B68     		ldr	r3, [r5]
1902:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2589              		.loc 1 1902 24 view .LVU811
 2590 00c4 DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 111


1902:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2591              		.loc 1 1902 8 view .LVU812
 2592 00c6 13F0030F 		tst	r3, #3
 2593 00ca 78D1     		bne	.L207
 2594              	.L179:
1916:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2595              		.loc 1 1916 3 is_stmt 1 view .LVU813
1916:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2596              		.loc 1 1916 6 is_stmt 0 view .LVU814
 2597 00cc 14F0400F 		tst	r4, #64
 2598 00d0 07D0     		beq	.L180
1918:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2599              		.loc 1 1918 5 is_stmt 1 view .LVU815
1918:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2600              		.loc 1 1918 8 is_stmt 0 view .LVU816
 2601 00d2 1AF0100F 		tst	r10, #16
 2602 00d6 04D0     		beq	.L180
1921:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2603              		.loc 1 1921 7 is_stmt 1 view .LVU817
1921:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2604              		.loc 1 1921 17 is_stmt 0 view .LVU818
 2605 00d8 46F48066 		orr	r6, r6, #1024
 2606              	.LVL193:
1924:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2607              		.loc 1 1924 7 is_stmt 1 view .LVU819
 2608 00dc 2B68     		ldr	r3, [r5]
 2609 00de 1022     		movs	r2, #16
 2610 00e0 1A61     		str	r2, [r3, #16]
 2611              	.L180:
1929:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2612              		.loc 1 1929 3 view .LVU820
1929:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2613              		.loc 1 1929 6 is_stmt 0 view .LVU821
 2614 00e2 14F0200F 		tst	r4, #32
 2615 00e6 02D0     		beq	.L181
1931:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2616              		.loc 1 1931 5 is_stmt 1 view .LVU822
1931:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2617              		.loc 1 1931 8 is_stmt 0 view .LVU823
 2618 00e8 1AF0080F 		tst	r10, #8
 2619 00ec 6BD1     		bne	.L208
 2620              	.L181:
1948:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2621              		.loc 1 1948 3 is_stmt 1 view .LVU824
1948:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2622              		.loc 1 1948 6 is_stmt 0 view .LVU825
 2623 00ee 14F0100F 		tst	r4, #16
 2624 00f2 04D0     		beq	.L182
1951:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2625              		.loc 1 1951 5 is_stmt 1 view .LVU826
1951:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2626              		.loc 1 1951 14 is_stmt 0 view .LVU827
 2627 00f4 2B68     		ldr	r3, [r5]
1951:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2628              		.loc 1 1951 24 view .LVU828
 2629 00f6 1B69     		ldr	r3, [r3, #16]
1951:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 112


 2630              		.loc 1 1951 8 view .LVU829
 2631 00f8 13F0030F 		tst	r3, #3
 2632 00fc 6AD1     		bne	.L209
 2633              	.L182:
1965:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2634              		.loc 1 1965 3 is_stmt 1 view .LVU830
1965:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2635              		.loc 1 1965 6 is_stmt 0 view .LVU831
 2636 00fe 14F4003F 		tst	r4, #131072
 2637 0102 02D0     		beq	.L183
1967:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2638              		.loc 1 1967 5 is_stmt 1 view .LVU832
1967:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2639              		.loc 1 1967 8 is_stmt 0 view .LVU833
 2640 0104 18F0100F 		tst	r8, #16
 2641 0108 68D1     		bne	.L210
 2642              	.L183:
1984:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2643              		.loc 1 1984 3 is_stmt 1 view .LVU834
1984:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2644              		.loc 1 1984 6 is_stmt 0 view .LVU835
 2645 010a 14F4803F 		tst	r4, #65536
 2646 010e 02D0     		beq	.L184
1986:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2647              		.loc 1 1986 5 is_stmt 1 view .LVU836
1986:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2648              		.loc 1 1986 8 is_stmt 0 view .LVU837
 2649 0110 18F0080F 		tst	r8, #8
 2650 0114 69D1     		bne	.L211
 2651              	.L184:
2003:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2652              		.loc 1 2003 3 is_stmt 1 view .LVU838
2003:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2653              		.loc 1 2003 6 is_stmt 0 view .LVU839
 2654 0116 14F4004F 		tst	r4, #32768
 2655 011a 7AD0     		beq	.L185
2005:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2656              		.loc 1 2005 5 is_stmt 1 view .LVU840
2005:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2657              		.loc 1 2005 8 is_stmt 0 view .LVU841
 2658 011c 18F0040F 		tst	r8, #4
 2659 0120 74D0     		beq	.L186
2008:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2660              		.loc 1 2008 7 is_stmt 1 view .LVU842
2008:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2661              		.loc 1 2008 10 is_stmt 0 view .LVU843
 2662 0122 14F4807F 		tst	r4, #256
 2663 0126 04D0     		beq	.L187
2008:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2664              		.loc 1 2008 55 discriminator 1 view .LVU844
 2665 0128 19F0010F 		tst	r9, #1
 2666 012c 01D0     		beq	.L187
2012:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2667              		.loc 1 2012 9 is_stmt 1 view .LVU845
2012:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2668              		.loc 1 2012 19 is_stmt 0 view .LVU846
 2669 012e 46F00106 		orr	r6, r6, #1
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 113


 2670              	.LVL194:
 2671              	.L187:
2018:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2672              		.loc 1 2018 7 is_stmt 1 view .LVU847
2018:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2673              		.loc 1 2018 10 is_stmt 0 view .LVU848
 2674 0132 14F4007F 		tst	r4, #512
 2675 0136 04D0     		beq	.L188
2018:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2676              		.loc 1 2018 55 discriminator 1 view .LVU849
 2677 0138 19F0020F 		tst	r9, #2
 2678 013c 01D0     		beq	.L188
2022:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2679              		.loc 1 2022 9 is_stmt 1 view .LVU850
2022:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2680              		.loc 1 2022 19 is_stmt 0 view .LVU851
 2681 013e 46F00206 		orr	r6, r6, #2
 2682              	.LVL195:
 2683              	.L188:
2028:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2684              		.loc 1 2028 7 is_stmt 1 view .LVU852
2028:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2685              		.loc 1 2028 10 is_stmt 0 view .LVU853
 2686 0142 14F4806F 		tst	r4, #1024
 2687 0146 04D0     		beq	.L189
2028:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2688              		.loc 1 2028 48 discriminator 1 view .LVU854
 2689 0148 19F0040F 		tst	r9, #4
 2690 014c 01D0     		beq	.L189
2032:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2691              		.loc 1 2032 9 is_stmt 1 view .LVU855
2032:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2692              		.loc 1 2032 19 is_stmt 0 view .LVU856
 2693 014e 46F00406 		orr	r6, r6, #4
 2694              	.LVL196:
 2695              	.L189:
2038:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2696              		.loc 1 2038 7 is_stmt 1 view .LVU857
2038:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2697              		.loc 1 2038 10 is_stmt 0 view .LVU858
 2698 0152 14F4006F 		tst	r4, #2048
 2699 0156 59D0     		beq	.L186
2038:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2700              		.loc 1 2038 57 discriminator 1 view .LVU859
 2701 0158 19F07009 		ands	r9, r9, #112
 2702              	.LVL197:
2038:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2703              		.loc 1 2038 57 discriminator 1 view .LVU860
 2704 015c 56D0     		beq	.L186
2041:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2705              		.loc 1 2041 9 is_stmt 1 view .LVU861
 2706 015e B9F1400F 		cmp	r9, #64
 2707 0162 65D0     		beq	.L190
 2708 0164 58D8     		bhi	.L191
 2709 0166 B9F1200F 		cmp	r9, #32
 2710 016a 5ED0     		beq	.L192
 2711 016c B9F1300F 		cmp	r9, #48
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 114


 2712 0170 42D1     		bne	.L212
2053:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2713              		.loc 1 2053 13 view .LVU862
2053:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2714              		.loc 1 2053 23 is_stmt 0 view .LVU863
 2715 0172 46F02006 		orr	r6, r6, #32
 2716              	.LVL198:
2054:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 2717              		.loc 1 2054 13 is_stmt 1 view .LVU864
 2718 0176 44E0     		b	.L195
 2719              	.LVL199:
 2720              	.L204:
1793:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2721              		.loc 1 1793 9 view .LVU865
 2722 0178 2846     		mov	r0, r5
 2723 017a FFF7FEFF 		bl	HAL_CAN_TxMailbox1CompleteCallback
 2724              	.LVL200:
 2725 017e 7BE7     		b	.L170
 2726              	.L172:
1803:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2727              		.loc 1 1803 14 view .LVU866
1803:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2728              		.loc 1 1803 17 is_stmt 0 view .LVU867
 2729 0180 17F4006F 		tst	r7, #2048
 2730 0184 02D0     		beq	.L173
1806:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2731              		.loc 1 1806 11 is_stmt 1 view .LVU868
1806:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2732              		.loc 1 1806 21 is_stmt 0 view .LVU869
 2733 0186 46F48046 		orr	r6, r6, #16384
 2734              	.LVL201:
1806:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2735              		.loc 1 1806 21 view .LVU870
 2736 018a 75E7     		b	.L170
 2737              	.L173:
1816:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2738              		.loc 1 1816 11 is_stmt 1 view .LVU871
 2739 018c 2846     		mov	r0, r5
 2740 018e FFF7FEFF 		bl	HAL_CAN_TxMailbox1AbortCallback
 2741              	.LVL202:
 2742 0192 71E7     		b	.L170
 2743              	.L205:
1836:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2744              		.loc 1 1836 9 view .LVU872
 2745 0194 2846     		mov	r0, r5
 2746 0196 FFF7FEFF 		bl	HAL_CAN_TxMailbox2CompleteCallback
 2747              	.LVL203:
 2748 019a 7EE7     		b	.L167
 2749              	.L175:
1846:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2750              		.loc 1 1846 14 view .LVU873
1846:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2751              		.loc 1 1846 17 is_stmt 0 view .LVU874
 2752 019c 17F4002F 		tst	r7, #524288
 2753 01a0 02D0     		beq	.L176
1849:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2754              		.loc 1 1849 11 is_stmt 1 view .LVU875
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 115


1849:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2755              		.loc 1 1849 21 is_stmt 0 view .LVU876
 2756 01a2 46F48036 		orr	r6, r6, #65536
 2757              	.LVL204:
1849:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2758              		.loc 1 1849 21 view .LVU877
 2759 01a6 78E7     		b	.L167
 2760              	.L176:
1859:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2761              		.loc 1 1859 11 is_stmt 1 view .LVU878
 2762 01a8 2846     		mov	r0, r5
 2763 01aa FFF7FEFF 		bl	HAL_CAN_TxMailbox2AbortCallback
 2764              	.LVL205:
 2765 01ae 74E7     		b	.L167
 2766              	.L206:
1885:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2767              		.loc 1 1885 7 view .LVU879
 2768 01b0 2B68     		ldr	r3, [r5]
 2769 01b2 0822     		movs	r2, #8
 2770 01b4 DA60     		str	r2, [r3, #12]
1893:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2771              		.loc 1 1893 7 view .LVU880
 2772 01b6 2846     		mov	r0, r5
 2773 01b8 FFF7FEFF 		bl	HAL_CAN_RxFifo0FullCallback
 2774              	.LVL206:
 2775 01bc 7EE7     		b	.L178
 2776              	.L207:
1910:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2777              		.loc 1 1910 7 view .LVU881
 2778 01be 2846     		mov	r0, r5
 2779 01c0 FFF7FEFF 		bl	HAL_CAN_RxFifo0MsgPendingCallback
 2780              	.LVL207:
 2781 01c4 82E7     		b	.L179
 2782              	.L208:
1934:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2783              		.loc 1 1934 7 view .LVU882
 2784 01c6 2B68     		ldr	r3, [r5]
 2785 01c8 0822     		movs	r2, #8
 2786 01ca 1A61     		str	r2, [r3, #16]
1942:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2787              		.loc 1 1942 7 view .LVU883
 2788 01cc 2846     		mov	r0, r5
 2789 01ce FFF7FEFF 		bl	HAL_CAN_RxFifo1FullCallback
 2790              	.LVL208:
 2791 01d2 8CE7     		b	.L181
 2792              	.L209:
1959:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2793              		.loc 1 1959 7 view .LVU884
 2794 01d4 2846     		mov	r0, r5
 2795 01d6 FFF7FEFF 		bl	HAL_CAN_RxFifo1MsgPendingCallback
 2796              	.LVL209:
 2797 01da 90E7     		b	.L182
 2798              	.L210:
1970:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2799              		.loc 1 1970 7 view .LVU885
 2800 01dc 2B68     		ldr	r3, [r5]
 2801 01de 1022     		movs	r2, #16
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 116


 2802 01e0 5A60     		str	r2, [r3, #4]
1978:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2803              		.loc 1 1978 7 view .LVU886
 2804 01e2 2846     		mov	r0, r5
 2805 01e4 FFF7FEFF 		bl	HAL_CAN_SleepCallback
 2806              	.LVL210:
 2807 01e8 8FE7     		b	.L183
 2808              	.L211:
1989:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2809              		.loc 1 1989 7 view .LVU887
 2810 01ea 2B68     		ldr	r3, [r5]
 2811 01ec 0822     		movs	r2, #8
 2812 01ee 5A60     		str	r2, [r3, #4]
1997:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2813              		.loc 1 1997 7 view .LVU888
 2814 01f0 2846     		mov	r0, r5
 2815 01f2 FFF7FEFF 		bl	HAL_CAN_WakeUpFromRxMsgCallback
 2816              	.LVL211:
 2817 01f6 8EE7     		b	.L184
 2818              	.LVL212:
 2819              	.L212:
2041:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2820              		.loc 1 2041 9 is_stmt 0 view .LVU889
 2821 01f8 B9F1100F 		cmp	r9, #16
 2822 01fc 01D1     		bne	.L195
2045:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2823              		.loc 1 2045 13 is_stmt 1 view .LVU890
2045:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2824              		.loc 1 2045 23 is_stmt 0 view .LVU891
 2825 01fe 46F00806 		orr	r6, r6, #8
 2826              	.LVL213:
2046:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
 2827              		.loc 1 2046 13 is_stmt 1 view .LVU892
 2828              	.L195:
2072:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 2829              		.loc 1 2072 9 view .LVU893
 2830 0202 2A68     		ldr	r2, [r5]
 2831 0204 9369     		ldr	r3, [r2, #24]
 2832 0206 23F07003 		bic	r3, r3, #112
 2833 020a 9361     		str	r3, [r2, #24]
 2834              	.L186:
2077:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2835              		.loc 1 2077 5 view .LVU894
 2836 020c 2B68     		ldr	r3, [r5]
 2837 020e 0422     		movs	r2, #4
 2838 0210 5A60     		str	r2, [r3, #4]
 2839              	.L185:
2081:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2840              		.loc 1 2081 3 view .LVU895
2081:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2841              		.loc 1 2081 6 is_stmt 0 view .LVU896
 2842 0212 9EB9     		cbnz	r6, .L213
 2843              	.LVL214:
 2844              	.L166:
2095:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2845              		.loc 1 2095 1 view .LVU897
 2846 0214 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 117


 2847              	.LVL215:
 2848              	.L191:
2041:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2849              		.loc 1 2041 9 view .LVU898
 2850 0218 B9F1500F 		cmp	r9, #80
 2851 021c 0BD0     		beq	.L196
 2852 021e B9F1600F 		cmp	r9, #96
 2853 0222 EED1     		bne	.L195
2065:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2854              		.loc 1 2065 13 is_stmt 1 view .LVU899
2065:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2855              		.loc 1 2065 23 is_stmt 0 view .LVU900
 2856 0224 46F48076 		orr	r6, r6, #256
 2857              	.LVL216:
2066:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           default:
 2858              		.loc 1 2066 13 is_stmt 1 view .LVU901
 2859 0228 EBE7     		b	.L195
 2860              	.L192:
2049:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2861              		.loc 1 2049 13 view .LVU902
2049:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2862              		.loc 1 2049 23 is_stmt 0 view .LVU903
 2863 022a 46F01006 		orr	r6, r6, #16
 2864              	.LVL217:
2050:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 2865              		.loc 1 2050 13 is_stmt 1 view .LVU904
 2866 022e E8E7     		b	.L195
 2867              	.L190:
2057:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2868              		.loc 1 2057 13 view .LVU905
2057:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2869              		.loc 1 2057 23 is_stmt 0 view .LVU906
 2870 0230 46F04006 		orr	r6, r6, #64
 2871              	.LVL218:
2058:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 2872              		.loc 1 2058 13 is_stmt 1 view .LVU907
 2873 0234 E5E7     		b	.L195
 2874              	.L196:
2061:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2875              		.loc 1 2061 13 view .LVU908
2061:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2876              		.loc 1 2061 23 is_stmt 0 view .LVU909
 2877 0236 46F08006 		orr	r6, r6, #128
 2878              	.LVL219:
2062:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 2879              		.loc 1 2062 13 is_stmt 1 view .LVU910
 2880 023a E2E7     		b	.L195
 2881              	.L213:
2084:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2882              		.loc 1 2084 5 view .LVU911
2084:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2883              		.loc 1 2084 21 is_stmt 0 view .LVU912
 2884 023c 6B6A     		ldr	r3, [r5, #36]
 2885 023e 1E43     		orrs	r6, r6, r3
 2886              	.LVL220:
2084:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2887              		.loc 1 2084 21 view .LVU913
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 118


 2888 0240 6E62     		str	r6, [r5, #36]
2092:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2889              		.loc 1 2092 5 is_stmt 1 view .LVU914
 2890 0242 2846     		mov	r0, r5
 2891 0244 FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 2892              	.LVL221:
2095:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2893              		.loc 1 2095 1 is_stmt 0 view .LVU915
 2894 0248 E4E7     		b	.L166
 2895              		.cfi_endproc
 2896              	.LFE149:
 2898              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 2899              		.align	1
 2900              		.global	HAL_CAN_GetState
 2901              		.syntax unified
 2902              		.thumb
 2903              		.thumb_func
 2904              		.fpu softvfp
 2906              	HAL_CAN_GetState:
 2907              	.LVL222:
 2908              	.LFB163:
2346:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2347:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2348:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
2349:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2350:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2351:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
2352:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *  @brief   CAN Peripheral State functions
2353:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *
2354:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
2355:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2356:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             ##### Peripheral State and Error functions #####
2357:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2358:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
2359:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     This subsection provides functions allowing to :
2360:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
2361:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
2362:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
2363:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2364:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
2365:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
2366:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2367:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2368:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2369:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return the CAN state.
2370:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2371:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2372:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL state
2373:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2374:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(CAN_HandleTypeDef *hcan)
2375:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2909              		.loc 1 2375 1 is_stmt 1 view -0
 2910              		.cfi_startproc
 2911              		@ args = 0, pretend = 0, frame = 0
 2912              		@ frame_needed = 0, uses_anonymous_args = 0
 2913              		@ link register save eliminated.
 2914              		.loc 1 2375 1 is_stmt 0 view .LVU917
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 119


 2915 0000 0246     		mov	r2, r0
2376:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2916              		.loc 1 2376 3 is_stmt 1 view .LVU918
 2917              		.loc 1 2376 24 is_stmt 0 view .LVU919
 2918 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2919 0006 D8B2     		uxtb	r0, r3
 2920              	.LVL223:
2377:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2378:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2921              		.loc 1 2378 3 is_stmt 1 view .LVU920
 2922              		.loc 1 2378 38 is_stmt 0 view .LVU921
 2923 0008 013B     		subs	r3, r3, #1
 2924 000a DBB2     		uxtb	r3, r3
 2925              		.loc 1 2378 6 view .LVU922
 2926 000c 012B     		cmp	r3, #1
 2927 000e 00D9     		bls	.L218
 2928              	.LVL224:
 2929              	.L215:
2379:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2380:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2381:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
2382:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
2383:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2384:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Sleep mode is active */
2385:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
2386:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2387:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check sleep mode request flag */
2388:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
2389:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2390:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Sleep mode request is pending */
2391:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
2392:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2393:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
2394:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2395:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
2396:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2930              		.loc 1 2396 5 is_stmt 1 view .LVU923
2397:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2398:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2399:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return CAN state */
2400:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return state;
 2931              		.loc 1 2400 3 view .LVU924
2401:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2932              		.loc 1 2401 1 is_stmt 0 view .LVU925
 2933 0010 7047     		bx	lr
 2934              	.LVL225:
 2935              	.L218:
2382:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2936              		.loc 1 2382 5 is_stmt 1 view .LVU926
2382:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2937              		.loc 1 2382 14 is_stmt 0 view .LVU927
 2938 0012 1368     		ldr	r3, [r2]
2382:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2939              		.loc 1 2382 24 view .LVU928
 2940 0014 5A68     		ldr	r2, [r3, #4]
 2941              	.LVL226:
2382:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 120


 2942              		.loc 1 2382 8 view .LVU929
 2943 0016 12F0020F 		tst	r2, #2
 2944 001a 05D1     		bne	.L216
2388:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2945              		.loc 1 2388 10 is_stmt 1 view .LVU930
2388:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2946              		.loc 1 2388 29 is_stmt 0 view .LVU931
 2947 001c 1B68     		ldr	r3, [r3]
2388:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2948              		.loc 1 2388 13 view .LVU932
 2949 001e 13F0020F 		tst	r3, #2
 2950 0022 F5D0     		beq	.L215
2391:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2951              		.loc 1 2391 13 view .LVU933
 2952 0024 0320     		movs	r0, #3
 2953              	.LVL227:
2391:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2954              		.loc 1 2391 13 view .LVU934
 2955 0026 F3E7     		b	.L215
 2956              	.LVL228:
 2957              	.L216:
2385:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2958              		.loc 1 2385 13 view .LVU935
 2959 0028 0420     		movs	r0, #4
 2960              	.LVL229:
2385:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2961              		.loc 1 2385 13 view .LVU936
 2962 002a 7047     		bx	lr
 2963              		.cfi_endproc
 2964              	.LFE163:
 2966              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 2967              		.align	1
 2968              		.global	HAL_CAN_GetError
 2969              		.syntax unified
 2970              		.thumb
 2971              		.thumb_func
 2972              		.fpu softvfp
 2974              	HAL_CAN_GetError:
 2975              	.LVL230:
 2976              	.LFB164:
2402:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2403:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2404:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return the CAN error code.
2405:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2406:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2407:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval CAN Error Code
2408:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2409:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetError(CAN_HandleTypeDef *hcan)
2410:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2977              		.loc 1 2410 1 is_stmt 1 view -0
 2978              		.cfi_startproc
 2979              		@ args = 0, pretend = 0, frame = 0
 2980              		@ frame_needed = 0, uses_anonymous_args = 0
 2981              		@ link register save eliminated.
2411:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return CAN error code */
2412:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return hcan->ErrorCode;
 2982              		.loc 1 2412 3 view .LVU938
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 121


 2983              		.loc 1 2412 14 is_stmt 0 view .LVU939
 2984 0000 406A     		ldr	r0, [r0, #36]
 2985              	.LVL231:
2413:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2986              		.loc 1 2413 1 view .LVU940
 2987 0002 7047     		bx	lr
 2988              		.cfi_endproc
 2989              	.LFE164:
 2991              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
 2992              		.align	1
 2993              		.global	HAL_CAN_ResetError
 2994              		.syntax unified
 2995              		.thumb
 2996              		.thumb_func
 2997              		.fpu softvfp
 2999              	HAL_CAN_ResetError:
 3000              	.LVL232:
 3001              	.LFB165:
2414:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2415:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2416:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Reset the CAN error code.
2417:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2418:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2419:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
2420:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2421:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
2422:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3002              		.loc 1 2422 1 is_stmt 1 view -0
 3003              		.cfi_startproc
 3004              		@ args = 0, pretend = 0, frame = 0
 3005              		@ frame_needed = 0, uses_anonymous_args = 0
 3006              		@ link register save eliminated.
2423:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 3007              		.loc 1 2423 3 view .LVU942
2424:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3008              		.loc 1 2424 3 view .LVU943
 3009              		.loc 1 2424 24 is_stmt 0 view .LVU944
 3010 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 3011              	.LVL233:
2425:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2426:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 3012              		.loc 1 2426 3 is_stmt 1 view .LVU945
 3013              		.loc 1 2426 38 is_stmt 0 view .LVU946
 3014 0004 013B     		subs	r3, r3, #1
 3015              	.LVL234:
 3016              		.loc 1 2426 38 view .LVU947
 3017 0006 DBB2     		uxtb	r3, r3
 3018              		.loc 1 2426 6 view .LVU948
 3019 0008 012B     		cmp	r3, #1
 3020 000a 05D9     		bls	.L223
2427:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2428:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2429:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Reset CAN error code */
2430:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode = 0U;
2431:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2432:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
2433:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 122


2434:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
2435:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 3021              		.loc 1 2435 5 is_stmt 1 view .LVU949
 3022              		.loc 1 2435 21 is_stmt 0 view .LVU950
 3023 000c 436A     		ldr	r3, [r0, #36]
 3024 000e 43F48023 		orr	r3, r3, #262144
 3025 0012 4362     		str	r3, [r0, #36]
2436:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2437:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     status = HAL_ERROR;
 3026              		.loc 1 2437 5 is_stmt 1 view .LVU951
 3027              	.LVL235:
 3028              		.loc 1 2437 12 is_stmt 0 view .LVU952
 3029 0014 0120     		movs	r0, #1
 3030              	.LVL236:
2438:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2439:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2440:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return the status */
2441:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 3031              		.loc 1 2441 3 is_stmt 1 view .LVU953
2442:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3032              		.loc 1 2442 1 is_stmt 0 view .LVU954
 3033 0016 7047     		bx	lr
 3034              	.LVL237:
 3035              	.L223:
2430:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 3036              		.loc 1 2430 5 is_stmt 1 view .LVU955
2430:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 3037              		.loc 1 2430 21 is_stmt 0 view .LVU956
 3038 0018 0023     		movs	r3, #0
 3039 001a 4362     		str	r3, [r0, #36]
2423:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3040              		.loc 1 2423 21 view .LVU957
 3041 001c 1846     		mov	r0, r3
 3042              	.LVL238:
2423:Libraries/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3043              		.loc 1 2423 21 view .LVU958
 3044 001e 7047     		bx	lr
 3045              		.cfi_endproc
 3046              	.LFE165:
 3048              		.text
 3049              	.Letext0:
 3050              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\2020-q2-update\\arm-none-eabi\\inclu
 3051              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\2020-q2-update\\arm-none-eabi\\inclu
 3052              		.file 5 "Libraries/CMSIS/Include/core_cm4.h"
 3053              		.file 6 "Libraries/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3054              		.file 7 "Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 3055              		.file 8 "Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3056              		.file 9 "Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3057              		.file 10 "Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 3058              		.file 11 "Libraries/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 123


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_can.c
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:16     .text.HAL_CAN_MspInit:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:24     .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:40     .text.HAL_CAN_Init:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:47     .text.HAL_CAN_Init:00000000 HAL_CAN_Init
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:337    .text.HAL_CAN_MspDeInit:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:344    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:359    .text.HAL_CAN_ConfigFilter:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:366    .text.HAL_CAN_ConfigFilter:00000000 HAL_CAN_ConfigFilter
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:605    .text.HAL_CAN_ConfigFilter:0000012c $d
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:610    .text.HAL_CAN_Start:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:617    .text.HAL_CAN_Start:00000000 HAL_CAN_Start
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:715    .text.HAL_CAN_Stop:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:722    .text.HAL_CAN_Stop:00000000 HAL_CAN_Stop
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:821    .text.HAL_CAN_DeInit:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:828    .text.HAL_CAN_DeInit:00000000 HAL_CAN_DeInit
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:884    .text.HAL_CAN_RequestSleep:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:891    .text.HAL_CAN_RequestSleep:00000000 HAL_CAN_RequestSleep
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:940    .text.HAL_CAN_WakeUp:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:947    .text.HAL_CAN_WakeUp:00000000 HAL_CAN_WakeUp
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1044   .text.HAL_CAN_WakeUp:00000054 $d
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1049   .text.HAL_CAN_IsSleepActive:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1056   .text.HAL_CAN_IsSleepActive:00000000 HAL_CAN_IsSleepActive
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1106   .text.HAL_CAN_AddTxMessage:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1113   .text.HAL_CAN_AddTxMessage:00000000 HAL_CAN_AddTxMessage
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1337   .text.HAL_CAN_AbortTxRequest:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1344   .text.HAL_CAN_AbortTxRequest:00000000 HAL_CAN_AbortTxRequest
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1419   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1426   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 HAL_CAN_GetTxMailboxesFreeLevel
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1497   .text.HAL_CAN_IsTxMessagePending:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1504   .text.HAL_CAN_IsTxMessagePending:00000000 HAL_CAN_IsTxMessagePending
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1561   .text.HAL_CAN_GetTxTimestamp:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1568   .text.HAL_CAN_GetTxTimestamp:00000000 HAL_CAN_GetTxTimestamp
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1643   .text.HAL_CAN_GetRxMessage:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1650   .text.HAL_CAN_GetRxMessage:00000000 HAL_CAN_GetRxMessage
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1938   .text.HAL_CAN_GetRxFifoFillLevel:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:1945   .text.HAL_CAN_GetRxFifoFillLevel:00000000 HAL_CAN_GetRxFifoFillLevel
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2007   .text.HAL_CAN_ActivateNotification:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2014   .text.HAL_CAN_ActivateNotification:00000000 HAL_CAN_ActivateNotification
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2066   .text.HAL_CAN_DeactivateNotification:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2073   .text.HAL_CAN_DeactivateNotification:00000000 HAL_CAN_DeactivateNotification
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2125   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2132   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 HAL_CAN_TxMailbox0CompleteCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2147   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2154   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 HAL_CAN_TxMailbox1CompleteCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2169   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2176   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 HAL_CAN_TxMailbox2CompleteCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2191   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2198   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 HAL_CAN_TxMailbox0AbortCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2213   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2220   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 HAL_CAN_TxMailbox1AbortCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2235   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2242   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 HAL_CAN_TxMailbox2AbortCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2257   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2264   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2279   .text.HAL_CAN_RxFifo0FullCallback:00000000 $t
ARM GAS  C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s 			page 124


C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2286   .text.HAL_CAN_RxFifo0FullCallback:00000000 HAL_CAN_RxFifo0FullCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2301   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2308   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 HAL_CAN_RxFifo1MsgPendingCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2323   .text.HAL_CAN_RxFifo1FullCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2330   .text.HAL_CAN_RxFifo1FullCallback:00000000 HAL_CAN_RxFifo1FullCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2345   .text.HAL_CAN_SleepCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2352   .text.HAL_CAN_SleepCallback:00000000 HAL_CAN_SleepCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2367   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2374   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 HAL_CAN_WakeUpFromRxMsgCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2389   .text.HAL_CAN_ErrorCallback:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2396   .text.HAL_CAN_ErrorCallback:00000000 HAL_CAN_ErrorCallback
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2411   .text.HAL_CAN_IRQHandler:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2418   .text.HAL_CAN_IRQHandler:00000000 HAL_CAN_IRQHandler
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2899   .text.HAL_CAN_GetState:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2906   .text.HAL_CAN_GetState:00000000 HAL_CAN_GetState
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2967   .text.HAL_CAN_GetError:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2974   .text.HAL_CAN_GetError:00000000 HAL_CAN_GetError
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2992   .text.HAL_CAN_ResetError:00000000 $t
C:\Users\yzy\AppData\Local\Temp\ccTxdJgl.s:2999   .text.HAL_CAN_ResetError:00000000 HAL_CAN_ResetError

UNDEFINED SYMBOLS
HAL_GetTick
